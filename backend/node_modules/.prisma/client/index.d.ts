
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model roles
 * 
 */
export type roles = $Result.DefaultSelection<Prisma.$rolesPayload>
/**
 * Model finca
 * 
 */
export type finca = $Result.DefaultSelection<Prisma.$fincaPayload>
/**
 * Model usuarios
 * 
 */
export type usuarios = $Result.DefaultSelection<Prisma.$usuariosPayload>
/**
 * Model unidades
 * 
 */
export type unidades = $Result.DefaultSelection<Prisma.$unidadesPayload>
/**
 * Model tipo_insumo
 * 
 */
export type tipo_insumo = $Result.DefaultSelection<Prisma.$tipo_insumoPayload>
/**
 * Model insumos
 * 
 */
export type insumos = $Result.DefaultSelection<Prisma.$insumosPayload>
/**
 * Model tipo_evento
 * 
 */
export type tipo_evento = $Result.DefaultSelection<Prisma.$tipo_eventoPayload>
/**
 * Model razas
 * 
 */
export type razas = $Result.DefaultSelection<Prisma.$razasPayload>
/**
 * Model potreros
 * 
 */
export type potreros = $Result.DefaultSelection<Prisma.$potrerosPayload>
/**
 * Model lotes
 * 
 */
export type lotes = $Result.DefaultSelection<Prisma.$lotesPayload>
/**
 * Model animales
 * 
 */
export type animales = $Result.DefaultSelection<Prisma.$animalesPayload>
/**
 * Model proveedores
 * 
 */
export type proveedores = $Result.DefaultSelection<Prisma.$proveedoresPayload>
/**
 * Model compras
 * 
 */
export type compras = $Result.DefaultSelection<Prisma.$comprasPayload>
/**
 * Model detalle_compras
 * 
 */
export type detalle_compras = $Result.DefaultSelection<Prisma.$detalle_comprasPayload>
/**
 * Model evento_sanitario
 * 
 */
export type evento_sanitario = $Result.DefaultSelection<Prisma.$evento_sanitarioPayload>
/**
 * Model evento_insumo
 * 
 */
export type evento_insumo = $Result.DefaultSelection<Prisma.$evento_insumoPayload>
/**
 * Model alimentacion
 * 
 */
export type alimentacion = $Result.DefaultSelection<Prisma.$alimentacionPayload>
/**
 * Model pesajes
 * 
 */
export type pesajes = $Result.DefaultSelection<Prisma.$pesajesPayload>
/**
 * Model produccion_carne
 * 
 */
export type produccion_carne = $Result.DefaultSelection<Prisma.$produccion_carnePayload>
/**
 * Model produccion_lechera
 * 
 */
export type produccion_lechera = $Result.DefaultSelection<Prisma.$produccion_lecheraPayload>
/**
 * Model evento_monta
 * 
 */
export type evento_monta = $Result.DefaultSelection<Prisma.$evento_montaPayload>
/**
 * Model diagnostico_preñez
 * 
 */
export type diagnostico_preñez = $Result.DefaultSelection<Prisma.$diagnostico_preñezPayload>
/**
 * Model evento_parto
 * 
 */
export type evento_parto = $Result.DefaultSelection<Prisma.$evento_partoPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Roles
 * const roles = await prisma.roles.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Roles
   * const roles = await prisma.roles.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.roles`: Exposes CRUD operations for the **roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.roles.findMany()
    * ```
    */
  get roles(): Prisma.rolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.finca`: Exposes CRUD operations for the **finca** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Fincas
    * const fincas = await prisma.finca.findMany()
    * ```
    */
  get finca(): Prisma.fincaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.usuarios`: Exposes CRUD operations for the **usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuarios.findMany()
    * ```
    */
  get usuarios(): Prisma.usuariosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.unidades`: Exposes CRUD operations for the **unidades** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Unidades
    * const unidades = await prisma.unidades.findMany()
    * ```
    */
  get unidades(): Prisma.unidadesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipo_insumo`: Exposes CRUD operations for the **tipo_insumo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipo_insumos
    * const tipo_insumos = await prisma.tipo_insumo.findMany()
    * ```
    */
  get tipo_insumo(): Prisma.tipo_insumoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.insumos`: Exposes CRUD operations for the **insumos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Insumos
    * const insumos = await prisma.insumos.findMany()
    * ```
    */
  get insumos(): Prisma.insumosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tipo_evento`: Exposes CRUD operations for the **tipo_evento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipo_eventos
    * const tipo_eventos = await prisma.tipo_evento.findMany()
    * ```
    */
  get tipo_evento(): Prisma.tipo_eventoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.razas`: Exposes CRUD operations for the **razas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Razas
    * const razas = await prisma.razas.findMany()
    * ```
    */
  get razas(): Prisma.razasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.potreros`: Exposes CRUD operations for the **potreros** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Potreros
    * const potreros = await prisma.potreros.findMany()
    * ```
    */
  get potreros(): Prisma.potrerosDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.lotes`: Exposes CRUD operations for the **lotes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Lotes
    * const lotes = await prisma.lotes.findMany()
    * ```
    */
  get lotes(): Prisma.lotesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.animales`: Exposes CRUD operations for the **animales** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Animales
    * const animales = await prisma.animales.findMany()
    * ```
    */
  get animales(): Prisma.animalesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.proveedores`: Exposes CRUD operations for the **proveedores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Proveedores
    * const proveedores = await prisma.proveedores.findMany()
    * ```
    */
  get proveedores(): Prisma.proveedoresDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.compras`: Exposes CRUD operations for the **compras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Compras
    * const compras = await prisma.compras.findMany()
    * ```
    */
  get compras(): Prisma.comprasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.detalle_compras`: Exposes CRUD operations for the **detalle_compras** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Detalle_compras
    * const detalle_compras = await prisma.detalle_compras.findMany()
    * ```
    */
  get detalle_compras(): Prisma.detalle_comprasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.evento_sanitario`: Exposes CRUD operations for the **evento_sanitario** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Evento_sanitarios
    * const evento_sanitarios = await prisma.evento_sanitario.findMany()
    * ```
    */
  get evento_sanitario(): Prisma.evento_sanitarioDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.evento_insumo`: Exposes CRUD operations for the **evento_insumo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Evento_insumos
    * const evento_insumos = await prisma.evento_insumo.findMany()
    * ```
    */
  get evento_insumo(): Prisma.evento_insumoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.alimentacion`: Exposes CRUD operations for the **alimentacion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alimentacions
    * const alimentacions = await prisma.alimentacion.findMany()
    * ```
    */
  get alimentacion(): Prisma.alimentacionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pesajes`: Exposes CRUD operations for the **pesajes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pesajes
    * const pesajes = await prisma.pesajes.findMany()
    * ```
    */
  get pesajes(): Prisma.pesajesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.produccion_carne`: Exposes CRUD operations for the **produccion_carne** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Produccion_carnes
    * const produccion_carnes = await prisma.produccion_carne.findMany()
    * ```
    */
  get produccion_carne(): Prisma.produccion_carneDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.produccion_lechera`: Exposes CRUD operations for the **produccion_lechera** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Produccion_lecheras
    * const produccion_lecheras = await prisma.produccion_lechera.findMany()
    * ```
    */
  get produccion_lechera(): Prisma.produccion_lecheraDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.evento_monta`: Exposes CRUD operations for the **evento_monta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Evento_montas
    * const evento_montas = await prisma.evento_monta.findMany()
    * ```
    */
  get evento_monta(): Prisma.evento_montaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.diagnostico_preñez`: Exposes CRUD operations for the **diagnostico_preñez** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Diagnostico_preñezs
    * const diagnostico_preñezs = await prisma.diagnostico_preñez.findMany()
    * ```
    */
  get diagnostico_preñez(): Prisma.diagnostico_preñezDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.evento_parto`: Exposes CRUD operations for the **evento_parto** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Evento_partos
    * const evento_partos = await prisma.evento_parto.findMany()
    * ```
    */
  get evento_parto(): Prisma.evento_partoDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.17.1
   * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    roles: 'roles',
    finca: 'finca',
    usuarios: 'usuarios',
    unidades: 'unidades',
    tipo_insumo: 'tipo_insumo',
    insumos: 'insumos',
    tipo_evento: 'tipo_evento',
    razas: 'razas',
    potreros: 'potreros',
    lotes: 'lotes',
    animales: 'animales',
    proveedores: 'proveedores',
    compras: 'compras',
    detalle_compras: 'detalle_compras',
    evento_sanitario: 'evento_sanitario',
    evento_insumo: 'evento_insumo',
    alimentacion: 'alimentacion',
    pesajes: 'pesajes',
    produccion_carne: 'produccion_carne',
    produccion_lechera: 'produccion_lechera',
    evento_monta: 'evento_monta',
    diagnostico_preñez: 'diagnostico_preñez',
    evento_parto: 'evento_parto'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "roles" | "finca" | "usuarios" | "unidades" | "tipo_insumo" | "insumos" | "tipo_evento" | "razas" | "potreros" | "lotes" | "animales" | "proveedores" | "compras" | "detalle_compras" | "evento_sanitario" | "evento_insumo" | "alimentacion" | "pesajes" | "produccion_carne" | "produccion_lechera" | "evento_monta" | "diagnostico_preñez" | "evento_parto"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      roles: {
        payload: Prisma.$rolesPayload<ExtArgs>
        fields: Prisma.rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findFirst: {
            args: Prisma.rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findMany: {
            args: Prisma.rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          create: {
            args: Prisma.rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          createMany: {
            args: Prisma.rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.rolesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          delete: {
            args: Prisma.rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          update: {
            args: Prisma.rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          deleteMany: {
            args: Prisma.rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.rolesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          upsert: {
            args: Prisma.rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          aggregate: {
            args: Prisma.RolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoles>
          }
          groupBy: {
            args: Prisma.rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.rolesCountArgs<ExtArgs>
            result: $Utils.Optional<RolesCountAggregateOutputType> | number
          }
        }
      }
      finca: {
        payload: Prisma.$fincaPayload<ExtArgs>
        fields: Prisma.fincaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.fincaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fincaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.fincaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fincaPayload>
          }
          findFirst: {
            args: Prisma.fincaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fincaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.fincaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fincaPayload>
          }
          findMany: {
            args: Prisma.fincaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fincaPayload>[]
          }
          create: {
            args: Prisma.fincaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fincaPayload>
          }
          createMany: {
            args: Prisma.fincaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.fincaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fincaPayload>[]
          }
          delete: {
            args: Prisma.fincaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fincaPayload>
          }
          update: {
            args: Prisma.fincaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fincaPayload>
          }
          deleteMany: {
            args: Prisma.fincaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.fincaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.fincaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fincaPayload>[]
          }
          upsert: {
            args: Prisma.fincaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$fincaPayload>
          }
          aggregate: {
            args: Prisma.FincaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFinca>
          }
          groupBy: {
            args: Prisma.fincaGroupByArgs<ExtArgs>
            result: $Utils.Optional<FincaGroupByOutputType>[]
          }
          count: {
            args: Prisma.fincaCountArgs<ExtArgs>
            result: $Utils.Optional<FincaCountAggregateOutputType> | number
          }
        }
      }
      usuarios: {
        payload: Prisma.$usuariosPayload<ExtArgs>
        fields: Prisma.usuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findFirst: {
            args: Prisma.usuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          findMany: {
            args: Prisma.usuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          create: {
            args: Prisma.usuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          createMany: {
            args: Prisma.usuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usuariosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          delete: {
            args: Prisma.usuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          update: {
            args: Prisma.usuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          deleteMany: {
            args: Prisma.usuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usuariosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>[]
          }
          upsert: {
            args: Prisma.usuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usuariosPayload>
          }
          aggregate: {
            args: Prisma.UsuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarios>
          }
          groupBy: {
            args: Prisma.usuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.usuariosCountArgs<ExtArgs>
            result: $Utils.Optional<UsuariosCountAggregateOutputType> | number
          }
        }
      }
      unidades: {
        payload: Prisma.$unidadesPayload<ExtArgs>
        fields: Prisma.unidadesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.unidadesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$unidadesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.unidadesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$unidadesPayload>
          }
          findFirst: {
            args: Prisma.unidadesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$unidadesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.unidadesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$unidadesPayload>
          }
          findMany: {
            args: Prisma.unidadesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$unidadesPayload>[]
          }
          create: {
            args: Prisma.unidadesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$unidadesPayload>
          }
          createMany: {
            args: Prisma.unidadesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.unidadesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$unidadesPayload>[]
          }
          delete: {
            args: Prisma.unidadesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$unidadesPayload>
          }
          update: {
            args: Prisma.unidadesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$unidadesPayload>
          }
          deleteMany: {
            args: Prisma.unidadesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.unidadesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.unidadesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$unidadesPayload>[]
          }
          upsert: {
            args: Prisma.unidadesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$unidadesPayload>
          }
          aggregate: {
            args: Prisma.UnidadesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUnidades>
          }
          groupBy: {
            args: Prisma.unidadesGroupByArgs<ExtArgs>
            result: $Utils.Optional<UnidadesGroupByOutputType>[]
          }
          count: {
            args: Prisma.unidadesCountArgs<ExtArgs>
            result: $Utils.Optional<UnidadesCountAggregateOutputType> | number
          }
        }
      }
      tipo_insumo: {
        payload: Prisma.$tipo_insumoPayload<ExtArgs>
        fields: Prisma.tipo_insumoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipo_insumoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_insumoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipo_insumoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_insumoPayload>
          }
          findFirst: {
            args: Prisma.tipo_insumoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_insumoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipo_insumoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_insumoPayload>
          }
          findMany: {
            args: Prisma.tipo_insumoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_insumoPayload>[]
          }
          create: {
            args: Prisma.tipo_insumoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_insumoPayload>
          }
          createMany: {
            args: Prisma.tipo_insumoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tipo_insumoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_insumoPayload>[]
          }
          delete: {
            args: Prisma.tipo_insumoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_insumoPayload>
          }
          update: {
            args: Prisma.tipo_insumoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_insumoPayload>
          }
          deleteMany: {
            args: Prisma.tipo_insumoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tipo_insumoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tipo_insumoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_insumoPayload>[]
          }
          upsert: {
            args: Prisma.tipo_insumoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_insumoPayload>
          }
          aggregate: {
            args: Prisma.Tipo_insumoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipo_insumo>
          }
          groupBy: {
            args: Prisma.tipo_insumoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tipo_insumoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipo_insumoCountArgs<ExtArgs>
            result: $Utils.Optional<Tipo_insumoCountAggregateOutputType> | number
          }
        }
      }
      insumos: {
        payload: Prisma.$insumosPayload<ExtArgs>
        fields: Prisma.insumosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.insumosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.insumosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumosPayload>
          }
          findFirst: {
            args: Prisma.insumosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.insumosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumosPayload>
          }
          findMany: {
            args: Prisma.insumosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumosPayload>[]
          }
          create: {
            args: Prisma.insumosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumosPayload>
          }
          createMany: {
            args: Prisma.insumosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.insumosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumosPayload>[]
          }
          delete: {
            args: Prisma.insumosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumosPayload>
          }
          update: {
            args: Prisma.insumosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumosPayload>
          }
          deleteMany: {
            args: Prisma.insumosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.insumosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.insumosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumosPayload>[]
          }
          upsert: {
            args: Prisma.insumosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$insumosPayload>
          }
          aggregate: {
            args: Prisma.InsumosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInsumos>
          }
          groupBy: {
            args: Prisma.insumosGroupByArgs<ExtArgs>
            result: $Utils.Optional<InsumosGroupByOutputType>[]
          }
          count: {
            args: Prisma.insumosCountArgs<ExtArgs>
            result: $Utils.Optional<InsumosCountAggregateOutputType> | number
          }
        }
      }
      tipo_evento: {
        payload: Prisma.$tipo_eventoPayload<ExtArgs>
        fields: Prisma.tipo_eventoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipo_eventoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_eventoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipo_eventoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_eventoPayload>
          }
          findFirst: {
            args: Prisma.tipo_eventoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_eventoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipo_eventoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_eventoPayload>
          }
          findMany: {
            args: Prisma.tipo_eventoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_eventoPayload>[]
          }
          create: {
            args: Prisma.tipo_eventoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_eventoPayload>
          }
          createMany: {
            args: Prisma.tipo_eventoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tipo_eventoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_eventoPayload>[]
          }
          delete: {
            args: Prisma.tipo_eventoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_eventoPayload>
          }
          update: {
            args: Prisma.tipo_eventoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_eventoPayload>
          }
          deleteMany: {
            args: Prisma.tipo_eventoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tipo_eventoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tipo_eventoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_eventoPayload>[]
          }
          upsert: {
            args: Prisma.tipo_eventoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tipo_eventoPayload>
          }
          aggregate: {
            args: Prisma.Tipo_eventoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTipo_evento>
          }
          groupBy: {
            args: Prisma.tipo_eventoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tipo_eventoGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipo_eventoCountArgs<ExtArgs>
            result: $Utils.Optional<Tipo_eventoCountAggregateOutputType> | number
          }
        }
      }
      razas: {
        payload: Prisma.$razasPayload<ExtArgs>
        fields: Prisma.razasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.razasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$razasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.razasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$razasPayload>
          }
          findFirst: {
            args: Prisma.razasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$razasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.razasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$razasPayload>
          }
          findMany: {
            args: Prisma.razasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$razasPayload>[]
          }
          create: {
            args: Prisma.razasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$razasPayload>
          }
          createMany: {
            args: Prisma.razasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.razasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$razasPayload>[]
          }
          delete: {
            args: Prisma.razasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$razasPayload>
          }
          update: {
            args: Prisma.razasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$razasPayload>
          }
          deleteMany: {
            args: Prisma.razasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.razasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.razasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$razasPayload>[]
          }
          upsert: {
            args: Prisma.razasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$razasPayload>
          }
          aggregate: {
            args: Prisma.RazasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRazas>
          }
          groupBy: {
            args: Prisma.razasGroupByArgs<ExtArgs>
            result: $Utils.Optional<RazasGroupByOutputType>[]
          }
          count: {
            args: Prisma.razasCountArgs<ExtArgs>
            result: $Utils.Optional<RazasCountAggregateOutputType> | number
          }
        }
      }
      potreros: {
        payload: Prisma.$potrerosPayload<ExtArgs>
        fields: Prisma.potrerosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.potrerosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$potrerosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.potrerosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$potrerosPayload>
          }
          findFirst: {
            args: Prisma.potrerosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$potrerosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.potrerosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$potrerosPayload>
          }
          findMany: {
            args: Prisma.potrerosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$potrerosPayload>[]
          }
          create: {
            args: Prisma.potrerosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$potrerosPayload>
          }
          createMany: {
            args: Prisma.potrerosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.potrerosCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$potrerosPayload>[]
          }
          delete: {
            args: Prisma.potrerosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$potrerosPayload>
          }
          update: {
            args: Prisma.potrerosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$potrerosPayload>
          }
          deleteMany: {
            args: Prisma.potrerosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.potrerosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.potrerosUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$potrerosPayload>[]
          }
          upsert: {
            args: Prisma.potrerosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$potrerosPayload>
          }
          aggregate: {
            args: Prisma.PotrerosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePotreros>
          }
          groupBy: {
            args: Prisma.potrerosGroupByArgs<ExtArgs>
            result: $Utils.Optional<PotrerosGroupByOutputType>[]
          }
          count: {
            args: Prisma.potrerosCountArgs<ExtArgs>
            result: $Utils.Optional<PotrerosCountAggregateOutputType> | number
          }
        }
      }
      lotes: {
        payload: Prisma.$lotesPayload<ExtArgs>
        fields: Prisma.lotesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.lotesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.lotesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotesPayload>
          }
          findFirst: {
            args: Prisma.lotesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.lotesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotesPayload>
          }
          findMany: {
            args: Prisma.lotesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotesPayload>[]
          }
          create: {
            args: Prisma.lotesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotesPayload>
          }
          createMany: {
            args: Prisma.lotesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.lotesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotesPayload>[]
          }
          delete: {
            args: Prisma.lotesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotesPayload>
          }
          update: {
            args: Prisma.lotesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotesPayload>
          }
          deleteMany: {
            args: Prisma.lotesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.lotesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.lotesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotesPayload>[]
          }
          upsert: {
            args: Prisma.lotesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$lotesPayload>
          }
          aggregate: {
            args: Prisma.LotesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLotes>
          }
          groupBy: {
            args: Prisma.lotesGroupByArgs<ExtArgs>
            result: $Utils.Optional<LotesGroupByOutputType>[]
          }
          count: {
            args: Prisma.lotesCountArgs<ExtArgs>
            result: $Utils.Optional<LotesCountAggregateOutputType> | number
          }
        }
      }
      animales: {
        payload: Prisma.$animalesPayload<ExtArgs>
        fields: Prisma.animalesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.animalesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animalesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.animalesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animalesPayload>
          }
          findFirst: {
            args: Prisma.animalesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animalesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.animalesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animalesPayload>
          }
          findMany: {
            args: Prisma.animalesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animalesPayload>[]
          }
          create: {
            args: Prisma.animalesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animalesPayload>
          }
          createMany: {
            args: Prisma.animalesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.animalesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animalesPayload>[]
          }
          delete: {
            args: Prisma.animalesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animalesPayload>
          }
          update: {
            args: Prisma.animalesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animalesPayload>
          }
          deleteMany: {
            args: Prisma.animalesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.animalesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.animalesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animalesPayload>[]
          }
          upsert: {
            args: Prisma.animalesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$animalesPayload>
          }
          aggregate: {
            args: Prisma.AnimalesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAnimales>
          }
          groupBy: {
            args: Prisma.animalesGroupByArgs<ExtArgs>
            result: $Utils.Optional<AnimalesGroupByOutputType>[]
          }
          count: {
            args: Prisma.animalesCountArgs<ExtArgs>
            result: $Utils.Optional<AnimalesCountAggregateOutputType> | number
          }
        }
      }
      proveedores: {
        payload: Prisma.$proveedoresPayload<ExtArgs>
        fields: Prisma.proveedoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.proveedoresFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.proveedoresFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          findFirst: {
            args: Prisma.proveedoresFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.proveedoresFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          findMany: {
            args: Prisma.proveedoresFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>[]
          }
          create: {
            args: Prisma.proveedoresCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          createMany: {
            args: Prisma.proveedoresCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.proveedoresCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>[]
          }
          delete: {
            args: Prisma.proveedoresDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          update: {
            args: Prisma.proveedoresUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          deleteMany: {
            args: Prisma.proveedoresDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.proveedoresUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.proveedoresUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>[]
          }
          upsert: {
            args: Prisma.proveedoresUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$proveedoresPayload>
          }
          aggregate: {
            args: Prisma.ProveedoresAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProveedores>
          }
          groupBy: {
            args: Prisma.proveedoresGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProveedoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.proveedoresCountArgs<ExtArgs>
            result: $Utils.Optional<ProveedoresCountAggregateOutputType> | number
          }
        }
      }
      compras: {
        payload: Prisma.$comprasPayload<ExtArgs>
        fields: Prisma.comprasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.comprasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comprasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.comprasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comprasPayload>
          }
          findFirst: {
            args: Prisma.comprasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comprasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.comprasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comprasPayload>
          }
          findMany: {
            args: Prisma.comprasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comprasPayload>[]
          }
          create: {
            args: Prisma.comprasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comprasPayload>
          }
          createMany: {
            args: Prisma.comprasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.comprasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comprasPayload>[]
          }
          delete: {
            args: Prisma.comprasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comprasPayload>
          }
          update: {
            args: Prisma.comprasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comprasPayload>
          }
          deleteMany: {
            args: Prisma.comprasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.comprasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.comprasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comprasPayload>[]
          }
          upsert: {
            args: Prisma.comprasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$comprasPayload>
          }
          aggregate: {
            args: Prisma.ComprasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompras>
          }
          groupBy: {
            args: Prisma.comprasGroupByArgs<ExtArgs>
            result: $Utils.Optional<ComprasGroupByOutputType>[]
          }
          count: {
            args: Prisma.comprasCountArgs<ExtArgs>
            result: $Utils.Optional<ComprasCountAggregateOutputType> | number
          }
        }
      }
      detalle_compras: {
        payload: Prisma.$detalle_comprasPayload<ExtArgs>
        fields: Prisma.detalle_comprasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.detalle_comprasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_comprasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.detalle_comprasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_comprasPayload>
          }
          findFirst: {
            args: Prisma.detalle_comprasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_comprasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.detalle_comprasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_comprasPayload>
          }
          findMany: {
            args: Prisma.detalle_comprasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_comprasPayload>[]
          }
          create: {
            args: Prisma.detalle_comprasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_comprasPayload>
          }
          createMany: {
            args: Prisma.detalle_comprasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.detalle_comprasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_comprasPayload>[]
          }
          delete: {
            args: Prisma.detalle_comprasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_comprasPayload>
          }
          update: {
            args: Prisma.detalle_comprasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_comprasPayload>
          }
          deleteMany: {
            args: Prisma.detalle_comprasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.detalle_comprasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.detalle_comprasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_comprasPayload>[]
          }
          upsert: {
            args: Prisma.detalle_comprasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$detalle_comprasPayload>
          }
          aggregate: {
            args: Prisma.Detalle_comprasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDetalle_compras>
          }
          groupBy: {
            args: Prisma.detalle_comprasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Detalle_comprasGroupByOutputType>[]
          }
          count: {
            args: Prisma.detalle_comprasCountArgs<ExtArgs>
            result: $Utils.Optional<Detalle_comprasCountAggregateOutputType> | number
          }
        }
      }
      evento_sanitario: {
        payload: Prisma.$evento_sanitarioPayload<ExtArgs>
        fields: Prisma.evento_sanitarioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.evento_sanitarioFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_sanitarioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.evento_sanitarioFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_sanitarioPayload>
          }
          findFirst: {
            args: Prisma.evento_sanitarioFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_sanitarioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.evento_sanitarioFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_sanitarioPayload>
          }
          findMany: {
            args: Prisma.evento_sanitarioFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_sanitarioPayload>[]
          }
          create: {
            args: Prisma.evento_sanitarioCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_sanitarioPayload>
          }
          createMany: {
            args: Prisma.evento_sanitarioCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.evento_sanitarioCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_sanitarioPayload>[]
          }
          delete: {
            args: Prisma.evento_sanitarioDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_sanitarioPayload>
          }
          update: {
            args: Prisma.evento_sanitarioUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_sanitarioPayload>
          }
          deleteMany: {
            args: Prisma.evento_sanitarioDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.evento_sanitarioUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.evento_sanitarioUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_sanitarioPayload>[]
          }
          upsert: {
            args: Prisma.evento_sanitarioUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_sanitarioPayload>
          }
          aggregate: {
            args: Prisma.Evento_sanitarioAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvento_sanitario>
          }
          groupBy: {
            args: Prisma.evento_sanitarioGroupByArgs<ExtArgs>
            result: $Utils.Optional<Evento_sanitarioGroupByOutputType>[]
          }
          count: {
            args: Prisma.evento_sanitarioCountArgs<ExtArgs>
            result: $Utils.Optional<Evento_sanitarioCountAggregateOutputType> | number
          }
        }
      }
      evento_insumo: {
        payload: Prisma.$evento_insumoPayload<ExtArgs>
        fields: Prisma.evento_insumoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.evento_insumoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_insumoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.evento_insumoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_insumoPayload>
          }
          findFirst: {
            args: Prisma.evento_insumoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_insumoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.evento_insumoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_insumoPayload>
          }
          findMany: {
            args: Prisma.evento_insumoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_insumoPayload>[]
          }
          create: {
            args: Prisma.evento_insumoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_insumoPayload>
          }
          createMany: {
            args: Prisma.evento_insumoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.evento_insumoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_insumoPayload>[]
          }
          delete: {
            args: Prisma.evento_insumoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_insumoPayload>
          }
          update: {
            args: Prisma.evento_insumoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_insumoPayload>
          }
          deleteMany: {
            args: Prisma.evento_insumoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.evento_insumoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.evento_insumoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_insumoPayload>[]
          }
          upsert: {
            args: Prisma.evento_insumoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_insumoPayload>
          }
          aggregate: {
            args: Prisma.Evento_insumoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvento_insumo>
          }
          groupBy: {
            args: Prisma.evento_insumoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Evento_insumoGroupByOutputType>[]
          }
          count: {
            args: Prisma.evento_insumoCountArgs<ExtArgs>
            result: $Utils.Optional<Evento_insumoCountAggregateOutputType> | number
          }
        }
      }
      alimentacion: {
        payload: Prisma.$alimentacionPayload<ExtArgs>
        fields: Prisma.alimentacionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.alimentacionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alimentacionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.alimentacionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alimentacionPayload>
          }
          findFirst: {
            args: Prisma.alimentacionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alimentacionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.alimentacionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alimentacionPayload>
          }
          findMany: {
            args: Prisma.alimentacionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alimentacionPayload>[]
          }
          create: {
            args: Prisma.alimentacionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alimentacionPayload>
          }
          createMany: {
            args: Prisma.alimentacionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.alimentacionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alimentacionPayload>[]
          }
          delete: {
            args: Prisma.alimentacionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alimentacionPayload>
          }
          update: {
            args: Prisma.alimentacionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alimentacionPayload>
          }
          deleteMany: {
            args: Prisma.alimentacionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.alimentacionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.alimentacionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alimentacionPayload>[]
          }
          upsert: {
            args: Prisma.alimentacionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$alimentacionPayload>
          }
          aggregate: {
            args: Prisma.AlimentacionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAlimentacion>
          }
          groupBy: {
            args: Prisma.alimentacionGroupByArgs<ExtArgs>
            result: $Utils.Optional<AlimentacionGroupByOutputType>[]
          }
          count: {
            args: Prisma.alimentacionCountArgs<ExtArgs>
            result: $Utils.Optional<AlimentacionCountAggregateOutputType> | number
          }
        }
      }
      pesajes: {
        payload: Prisma.$pesajesPayload<ExtArgs>
        fields: Prisma.pesajesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pesajesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pesajesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pesajesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pesajesPayload>
          }
          findFirst: {
            args: Prisma.pesajesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pesajesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pesajesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pesajesPayload>
          }
          findMany: {
            args: Prisma.pesajesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pesajesPayload>[]
          }
          create: {
            args: Prisma.pesajesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pesajesPayload>
          }
          createMany: {
            args: Prisma.pesajesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pesajesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pesajesPayload>[]
          }
          delete: {
            args: Prisma.pesajesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pesajesPayload>
          }
          update: {
            args: Prisma.pesajesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pesajesPayload>
          }
          deleteMany: {
            args: Prisma.pesajesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pesajesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pesajesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pesajesPayload>[]
          }
          upsert: {
            args: Prisma.pesajesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pesajesPayload>
          }
          aggregate: {
            args: Prisma.PesajesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePesajes>
          }
          groupBy: {
            args: Prisma.pesajesGroupByArgs<ExtArgs>
            result: $Utils.Optional<PesajesGroupByOutputType>[]
          }
          count: {
            args: Prisma.pesajesCountArgs<ExtArgs>
            result: $Utils.Optional<PesajesCountAggregateOutputType> | number
          }
        }
      }
      produccion_carne: {
        payload: Prisma.$produccion_carnePayload<ExtArgs>
        fields: Prisma.produccion_carneFieldRefs
        operations: {
          findUnique: {
            args: Prisma.produccion_carneFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_carnePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.produccion_carneFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_carnePayload>
          }
          findFirst: {
            args: Prisma.produccion_carneFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_carnePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.produccion_carneFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_carnePayload>
          }
          findMany: {
            args: Prisma.produccion_carneFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_carnePayload>[]
          }
          create: {
            args: Prisma.produccion_carneCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_carnePayload>
          }
          createMany: {
            args: Prisma.produccion_carneCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.produccion_carneCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_carnePayload>[]
          }
          delete: {
            args: Prisma.produccion_carneDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_carnePayload>
          }
          update: {
            args: Prisma.produccion_carneUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_carnePayload>
          }
          deleteMany: {
            args: Prisma.produccion_carneDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.produccion_carneUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.produccion_carneUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_carnePayload>[]
          }
          upsert: {
            args: Prisma.produccion_carneUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_carnePayload>
          }
          aggregate: {
            args: Prisma.Produccion_carneAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduccion_carne>
          }
          groupBy: {
            args: Prisma.produccion_carneGroupByArgs<ExtArgs>
            result: $Utils.Optional<Produccion_carneGroupByOutputType>[]
          }
          count: {
            args: Prisma.produccion_carneCountArgs<ExtArgs>
            result: $Utils.Optional<Produccion_carneCountAggregateOutputType> | number
          }
        }
      }
      produccion_lechera: {
        payload: Prisma.$produccion_lecheraPayload<ExtArgs>
        fields: Prisma.produccion_lecheraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.produccion_lecheraFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_lecheraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.produccion_lecheraFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_lecheraPayload>
          }
          findFirst: {
            args: Prisma.produccion_lecheraFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_lecheraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.produccion_lecheraFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_lecheraPayload>
          }
          findMany: {
            args: Prisma.produccion_lecheraFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_lecheraPayload>[]
          }
          create: {
            args: Prisma.produccion_lecheraCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_lecheraPayload>
          }
          createMany: {
            args: Prisma.produccion_lecheraCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.produccion_lecheraCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_lecheraPayload>[]
          }
          delete: {
            args: Prisma.produccion_lecheraDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_lecheraPayload>
          }
          update: {
            args: Prisma.produccion_lecheraUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_lecheraPayload>
          }
          deleteMany: {
            args: Prisma.produccion_lecheraDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.produccion_lecheraUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.produccion_lecheraUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_lecheraPayload>[]
          }
          upsert: {
            args: Prisma.produccion_lecheraUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$produccion_lecheraPayload>
          }
          aggregate: {
            args: Prisma.Produccion_lecheraAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduccion_lechera>
          }
          groupBy: {
            args: Prisma.produccion_lecheraGroupByArgs<ExtArgs>
            result: $Utils.Optional<Produccion_lecheraGroupByOutputType>[]
          }
          count: {
            args: Prisma.produccion_lecheraCountArgs<ExtArgs>
            result: $Utils.Optional<Produccion_lecheraCountAggregateOutputType> | number
          }
        }
      }
      evento_monta: {
        payload: Prisma.$evento_montaPayload<ExtArgs>
        fields: Prisma.evento_montaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.evento_montaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_montaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.evento_montaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_montaPayload>
          }
          findFirst: {
            args: Prisma.evento_montaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_montaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.evento_montaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_montaPayload>
          }
          findMany: {
            args: Prisma.evento_montaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_montaPayload>[]
          }
          create: {
            args: Prisma.evento_montaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_montaPayload>
          }
          createMany: {
            args: Prisma.evento_montaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.evento_montaCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_montaPayload>[]
          }
          delete: {
            args: Prisma.evento_montaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_montaPayload>
          }
          update: {
            args: Prisma.evento_montaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_montaPayload>
          }
          deleteMany: {
            args: Prisma.evento_montaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.evento_montaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.evento_montaUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_montaPayload>[]
          }
          upsert: {
            args: Prisma.evento_montaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_montaPayload>
          }
          aggregate: {
            args: Prisma.Evento_montaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvento_monta>
          }
          groupBy: {
            args: Prisma.evento_montaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Evento_montaGroupByOutputType>[]
          }
          count: {
            args: Prisma.evento_montaCountArgs<ExtArgs>
            result: $Utils.Optional<Evento_montaCountAggregateOutputType> | number
          }
        }
      }
      diagnostico_preñez: {
        payload: Prisma.$diagnostico_preñezPayload<ExtArgs>
        fields: Prisma.diagnostico_preñezFieldRefs
        operations: {
          findUnique: {
            args: Prisma.diagnostico_preñezFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$diagnostico_preñezPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.diagnostico_preñezFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$diagnostico_preñezPayload>
          }
          findFirst: {
            args: Prisma.diagnostico_preñezFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$diagnostico_preñezPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.diagnostico_preñezFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$diagnostico_preñezPayload>
          }
          findMany: {
            args: Prisma.diagnostico_preñezFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$diagnostico_preñezPayload>[]
          }
          create: {
            args: Prisma.diagnostico_preñezCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$diagnostico_preñezPayload>
          }
          createMany: {
            args: Prisma.diagnostico_preñezCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.diagnostico_preñezCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$diagnostico_preñezPayload>[]
          }
          delete: {
            args: Prisma.diagnostico_preñezDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$diagnostico_preñezPayload>
          }
          update: {
            args: Prisma.diagnostico_preñezUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$diagnostico_preñezPayload>
          }
          deleteMany: {
            args: Prisma.diagnostico_preñezDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.diagnostico_preñezUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.diagnostico_preñezUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$diagnostico_preñezPayload>[]
          }
          upsert: {
            args: Prisma.diagnostico_preñezUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$diagnostico_preñezPayload>
          }
          aggregate: {
            args: Prisma.Diagnostico_preñezAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiagnostico_preñez>
          }
          groupBy: {
            args: Prisma.diagnostico_preñezGroupByArgs<ExtArgs>
            result: $Utils.Optional<Diagnostico_preñezGroupByOutputType>[]
          }
          count: {
            args: Prisma.diagnostico_preñezCountArgs<ExtArgs>
            result: $Utils.Optional<Diagnostico_preñezCountAggregateOutputType> | number
          }
        }
      }
      evento_parto: {
        payload: Prisma.$evento_partoPayload<ExtArgs>
        fields: Prisma.evento_partoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.evento_partoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_partoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.evento_partoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_partoPayload>
          }
          findFirst: {
            args: Prisma.evento_partoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_partoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.evento_partoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_partoPayload>
          }
          findMany: {
            args: Prisma.evento_partoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_partoPayload>[]
          }
          create: {
            args: Prisma.evento_partoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_partoPayload>
          }
          createMany: {
            args: Prisma.evento_partoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.evento_partoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_partoPayload>[]
          }
          delete: {
            args: Prisma.evento_partoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_partoPayload>
          }
          update: {
            args: Prisma.evento_partoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_partoPayload>
          }
          deleteMany: {
            args: Prisma.evento_partoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.evento_partoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.evento_partoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_partoPayload>[]
          }
          upsert: {
            args: Prisma.evento_partoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$evento_partoPayload>
          }
          aggregate: {
            args: Prisma.Evento_partoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvento_parto>
          }
          groupBy: {
            args: Prisma.evento_partoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Evento_partoGroupByOutputType>[]
          }
          count: {
            args: Prisma.evento_partoCountArgs<ExtArgs>
            result: $Utils.Optional<Evento_partoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    roles?: rolesOmit
    finca?: fincaOmit
    usuarios?: usuariosOmit
    unidades?: unidadesOmit
    tipo_insumo?: tipo_insumoOmit
    insumos?: insumosOmit
    tipo_evento?: tipo_eventoOmit
    razas?: razasOmit
    potreros?: potrerosOmit
    lotes?: lotesOmit
    animales?: animalesOmit
    proveedores?: proveedoresOmit
    compras?: comprasOmit
    detalle_compras?: detalle_comprasOmit
    evento_sanitario?: evento_sanitarioOmit
    evento_insumo?: evento_insumoOmit
    alimentacion?: alimentacionOmit
    pesajes?: pesajesOmit
    produccion_carne?: produccion_carneOmit
    produccion_lechera?: produccion_lecheraOmit
    evento_monta?: evento_montaOmit
    diagnostico_preñez?: diagnostico_preñezOmit
    evento_parto?: evento_partoOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type RolesCountOutputType
   */

  export type RolesCountOutputType = {
    usuarios: number
  }

  export type RolesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | RolesCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolesCountOutputType
     */
    select?: RolesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
  }


  /**
   * Count Type FincaCountOutputType
   */

  export type FincaCountOutputType = {
    usuarios: number
  }

  export type FincaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | FincaCountOutputTypeCountUsuariosArgs
  }

  // Custom InputTypes
  /**
   * FincaCountOutputType without action
   */
  export type FincaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FincaCountOutputType
     */
    select?: FincaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FincaCountOutputType without action
   */
  export type FincaCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
  }


  /**
   * Count Type UsuariosCountOutputType
   */

  export type UsuariosCountOutputType = {
    eventos_veterinario: number
    eventos_operador: number
    alimentaciones: number
    pesajes_realizados: number
    compras_realizadas: number
    producciones_carne: number
    producciones_leche: number
    montas_supervisadas: number
    diagnosticos: number
    partos_veterinario: number
    partos_operador: number
  }

  export type UsuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    eventos_veterinario?: boolean | UsuariosCountOutputTypeCountEventos_veterinarioArgs
    eventos_operador?: boolean | UsuariosCountOutputTypeCountEventos_operadorArgs
    alimentaciones?: boolean | UsuariosCountOutputTypeCountAlimentacionesArgs
    pesajes_realizados?: boolean | UsuariosCountOutputTypeCountPesajes_realizadosArgs
    compras_realizadas?: boolean | UsuariosCountOutputTypeCountCompras_realizadasArgs
    producciones_carne?: boolean | UsuariosCountOutputTypeCountProducciones_carneArgs
    producciones_leche?: boolean | UsuariosCountOutputTypeCountProducciones_lecheArgs
    montas_supervisadas?: boolean | UsuariosCountOutputTypeCountMontas_supervisadasArgs
    diagnosticos?: boolean | UsuariosCountOutputTypeCountDiagnosticosArgs
    partos_veterinario?: boolean | UsuariosCountOutputTypeCountPartos_veterinarioArgs
    partos_operador?: boolean | UsuariosCountOutputTypeCountPartos_operadorArgs
  }

  // Custom InputTypes
  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuariosCountOutputType
     */
    select?: UsuariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountEventos_veterinarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_sanitarioWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountEventos_operadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_sanitarioWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountAlimentacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alimentacionWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountPesajes_realizadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pesajesWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountCompras_realizadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comprasWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountProducciones_carneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produccion_carneWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountProducciones_lecheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produccion_lecheraWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountMontas_supervisadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_montaWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountDiagnosticosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: diagnostico_preñezWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountPartos_veterinarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_partoWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountPartos_operadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_partoWhereInput
  }


  /**
   * Count Type UnidadesCountOutputType
   */

  export type UnidadesCountOutputType = {
    insumos: number
    pesajes: number
    producciones_leche: number
  }

  export type UnidadesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    insumos?: boolean | UnidadesCountOutputTypeCountInsumosArgs
    pesajes?: boolean | UnidadesCountOutputTypeCountPesajesArgs
    producciones_leche?: boolean | UnidadesCountOutputTypeCountProducciones_lecheArgs
  }

  // Custom InputTypes
  /**
   * UnidadesCountOutputType without action
   */
  export type UnidadesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UnidadesCountOutputType
     */
    select?: UnidadesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UnidadesCountOutputType without action
   */
  export type UnidadesCountOutputTypeCountInsumosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: insumosWhereInput
  }

  /**
   * UnidadesCountOutputType without action
   */
  export type UnidadesCountOutputTypeCountPesajesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pesajesWhereInput
  }

  /**
   * UnidadesCountOutputType without action
   */
  export type UnidadesCountOutputTypeCountProducciones_lecheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produccion_lecheraWhereInput
  }


  /**
   * Count Type Tipo_insumoCountOutputType
   */

  export type Tipo_insumoCountOutputType = {
    insumos: number
  }

  export type Tipo_insumoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    insumos?: boolean | Tipo_insumoCountOutputTypeCountInsumosArgs
  }

  // Custom InputTypes
  /**
   * Tipo_insumoCountOutputType without action
   */
  export type Tipo_insumoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_insumoCountOutputType
     */
    select?: Tipo_insumoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tipo_insumoCountOutputType without action
   */
  export type Tipo_insumoCountOutputTypeCountInsumosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: insumosWhereInput
  }


  /**
   * Count Type InsumosCountOutputType
   */

  export type InsumosCountOutputType = {
    detalle_compras: number
    evento_insumos: number
    alimentaciones: number
  }

  export type InsumosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_compras?: boolean | InsumosCountOutputTypeCountDetalle_comprasArgs
    evento_insumos?: boolean | InsumosCountOutputTypeCountEvento_insumosArgs
    alimentaciones?: boolean | InsumosCountOutputTypeCountAlimentacionesArgs
  }

  // Custom InputTypes
  /**
   * InsumosCountOutputType without action
   */
  export type InsumosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the InsumosCountOutputType
     */
    select?: InsumosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * InsumosCountOutputType without action
   */
  export type InsumosCountOutputTypeCountDetalle_comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_comprasWhereInput
  }

  /**
   * InsumosCountOutputType without action
   */
  export type InsumosCountOutputTypeCountEvento_insumosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_insumoWhereInput
  }

  /**
   * InsumosCountOutputType without action
   */
  export type InsumosCountOutputTypeCountAlimentacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alimentacionWhereInput
  }


  /**
   * Count Type Tipo_eventoCountOutputType
   */

  export type Tipo_eventoCountOutputType = {
    hijos: number
    eventos_sanitarios: number
    eventos_monta: number
    eventos_parto: number
  }

  export type Tipo_eventoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    hijos?: boolean | Tipo_eventoCountOutputTypeCountHijosArgs
    eventos_sanitarios?: boolean | Tipo_eventoCountOutputTypeCountEventos_sanitariosArgs
    eventos_monta?: boolean | Tipo_eventoCountOutputTypeCountEventos_montaArgs
    eventos_parto?: boolean | Tipo_eventoCountOutputTypeCountEventos_partoArgs
  }

  // Custom InputTypes
  /**
   * Tipo_eventoCountOutputType without action
   */
  export type Tipo_eventoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tipo_eventoCountOutputType
     */
    select?: Tipo_eventoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Tipo_eventoCountOutputType without action
   */
  export type Tipo_eventoCountOutputTypeCountHijosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipo_eventoWhereInput
  }

  /**
   * Tipo_eventoCountOutputType without action
   */
  export type Tipo_eventoCountOutputTypeCountEventos_sanitariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_sanitarioWhereInput
  }

  /**
   * Tipo_eventoCountOutputType without action
   */
  export type Tipo_eventoCountOutputTypeCountEventos_montaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_montaWhereInput
  }

  /**
   * Tipo_eventoCountOutputType without action
   */
  export type Tipo_eventoCountOutputTypeCountEventos_partoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_partoWhereInput
  }


  /**
   * Count Type RazasCountOutputType
   */

  export type RazasCountOutputType = {
    animales: number
  }

  export type RazasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animales?: boolean | RazasCountOutputTypeCountAnimalesArgs
  }

  // Custom InputTypes
  /**
   * RazasCountOutputType without action
   */
  export type RazasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RazasCountOutputType
     */
    select?: RazasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RazasCountOutputType without action
   */
  export type RazasCountOutputTypeCountAnimalesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: animalesWhereInput
  }


  /**
   * Count Type PotrerosCountOutputType
   */

  export type PotrerosCountOutputType = {
    lotes: number
  }

  export type PotrerosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lotes?: boolean | PotrerosCountOutputTypeCountLotesArgs
  }

  // Custom InputTypes
  /**
   * PotrerosCountOutputType without action
   */
  export type PotrerosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PotrerosCountOutputType
     */
    select?: PotrerosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PotrerosCountOutputType without action
   */
  export type PotrerosCountOutputTypeCountLotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: lotesWhereInput
  }


  /**
   * Count Type LotesCountOutputType
   */

  export type LotesCountOutputType = {
    animales: number
  }

  export type LotesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animales?: boolean | LotesCountOutputTypeCountAnimalesArgs
  }

  // Custom InputTypes
  /**
   * LotesCountOutputType without action
   */
  export type LotesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LotesCountOutputType
     */
    select?: LotesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LotesCountOutputType without action
   */
  export type LotesCountOutputTypeCountAnimalesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: animalesWhereInput
  }


  /**
   * Count Type AnimalesCountOutputType
   */

  export type AnimalesCountOutputType = {
    hijos_madre: number
    hijos_padre: number
    eventos_sanitarios: number
    alimentaciones: number
    pesajes: number
    producciones_carne: number
    producciones_leche: number
    montas_hembra: number
    montas_macho: number
    partos: number
  }

  export type AnimalesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    hijos_madre?: boolean | AnimalesCountOutputTypeCountHijos_madreArgs
    hijos_padre?: boolean | AnimalesCountOutputTypeCountHijos_padreArgs
    eventos_sanitarios?: boolean | AnimalesCountOutputTypeCountEventos_sanitariosArgs
    alimentaciones?: boolean | AnimalesCountOutputTypeCountAlimentacionesArgs
    pesajes?: boolean | AnimalesCountOutputTypeCountPesajesArgs
    producciones_carne?: boolean | AnimalesCountOutputTypeCountProducciones_carneArgs
    producciones_leche?: boolean | AnimalesCountOutputTypeCountProducciones_lecheArgs
    montas_hembra?: boolean | AnimalesCountOutputTypeCountMontas_hembraArgs
    montas_macho?: boolean | AnimalesCountOutputTypeCountMontas_machoArgs
    partos?: boolean | AnimalesCountOutputTypeCountPartosArgs
  }

  // Custom InputTypes
  /**
   * AnimalesCountOutputType without action
   */
  export type AnimalesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnimalesCountOutputType
     */
    select?: AnimalesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AnimalesCountOutputType without action
   */
  export type AnimalesCountOutputTypeCountHijos_madreArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: animalesWhereInput
  }

  /**
   * AnimalesCountOutputType without action
   */
  export type AnimalesCountOutputTypeCountHijos_padreArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: animalesWhereInput
  }

  /**
   * AnimalesCountOutputType without action
   */
  export type AnimalesCountOutputTypeCountEventos_sanitariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_sanitarioWhereInput
  }

  /**
   * AnimalesCountOutputType without action
   */
  export type AnimalesCountOutputTypeCountAlimentacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alimentacionWhereInput
  }

  /**
   * AnimalesCountOutputType without action
   */
  export type AnimalesCountOutputTypeCountPesajesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pesajesWhereInput
  }

  /**
   * AnimalesCountOutputType without action
   */
  export type AnimalesCountOutputTypeCountProducciones_carneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produccion_carneWhereInput
  }

  /**
   * AnimalesCountOutputType without action
   */
  export type AnimalesCountOutputTypeCountProducciones_lecheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produccion_lecheraWhereInput
  }

  /**
   * AnimalesCountOutputType without action
   */
  export type AnimalesCountOutputTypeCountMontas_hembraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_montaWhereInput
  }

  /**
   * AnimalesCountOutputType without action
   */
  export type AnimalesCountOutputTypeCountMontas_machoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_montaWhereInput
  }

  /**
   * AnimalesCountOutputType without action
   */
  export type AnimalesCountOutputTypeCountPartosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_partoWhereInput
  }


  /**
   * Count Type ProveedoresCountOutputType
   */

  export type ProveedoresCountOutputType = {
    compras: number
  }

  export type ProveedoresCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compras?: boolean | ProveedoresCountOutputTypeCountComprasArgs
  }

  // Custom InputTypes
  /**
   * ProveedoresCountOutputType without action
   */
  export type ProveedoresCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProveedoresCountOutputType
     */
    select?: ProveedoresCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProveedoresCountOutputType without action
   */
  export type ProveedoresCountOutputTypeCountComprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comprasWhereInput
  }


  /**
   * Count Type ComprasCountOutputType
   */

  export type ComprasCountOutputType = {
    detalle_compras: number
  }

  export type ComprasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    detalle_compras?: boolean | ComprasCountOutputTypeCountDetalle_comprasArgs
  }

  // Custom InputTypes
  /**
   * ComprasCountOutputType without action
   */
  export type ComprasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ComprasCountOutputType
     */
    select?: ComprasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ComprasCountOutputType without action
   */
  export type ComprasCountOutputTypeCountDetalle_comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_comprasWhereInput
  }


  /**
   * Count Type Evento_sanitarioCountOutputType
   */

  export type Evento_sanitarioCountOutputType = {
    insumos_usados: number
  }

  export type Evento_sanitarioCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    insumos_usados?: boolean | Evento_sanitarioCountOutputTypeCountInsumos_usadosArgs
  }

  // Custom InputTypes
  /**
   * Evento_sanitarioCountOutputType without action
   */
  export type Evento_sanitarioCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evento_sanitarioCountOutputType
     */
    select?: Evento_sanitarioCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Evento_sanitarioCountOutputType without action
   */
  export type Evento_sanitarioCountOutputTypeCountInsumos_usadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_insumoWhereInput
  }


  /**
   * Count Type Evento_montaCountOutputType
   */

  export type Evento_montaCountOutputType = {
    diagnosticos: number
  }

  export type Evento_montaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    diagnosticos?: boolean | Evento_montaCountOutputTypeCountDiagnosticosArgs
  }

  // Custom InputTypes
  /**
   * Evento_montaCountOutputType without action
   */
  export type Evento_montaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Evento_montaCountOutputType
     */
    select?: Evento_montaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Evento_montaCountOutputType without action
   */
  export type Evento_montaCountOutputTypeCountDiagnosticosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: diagnostico_preñezWhereInput
  }


  /**
   * Models
   */

  /**
   * Model roles
   */

  export type AggregateRoles = {
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  export type RolesAvgAggregateOutputType = {
    rol_id: number | null
  }

  export type RolesSumAggregateOutputType = {
    rol_id: number | null
  }

  export type RolesMinAggregateOutputType = {
    rol_id: number | null
    nombre: string | null
    deleted_at: Date | null
  }

  export type RolesMaxAggregateOutputType = {
    rol_id: number | null
    nombre: string | null
    deleted_at: Date | null
  }

  export type RolesCountAggregateOutputType = {
    rol_id: number
    nombre: number
    deleted_at: number
    _all: number
  }


  export type RolesAvgAggregateInputType = {
    rol_id?: true
  }

  export type RolesSumAggregateInputType = {
    rol_id?: true
  }

  export type RolesMinAggregateInputType = {
    rol_id?: true
    nombre?: true
    deleted_at?: true
  }

  export type RolesMaxAggregateInputType = {
    rol_id?: true
    nombre?: true
    deleted_at?: true
  }

  export type RolesCountAggregateInputType = {
    rol_id?: true
    nombre?: true
    deleted_at?: true
    _all?: true
  }

  export type RolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to aggregate.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles
    **/
    _count?: true | RolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolesMaxAggregateInputType
  }

  export type GetRolesAggregateType<T extends RolesAggregateArgs> = {
        [P in keyof T & keyof AggregateRoles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoles[P]>
      : GetScalarType<T[P], AggregateRoles[P]>
  }




  export type rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolesWhereInput
    orderBy?: rolesOrderByWithAggregationInput | rolesOrderByWithAggregationInput[]
    by: RolesScalarFieldEnum[] | RolesScalarFieldEnum
    having?: rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolesCountAggregateInputType | true
    _avg?: RolesAvgAggregateInputType
    _sum?: RolesSumAggregateInputType
    _min?: RolesMinAggregateInputType
    _max?: RolesMaxAggregateInputType
  }

  export type RolesGroupByOutputType = {
    rol_id: number
    nombre: string
    deleted_at: Date | null
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  type GetRolesGroupByPayload<T extends rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolesGroupByOutputType[P]>
            : GetScalarType<T[P], RolesGroupByOutputType[P]>
        }
      >
    >


  export type rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    rol_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
    usuarios?: boolean | roles$usuariosArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roles"]>

  export type rolesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    rol_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["roles"]>

  export type rolesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    rol_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["roles"]>

  export type rolesSelectScalar = {
    rol_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
  }

  export type rolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"rol_id" | "nombre" | "deleted_at", ExtArgs["result"]["roles"]>
  export type rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | roles$usuariosArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type rolesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type rolesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "roles"
    objects: {
      usuarios: Prisma.$usuariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      rol_id: number
      nombre: string
      deleted_at: Date | null
    }, ExtArgs["result"]["roles"]>
    composites: {}
  }

  type rolesGetPayload<S extends boolean | null | undefined | rolesDefaultArgs> = $Result.GetResult<Prisma.$rolesPayload, S>

  type rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolesCountAggregateInputType | true
    }

  export interface rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['roles'], meta: { name: 'roles' } }
    /**
     * Find zero or one Roles that matches the filter.
     * @param {rolesFindUniqueArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends rolesFindUniqueArgs>(args: SelectSubset<T, rolesFindUniqueArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {rolesFindUniqueOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends rolesFindFirstArgs>(args?: SelectSubset<T, rolesFindFirstArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.roles.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.roles.findMany({ take: 10 })
     * 
     * // Only select the `rol_id`
     * const rolesWithRol_idOnly = await prisma.roles.findMany({ select: { rol_id: true } })
     * 
     */
    findMany<T extends rolesFindManyArgs>(args?: SelectSubset<T, rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Roles.
     * @param {rolesCreateArgs} args - Arguments to create a Roles.
     * @example
     * // Create one Roles
     * const Roles = await prisma.roles.create({
     *   data: {
     *     // ... data to create a Roles
     *   }
     * })
     * 
     */
    create<T extends rolesCreateArgs>(args: SelectSubset<T, rolesCreateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {rolesCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const roles = await prisma.roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends rolesCreateManyArgs>(args?: SelectSubset<T, rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Roles and returns the data saved in the database.
     * @param {rolesCreateManyAndReturnArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const roles = await prisma.roles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Roles and only return the `rol_id`
     * const rolesWithRol_idOnly = await prisma.roles.createManyAndReturn({
     *   select: { rol_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends rolesCreateManyAndReturnArgs>(args?: SelectSubset<T, rolesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Roles.
     * @param {rolesDeleteArgs} args - Arguments to delete one Roles.
     * @example
     * // Delete one Roles
     * const Roles = await prisma.roles.delete({
     *   where: {
     *     // ... filter to delete one Roles
     *   }
     * })
     * 
     */
    delete<T extends rolesDeleteArgs>(args: SelectSubset<T, rolesDeleteArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Roles.
     * @param {rolesUpdateArgs} args - Arguments to update one Roles.
     * @example
     * // Update one Roles
     * const roles = await prisma.roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends rolesUpdateArgs>(args: SelectSubset<T, rolesUpdateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {rolesDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends rolesDeleteManyArgs>(args?: SelectSubset<T, rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends rolesUpdateManyArgs>(args: SelectSubset<T, rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles and returns the data updated in the database.
     * @param {rolesUpdateManyAndReturnArgs} args - Arguments to update many Roles.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Roles and only return the `rol_id`
     * const rolesWithRol_idOnly = await prisma.roles.updateManyAndReturn({
     *   select: { rol_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends rolesUpdateManyAndReturnArgs>(args: SelectSubset<T, rolesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Roles.
     * @param {rolesUpsertArgs} args - Arguments to update or create a Roles.
     * @example
     * // Update or create a Roles
     * const roles = await prisma.roles.upsert({
     *   create: {
     *     // ... data to create a Roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Roles we want to update
     *   }
     * })
     */
    upsert<T extends rolesUpsertArgs>(args: SelectSubset<T, rolesUpsertArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.roles.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends rolesCountArgs>(
      args?: Subset<T, rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolesAggregateArgs>(args: Subset<T, RolesAggregateArgs>): Prisma.PrismaPromise<GetRolesAggregateType<T>>

    /**
     * Group by Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rolesGroupByArgs['orderBy'] }
        : { orderBy?: rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the roles model
   */
  readonly fields: rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends roles$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, roles$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the roles model
   */
  interface rolesFieldRefs {
    readonly rol_id: FieldRef<"roles", 'Int'>
    readonly nombre: FieldRef<"roles", 'String'>
    readonly deleted_at: FieldRef<"roles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * roles findUnique
   */
  export type rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles findUniqueOrThrow
   */
  export type rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles findFirst
   */
  export type rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles findFirstOrThrow
   */
  export type rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles findMany
   */
  export type rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles create
   */
  export type rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a roles.
     */
    data: XOR<rolesCreateInput, rolesUncheckedCreateInput>
  }

  /**
   * roles createMany
   */
  export type rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles.
     */
    data: rolesCreateManyInput | rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * roles createManyAndReturn
   */
  export type rolesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * The data used to create many roles.
     */
    data: rolesCreateManyInput | rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * roles update
   */
  export type rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a roles.
     */
    data: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
    /**
     * Choose, which roles to update.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles updateMany
   */
  export type rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles.
     */
    data: XOR<rolesUpdateManyMutationInput, rolesUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
  }

  /**
   * roles updateManyAndReturn
   */
  export type rolesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * The data used to update roles.
     */
    data: XOR<rolesUpdateManyMutationInput, rolesUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
  }

  /**
   * roles upsert
   */
  export type rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the roles to update in case it exists.
     */
    where: rolesWhereUniqueInput
    /**
     * In case the roles found by the `where` argument doesn't exist, create a new roles with this data.
     */
    create: XOR<rolesCreateInput, rolesUncheckedCreateInput>
    /**
     * In case the roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
  }

  /**
   * roles delete
   */
  export type rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter which roles to delete.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles deleteMany
   */
  export type rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to delete
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to delete.
     */
    limit?: number
  }

  /**
   * roles.usuarios
   */
  export type roles$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    cursor?: usuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * roles without action
   */
  export type rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
  }


  /**
   * Model finca
   */

  export type AggregateFinca = {
    _count: FincaCountAggregateOutputType | null
    _avg: FincaAvgAggregateOutputType | null
    _sum: FincaSumAggregateOutputType | null
    _min: FincaMinAggregateOutputType | null
    _max: FincaMaxAggregateOutputType | null
  }

  export type FincaAvgAggregateOutputType = {
    finca_id: number | null
  }

  export type FincaSumAggregateOutputType = {
    finca_id: number | null
  }

  export type FincaMinAggregateOutputType = {
    finca_id: number | null
    nombre: string | null
    descripcion: string | null
    ubicacion: string | null
    deleted_at: Date | null
  }

  export type FincaMaxAggregateOutputType = {
    finca_id: number | null
    nombre: string | null
    descripcion: string | null
    ubicacion: string | null
    deleted_at: Date | null
  }

  export type FincaCountAggregateOutputType = {
    finca_id: number
    nombre: number
    descripcion: number
    ubicacion: number
    deleted_at: number
    _all: number
  }


  export type FincaAvgAggregateInputType = {
    finca_id?: true
  }

  export type FincaSumAggregateInputType = {
    finca_id?: true
  }

  export type FincaMinAggregateInputType = {
    finca_id?: true
    nombre?: true
    descripcion?: true
    ubicacion?: true
    deleted_at?: true
  }

  export type FincaMaxAggregateInputType = {
    finca_id?: true
    nombre?: true
    descripcion?: true
    ubicacion?: true
    deleted_at?: true
  }

  export type FincaCountAggregateInputType = {
    finca_id?: true
    nombre?: true
    descripcion?: true
    ubicacion?: true
    deleted_at?: true
    _all?: true
  }

  export type FincaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which finca to aggregate.
     */
    where?: fincaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fincas to fetch.
     */
    orderBy?: fincaOrderByWithRelationInput | fincaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: fincaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fincas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fincas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned fincas
    **/
    _count?: true | FincaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FincaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FincaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FincaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FincaMaxAggregateInputType
  }

  export type GetFincaAggregateType<T extends FincaAggregateArgs> = {
        [P in keyof T & keyof AggregateFinca]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFinca[P]>
      : GetScalarType<T[P], AggregateFinca[P]>
  }




  export type fincaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: fincaWhereInput
    orderBy?: fincaOrderByWithAggregationInput | fincaOrderByWithAggregationInput[]
    by: FincaScalarFieldEnum[] | FincaScalarFieldEnum
    having?: fincaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FincaCountAggregateInputType | true
    _avg?: FincaAvgAggregateInputType
    _sum?: FincaSumAggregateInputType
    _min?: FincaMinAggregateInputType
    _max?: FincaMaxAggregateInputType
  }

  export type FincaGroupByOutputType = {
    finca_id: number
    nombre: string
    descripcion: string | null
    ubicacion: string | null
    deleted_at: Date | null
    _count: FincaCountAggregateOutputType | null
    _avg: FincaAvgAggregateOutputType | null
    _sum: FincaSumAggregateOutputType | null
    _min: FincaMinAggregateOutputType | null
    _max: FincaMaxAggregateOutputType | null
  }

  type GetFincaGroupByPayload<T extends fincaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FincaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FincaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FincaGroupByOutputType[P]>
            : GetScalarType<T[P], FincaGroupByOutputType[P]>
        }
      >
    >


  export type fincaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    finca_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    ubicacion?: boolean
    deleted_at?: boolean
    usuarios?: boolean | finca$usuariosArgs<ExtArgs>
    _count?: boolean | FincaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["finca"]>

  export type fincaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    finca_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    ubicacion?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["finca"]>

  export type fincaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    finca_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    ubicacion?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["finca"]>

  export type fincaSelectScalar = {
    finca_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    ubicacion?: boolean
    deleted_at?: boolean
  }

  export type fincaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"finca_id" | "nombre" | "descripcion" | "ubicacion" | "deleted_at", ExtArgs["result"]["finca"]>
  export type fincaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | finca$usuariosArgs<ExtArgs>
    _count?: boolean | FincaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type fincaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type fincaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $fincaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "finca"
    objects: {
      usuarios: Prisma.$usuariosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      finca_id: number
      nombre: string
      descripcion: string | null
      ubicacion: string | null
      deleted_at: Date | null
    }, ExtArgs["result"]["finca"]>
    composites: {}
  }

  type fincaGetPayload<S extends boolean | null | undefined | fincaDefaultArgs> = $Result.GetResult<Prisma.$fincaPayload, S>

  type fincaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<fincaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FincaCountAggregateInputType | true
    }

  export interface fincaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['finca'], meta: { name: 'finca' } }
    /**
     * Find zero or one Finca that matches the filter.
     * @param {fincaFindUniqueArgs} args - Arguments to find a Finca
     * @example
     * // Get one Finca
     * const finca = await prisma.finca.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends fincaFindUniqueArgs>(args: SelectSubset<T, fincaFindUniqueArgs<ExtArgs>>): Prisma__fincaClient<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Finca that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {fincaFindUniqueOrThrowArgs} args - Arguments to find a Finca
     * @example
     * // Get one Finca
     * const finca = await prisma.finca.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends fincaFindUniqueOrThrowArgs>(args: SelectSubset<T, fincaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__fincaClient<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Finca that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fincaFindFirstArgs} args - Arguments to find a Finca
     * @example
     * // Get one Finca
     * const finca = await prisma.finca.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends fincaFindFirstArgs>(args?: SelectSubset<T, fincaFindFirstArgs<ExtArgs>>): Prisma__fincaClient<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Finca that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fincaFindFirstOrThrowArgs} args - Arguments to find a Finca
     * @example
     * // Get one Finca
     * const finca = await prisma.finca.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends fincaFindFirstOrThrowArgs>(args?: SelectSubset<T, fincaFindFirstOrThrowArgs<ExtArgs>>): Prisma__fincaClient<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Fincas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fincaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Fincas
     * const fincas = await prisma.finca.findMany()
     * 
     * // Get first 10 Fincas
     * const fincas = await prisma.finca.findMany({ take: 10 })
     * 
     * // Only select the `finca_id`
     * const fincaWithFinca_idOnly = await prisma.finca.findMany({ select: { finca_id: true } })
     * 
     */
    findMany<T extends fincaFindManyArgs>(args?: SelectSubset<T, fincaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Finca.
     * @param {fincaCreateArgs} args - Arguments to create a Finca.
     * @example
     * // Create one Finca
     * const Finca = await prisma.finca.create({
     *   data: {
     *     // ... data to create a Finca
     *   }
     * })
     * 
     */
    create<T extends fincaCreateArgs>(args: SelectSubset<T, fincaCreateArgs<ExtArgs>>): Prisma__fincaClient<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Fincas.
     * @param {fincaCreateManyArgs} args - Arguments to create many Fincas.
     * @example
     * // Create many Fincas
     * const finca = await prisma.finca.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends fincaCreateManyArgs>(args?: SelectSubset<T, fincaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Fincas and returns the data saved in the database.
     * @param {fincaCreateManyAndReturnArgs} args - Arguments to create many Fincas.
     * @example
     * // Create many Fincas
     * const finca = await prisma.finca.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Fincas and only return the `finca_id`
     * const fincaWithFinca_idOnly = await prisma.finca.createManyAndReturn({
     *   select: { finca_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends fincaCreateManyAndReturnArgs>(args?: SelectSubset<T, fincaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Finca.
     * @param {fincaDeleteArgs} args - Arguments to delete one Finca.
     * @example
     * // Delete one Finca
     * const Finca = await prisma.finca.delete({
     *   where: {
     *     // ... filter to delete one Finca
     *   }
     * })
     * 
     */
    delete<T extends fincaDeleteArgs>(args: SelectSubset<T, fincaDeleteArgs<ExtArgs>>): Prisma__fincaClient<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Finca.
     * @param {fincaUpdateArgs} args - Arguments to update one Finca.
     * @example
     * // Update one Finca
     * const finca = await prisma.finca.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends fincaUpdateArgs>(args: SelectSubset<T, fincaUpdateArgs<ExtArgs>>): Prisma__fincaClient<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Fincas.
     * @param {fincaDeleteManyArgs} args - Arguments to filter Fincas to delete.
     * @example
     * // Delete a few Fincas
     * const { count } = await prisma.finca.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends fincaDeleteManyArgs>(args?: SelectSubset<T, fincaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fincas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fincaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Fincas
     * const finca = await prisma.finca.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends fincaUpdateManyArgs>(args: SelectSubset<T, fincaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Fincas and returns the data updated in the database.
     * @param {fincaUpdateManyAndReturnArgs} args - Arguments to update many Fincas.
     * @example
     * // Update many Fincas
     * const finca = await prisma.finca.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Fincas and only return the `finca_id`
     * const fincaWithFinca_idOnly = await prisma.finca.updateManyAndReturn({
     *   select: { finca_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends fincaUpdateManyAndReturnArgs>(args: SelectSubset<T, fincaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Finca.
     * @param {fincaUpsertArgs} args - Arguments to update or create a Finca.
     * @example
     * // Update or create a Finca
     * const finca = await prisma.finca.upsert({
     *   create: {
     *     // ... data to create a Finca
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Finca we want to update
     *   }
     * })
     */
    upsert<T extends fincaUpsertArgs>(args: SelectSubset<T, fincaUpsertArgs<ExtArgs>>): Prisma__fincaClient<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Fincas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fincaCountArgs} args - Arguments to filter Fincas to count.
     * @example
     * // Count the number of Fincas
     * const count = await prisma.finca.count({
     *   where: {
     *     // ... the filter for the Fincas we want to count
     *   }
     * })
    **/
    count<T extends fincaCountArgs>(
      args?: Subset<T, fincaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FincaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Finca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FincaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FincaAggregateArgs>(args: Subset<T, FincaAggregateArgs>): Prisma.PrismaPromise<GetFincaAggregateType<T>>

    /**
     * Group by Finca.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {fincaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends fincaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: fincaGroupByArgs['orderBy'] }
        : { orderBy?: fincaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, fincaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFincaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the finca model
   */
  readonly fields: fincaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for finca.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__fincaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends finca$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, finca$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the finca model
   */
  interface fincaFieldRefs {
    readonly finca_id: FieldRef<"finca", 'Int'>
    readonly nombre: FieldRef<"finca", 'String'>
    readonly descripcion: FieldRef<"finca", 'String'>
    readonly ubicacion: FieldRef<"finca", 'String'>
    readonly deleted_at: FieldRef<"finca", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * finca findUnique
   */
  export type fincaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fincaInclude<ExtArgs> | null
    /**
     * Filter, which finca to fetch.
     */
    where: fincaWhereUniqueInput
  }

  /**
   * finca findUniqueOrThrow
   */
  export type fincaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fincaInclude<ExtArgs> | null
    /**
     * Filter, which finca to fetch.
     */
    where: fincaWhereUniqueInput
  }

  /**
   * finca findFirst
   */
  export type fincaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fincaInclude<ExtArgs> | null
    /**
     * Filter, which finca to fetch.
     */
    where?: fincaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fincas to fetch.
     */
    orderBy?: fincaOrderByWithRelationInput | fincaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fincas.
     */
    cursor?: fincaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fincas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fincas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fincas.
     */
    distinct?: FincaScalarFieldEnum | FincaScalarFieldEnum[]
  }

  /**
   * finca findFirstOrThrow
   */
  export type fincaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fincaInclude<ExtArgs> | null
    /**
     * Filter, which finca to fetch.
     */
    where?: fincaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fincas to fetch.
     */
    orderBy?: fincaOrderByWithRelationInput | fincaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for fincas.
     */
    cursor?: fincaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fincas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fincas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of fincas.
     */
    distinct?: FincaScalarFieldEnum | FincaScalarFieldEnum[]
  }

  /**
   * finca findMany
   */
  export type fincaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fincaInclude<ExtArgs> | null
    /**
     * Filter, which fincas to fetch.
     */
    where?: fincaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of fincas to fetch.
     */
    orderBy?: fincaOrderByWithRelationInput | fincaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing fincas.
     */
    cursor?: fincaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` fincas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` fincas.
     */
    skip?: number
    distinct?: FincaScalarFieldEnum | FincaScalarFieldEnum[]
  }

  /**
   * finca create
   */
  export type fincaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fincaInclude<ExtArgs> | null
    /**
     * The data needed to create a finca.
     */
    data: XOR<fincaCreateInput, fincaUncheckedCreateInput>
  }

  /**
   * finca createMany
   */
  export type fincaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many fincas.
     */
    data: fincaCreateManyInput | fincaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * finca createManyAndReturn
   */
  export type fincaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * The data used to create many fincas.
     */
    data: fincaCreateManyInput | fincaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * finca update
   */
  export type fincaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fincaInclude<ExtArgs> | null
    /**
     * The data needed to update a finca.
     */
    data: XOR<fincaUpdateInput, fincaUncheckedUpdateInput>
    /**
     * Choose, which finca to update.
     */
    where: fincaWhereUniqueInput
  }

  /**
   * finca updateMany
   */
  export type fincaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update fincas.
     */
    data: XOR<fincaUpdateManyMutationInput, fincaUncheckedUpdateManyInput>
    /**
     * Filter which fincas to update
     */
    where?: fincaWhereInput
    /**
     * Limit how many fincas to update.
     */
    limit?: number
  }

  /**
   * finca updateManyAndReturn
   */
  export type fincaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * The data used to update fincas.
     */
    data: XOR<fincaUpdateManyMutationInput, fincaUncheckedUpdateManyInput>
    /**
     * Filter which fincas to update
     */
    where?: fincaWhereInput
    /**
     * Limit how many fincas to update.
     */
    limit?: number
  }

  /**
   * finca upsert
   */
  export type fincaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fincaInclude<ExtArgs> | null
    /**
     * The filter to search for the finca to update in case it exists.
     */
    where: fincaWhereUniqueInput
    /**
     * In case the finca found by the `where` argument doesn't exist, create a new finca with this data.
     */
    create: XOR<fincaCreateInput, fincaUncheckedCreateInput>
    /**
     * In case the finca was found with the provided `where` argument, update it with this data.
     */
    update: XOR<fincaUpdateInput, fincaUncheckedUpdateInput>
  }

  /**
   * finca delete
   */
  export type fincaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fincaInclude<ExtArgs> | null
    /**
     * Filter which finca to delete.
     */
    where: fincaWhereUniqueInput
  }

  /**
   * finca deleteMany
   */
  export type fincaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which fincas to delete
     */
    where?: fincaWhereInput
    /**
     * Limit how many fincas to delete.
     */
    limit?: number
  }

  /**
   * finca.usuarios
   */
  export type finca$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    cursor?: usuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * finca without action
   */
  export type fincaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fincaInclude<ExtArgs> | null
  }


  /**
   * Model usuarios
   */

  export type AggregateUsuarios = {
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  export type UsuariosAvgAggregateOutputType = {
    usuario_id: number | null
    finca_id: number | null
    rol_id: number | null
  }

  export type UsuariosSumAggregateOutputType = {
    usuario_id: number | null
    finca_id: number | null
    rol_id: number | null
  }

  export type UsuariosMinAggregateOutputType = {
    usuario_id: number | null
    finca_id: number | null
    rol_id: number | null
    nombre: string | null
    correo: string | null
    contraseña: string | null
    deleted_at: Date | null
  }

  export type UsuariosMaxAggregateOutputType = {
    usuario_id: number | null
    finca_id: number | null
    rol_id: number | null
    nombre: string | null
    correo: string | null
    contraseña: string | null
    deleted_at: Date | null
  }

  export type UsuariosCountAggregateOutputType = {
    usuario_id: number
    finca_id: number
    rol_id: number
    nombre: number
    correo: number
    contraseña: number
    deleted_at: number
    _all: number
  }


  export type UsuariosAvgAggregateInputType = {
    usuario_id?: true
    finca_id?: true
    rol_id?: true
  }

  export type UsuariosSumAggregateInputType = {
    usuario_id?: true
    finca_id?: true
    rol_id?: true
  }

  export type UsuariosMinAggregateInputType = {
    usuario_id?: true
    finca_id?: true
    rol_id?: true
    nombre?: true
    correo?: true
    contraseña?: true
    deleted_at?: true
  }

  export type UsuariosMaxAggregateInputType = {
    usuario_id?: true
    finca_id?: true
    rol_id?: true
    nombre?: true
    correo?: true
    contraseña?: true
    deleted_at?: true
  }

  export type UsuariosCountAggregateInputType = {
    usuario_id?: true
    finca_id?: true
    rol_id?: true
    nombre?: true
    correo?: true
    contraseña?: true
    deleted_at?: true
    _all?: true
  }

  export type UsuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to aggregate.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned usuarios
    **/
    _count?: true | UsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuariosMaxAggregateInputType
  }

  export type GetUsuariosAggregateType<T extends UsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarios[P]>
      : GetScalarType<T[P], AggregateUsuarios[P]>
  }




  export type usuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usuariosWhereInput
    orderBy?: usuariosOrderByWithAggregationInput | usuariosOrderByWithAggregationInput[]
    by: UsuariosScalarFieldEnum[] | UsuariosScalarFieldEnum
    having?: usuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuariosCountAggregateInputType | true
    _avg?: UsuariosAvgAggregateInputType
    _sum?: UsuariosSumAggregateInputType
    _min?: UsuariosMinAggregateInputType
    _max?: UsuariosMaxAggregateInputType
  }

  export type UsuariosGroupByOutputType = {
    usuario_id: number
    finca_id: number | null
    rol_id: number | null
    nombre: string
    correo: string
    contraseña: string | null
    deleted_at: Date | null
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  type GetUsuariosGroupByPayload<T extends usuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
        }
      >
    >


  export type usuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuario_id?: boolean
    finca_id?: boolean
    rol_id?: boolean
    nombre?: boolean
    correo?: boolean
    contraseña?: boolean
    deleted_at?: boolean
    finca?: boolean | usuarios$fincaArgs<ExtArgs>
    rol?: boolean | usuarios$rolArgs<ExtArgs>
    eventos_veterinario?: boolean | usuarios$eventos_veterinarioArgs<ExtArgs>
    eventos_operador?: boolean | usuarios$eventos_operadorArgs<ExtArgs>
    alimentaciones?: boolean | usuarios$alimentacionesArgs<ExtArgs>
    pesajes_realizados?: boolean | usuarios$pesajes_realizadosArgs<ExtArgs>
    compras_realizadas?: boolean | usuarios$compras_realizadasArgs<ExtArgs>
    producciones_carne?: boolean | usuarios$producciones_carneArgs<ExtArgs>
    producciones_leche?: boolean | usuarios$producciones_lecheArgs<ExtArgs>
    montas_supervisadas?: boolean | usuarios$montas_supervisadasArgs<ExtArgs>
    diagnosticos?: boolean | usuarios$diagnosticosArgs<ExtArgs>
    partos_veterinario?: boolean | usuarios$partos_veterinarioArgs<ExtArgs>
    partos_operador?: boolean | usuarios$partos_operadorArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuario_id?: boolean
    finca_id?: boolean
    rol_id?: boolean
    nombre?: boolean
    correo?: boolean
    contraseña?: boolean
    deleted_at?: boolean
    finca?: boolean | usuarios$fincaArgs<ExtArgs>
    rol?: boolean | usuarios$rolArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    usuario_id?: boolean
    finca_id?: boolean
    rol_id?: boolean
    nombre?: boolean
    correo?: boolean
    contraseña?: boolean
    deleted_at?: boolean
    finca?: boolean | usuarios$fincaArgs<ExtArgs>
    rol?: boolean | usuarios$rolArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>

  export type usuariosSelectScalar = {
    usuario_id?: boolean
    finca_id?: boolean
    rol_id?: boolean
    nombre?: boolean
    correo?: boolean
    contraseña?: boolean
    deleted_at?: boolean
  }

  export type usuariosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"usuario_id" | "finca_id" | "rol_id" | "nombre" | "correo" | "contraseña" | "deleted_at", ExtArgs["result"]["usuarios"]>
  export type usuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    finca?: boolean | usuarios$fincaArgs<ExtArgs>
    rol?: boolean | usuarios$rolArgs<ExtArgs>
    eventos_veterinario?: boolean | usuarios$eventos_veterinarioArgs<ExtArgs>
    eventos_operador?: boolean | usuarios$eventos_operadorArgs<ExtArgs>
    alimentaciones?: boolean | usuarios$alimentacionesArgs<ExtArgs>
    pesajes_realizados?: boolean | usuarios$pesajes_realizadosArgs<ExtArgs>
    compras_realizadas?: boolean | usuarios$compras_realizadasArgs<ExtArgs>
    producciones_carne?: boolean | usuarios$producciones_carneArgs<ExtArgs>
    producciones_leche?: boolean | usuarios$producciones_lecheArgs<ExtArgs>
    montas_supervisadas?: boolean | usuarios$montas_supervisadasArgs<ExtArgs>
    diagnosticos?: boolean | usuarios$diagnosticosArgs<ExtArgs>
    partos_veterinario?: boolean | usuarios$partos_veterinarioArgs<ExtArgs>
    partos_operador?: boolean | usuarios$partos_operadorArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usuariosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    finca?: boolean | usuarios$fincaArgs<ExtArgs>
    rol?: boolean | usuarios$rolArgs<ExtArgs>
  }
  export type usuariosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    finca?: boolean | usuarios$fincaArgs<ExtArgs>
    rol?: boolean | usuarios$rolArgs<ExtArgs>
  }

  export type $usuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "usuarios"
    objects: {
      finca: Prisma.$fincaPayload<ExtArgs> | null
      rol: Prisma.$rolesPayload<ExtArgs> | null
      eventos_veterinario: Prisma.$evento_sanitarioPayload<ExtArgs>[]
      eventos_operador: Prisma.$evento_sanitarioPayload<ExtArgs>[]
      alimentaciones: Prisma.$alimentacionPayload<ExtArgs>[]
      pesajes_realizados: Prisma.$pesajesPayload<ExtArgs>[]
      compras_realizadas: Prisma.$comprasPayload<ExtArgs>[]
      producciones_carne: Prisma.$produccion_carnePayload<ExtArgs>[]
      producciones_leche: Prisma.$produccion_lecheraPayload<ExtArgs>[]
      montas_supervisadas: Prisma.$evento_montaPayload<ExtArgs>[]
      diagnosticos: Prisma.$diagnostico_preñezPayload<ExtArgs>[]
      partos_veterinario: Prisma.$evento_partoPayload<ExtArgs>[]
      partos_operador: Prisma.$evento_partoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      usuario_id: number
      finca_id: number | null
      rol_id: number | null
      nombre: string
      correo: string
      contraseña: string | null
      deleted_at: Date | null
    }, ExtArgs["result"]["usuarios"]>
    composites: {}
  }

  type usuariosGetPayload<S extends boolean | null | undefined | usuariosDefaultArgs> = $Result.GetResult<Prisma.$usuariosPayload, S>

  type usuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usuariosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsuariosCountAggregateInputType | true
    }

  export interface usuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['usuarios'], meta: { name: 'usuarios' } }
    /**
     * Find zero or one Usuarios that matches the filter.
     * @param {usuariosFindUniqueArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usuariosFindUniqueArgs>(args: SelectSubset<T, usuariosFindUniqueArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Usuarios that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usuariosFindUniqueOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, usuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usuariosFindFirstArgs>(args?: SelectSubset<T, usuariosFindFirstArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindFirstOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, usuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuarios.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuarios.findMany({ take: 10 })
     * 
     * // Only select the `usuario_id`
     * const usuariosWithUsuario_idOnly = await prisma.usuarios.findMany({ select: { usuario_id: true } })
     * 
     */
    findMany<T extends usuariosFindManyArgs>(args?: SelectSubset<T, usuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Usuarios.
     * @param {usuariosCreateArgs} args - Arguments to create a Usuarios.
     * @example
     * // Create one Usuarios
     * const Usuarios = await prisma.usuarios.create({
     *   data: {
     *     // ... data to create a Usuarios
     *   }
     * })
     * 
     */
    create<T extends usuariosCreateArgs>(args: SelectSubset<T, usuariosCreateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Usuarios.
     * @param {usuariosCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usuariosCreateManyArgs>(args?: SelectSubset<T, usuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Usuarios and returns the data saved in the database.
     * @param {usuariosCreateManyAndReturnArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Usuarios and only return the `usuario_id`
     * const usuariosWithUsuario_idOnly = await prisma.usuarios.createManyAndReturn({
     *   select: { usuario_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usuariosCreateManyAndReturnArgs>(args?: SelectSubset<T, usuariosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Usuarios.
     * @param {usuariosDeleteArgs} args - Arguments to delete one Usuarios.
     * @example
     * // Delete one Usuarios
     * const Usuarios = await prisma.usuarios.delete({
     *   where: {
     *     // ... filter to delete one Usuarios
     *   }
     * })
     * 
     */
    delete<T extends usuariosDeleteArgs>(args: SelectSubset<T, usuariosDeleteArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Usuarios.
     * @param {usuariosUpdateArgs} args - Arguments to update one Usuarios.
     * @example
     * // Update one Usuarios
     * const usuarios = await prisma.usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usuariosUpdateArgs>(args: SelectSubset<T, usuariosUpdateArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Usuarios.
     * @param {usuariosDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usuariosDeleteManyArgs>(args?: SelectSubset<T, usuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usuariosUpdateManyArgs>(args: SelectSubset<T, usuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios and returns the data updated in the database.
     * @param {usuariosUpdateManyAndReturnArgs} args - Arguments to update many Usuarios.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Usuarios and only return the `usuario_id`
     * const usuariosWithUsuario_idOnly = await prisma.usuarios.updateManyAndReturn({
     *   select: { usuario_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usuariosUpdateManyAndReturnArgs>(args: SelectSubset<T, usuariosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Usuarios.
     * @param {usuariosUpsertArgs} args - Arguments to update or create a Usuarios.
     * @example
     * // Update or create a Usuarios
     * const usuarios = await prisma.usuarios.upsert({
     *   create: {
     *     // ... data to create a Usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuarios we want to update
     *   }
     * })
     */
    upsert<T extends usuariosUpsertArgs>(args: SelectSubset<T, usuariosUpsertArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuarios.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends usuariosCountArgs>(
      args?: Subset<T, usuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuariosAggregateArgs>(args: Subset<T, UsuariosAggregateArgs>): Prisma.PrismaPromise<GetUsuariosAggregateType<T>>

    /**
     * Group by Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usuariosGroupByArgs['orderBy'] }
        : { orderBy?: usuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the usuarios model
   */
  readonly fields: usuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    finca<T extends usuarios$fincaArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$fincaArgs<ExtArgs>>): Prisma__fincaClient<$Result.GetResult<Prisma.$fincaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    rol<T extends usuarios$rolArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$rolArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    eventos_veterinario<T extends usuarios$eventos_veterinarioArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$eventos_veterinarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    eventos_operador<T extends usuarios$eventos_operadorArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$eventos_operadorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alimentaciones<T extends usuarios$alimentacionesArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$alimentacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pesajes_realizados<T extends usuarios$pesajes_realizadosArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$pesajes_realizadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    compras_realizadas<T extends usuarios$compras_realizadasArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$compras_realizadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    producciones_carne<T extends usuarios$producciones_carneArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$producciones_carneArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    producciones_leche<T extends usuarios$producciones_lecheArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$producciones_lecheArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    montas_supervisadas<T extends usuarios$montas_supervisadasArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$montas_supervisadasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    diagnosticos<T extends usuarios$diagnosticosArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$diagnosticosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    partos_veterinario<T extends usuarios$partos_veterinarioArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$partos_veterinarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    partos_operador<T extends usuarios$partos_operadorArgs<ExtArgs> = {}>(args?: Subset<T, usuarios$partos_operadorArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the usuarios model
   */
  interface usuariosFieldRefs {
    readonly usuario_id: FieldRef<"usuarios", 'Int'>
    readonly finca_id: FieldRef<"usuarios", 'Int'>
    readonly rol_id: FieldRef<"usuarios", 'Int'>
    readonly nombre: FieldRef<"usuarios", 'String'>
    readonly correo: FieldRef<"usuarios", 'String'>
    readonly contraseña: FieldRef<"usuarios", 'String'>
    readonly deleted_at: FieldRef<"usuarios", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * usuarios findUnique
   */
  export type usuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findUniqueOrThrow
   */
  export type usuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios findFirst
   */
  export type usuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findFirstOrThrow
   */
  export type usuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios findMany
   */
  export type usuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter, which usuarios to fetch.
     */
    where?: usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of usuarios to fetch.
     */
    orderBy?: usuariosOrderByWithRelationInput | usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing usuarios.
     */
    cursor?: usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` usuarios.
     */
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * usuarios create
   */
  export type usuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a usuarios.
     */
    data: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
  }

  /**
   * usuarios createMany
   */
  export type usuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * usuarios createManyAndReturn
   */
  export type usuariosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * The data used to create many usuarios.
     */
    data: usuariosCreateManyInput | usuariosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * usuarios update
   */
  export type usuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a usuarios.
     */
    data: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
    /**
     * Choose, which usuarios to update.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios updateMany
   */
  export type usuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
  }

  /**
   * usuarios updateManyAndReturn
   */
  export type usuariosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * The data used to update usuarios.
     */
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyInput>
    /**
     * Filter which usuarios to update
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * usuarios upsert
   */
  export type usuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the usuarios to update in case it exists.
     */
    where: usuariosWhereUniqueInput
    /**
     * In case the usuarios found by the `where` argument doesn't exist, create a new usuarios with this data.
     */
    create: XOR<usuariosCreateInput, usuariosUncheckedCreateInput>
    /**
     * In case the usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usuariosUpdateInput, usuariosUncheckedUpdateInput>
  }

  /**
   * usuarios delete
   */
  export type usuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
    /**
     * Filter which usuarios to delete.
     */
    where: usuariosWhereUniqueInput
  }

  /**
   * usuarios deleteMany
   */
  export type usuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which usuarios to delete
     */
    where?: usuariosWhereInput
    /**
     * Limit how many usuarios to delete.
     */
    limit?: number
  }

  /**
   * usuarios.finca
   */
  export type usuarios$fincaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the finca
     */
    select?: fincaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the finca
     */
    omit?: fincaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: fincaInclude<ExtArgs> | null
    where?: fincaWhereInput
  }

  /**
   * usuarios.rol
   */
  export type usuarios$rolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    where?: rolesWhereInput
  }

  /**
   * usuarios.eventos_veterinario
   */
  export type usuarios$eventos_veterinarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    where?: evento_sanitarioWhereInput
    orderBy?: evento_sanitarioOrderByWithRelationInput | evento_sanitarioOrderByWithRelationInput[]
    cursor?: evento_sanitarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_sanitarioScalarFieldEnum | Evento_sanitarioScalarFieldEnum[]
  }

  /**
   * usuarios.eventos_operador
   */
  export type usuarios$eventos_operadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    where?: evento_sanitarioWhereInput
    orderBy?: evento_sanitarioOrderByWithRelationInput | evento_sanitarioOrderByWithRelationInput[]
    cursor?: evento_sanitarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_sanitarioScalarFieldEnum | Evento_sanitarioScalarFieldEnum[]
  }

  /**
   * usuarios.alimentaciones
   */
  export type usuarios$alimentacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    where?: alimentacionWhereInput
    orderBy?: alimentacionOrderByWithRelationInput | alimentacionOrderByWithRelationInput[]
    cursor?: alimentacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlimentacionScalarFieldEnum | AlimentacionScalarFieldEnum[]
  }

  /**
   * usuarios.pesajes_realizados
   */
  export type usuarios$pesajes_realizadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    where?: pesajesWhereInput
    orderBy?: pesajesOrderByWithRelationInput | pesajesOrderByWithRelationInput[]
    cursor?: pesajesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PesajesScalarFieldEnum | PesajesScalarFieldEnum[]
  }

  /**
   * usuarios.compras_realizadas
   */
  export type usuarios$compras_realizadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
    where?: comprasWhereInput
    orderBy?: comprasOrderByWithRelationInput | comprasOrderByWithRelationInput[]
    cursor?: comprasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComprasScalarFieldEnum | ComprasScalarFieldEnum[]
  }

  /**
   * usuarios.producciones_carne
   */
  export type usuarios$producciones_carneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
    where?: produccion_carneWhereInput
    orderBy?: produccion_carneOrderByWithRelationInput | produccion_carneOrderByWithRelationInput[]
    cursor?: produccion_carneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Produccion_carneScalarFieldEnum | Produccion_carneScalarFieldEnum[]
  }

  /**
   * usuarios.producciones_leche
   */
  export type usuarios$producciones_lecheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    where?: produccion_lecheraWhereInput
    orderBy?: produccion_lecheraOrderByWithRelationInput | produccion_lecheraOrderByWithRelationInput[]
    cursor?: produccion_lecheraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Produccion_lecheraScalarFieldEnum | Produccion_lecheraScalarFieldEnum[]
  }

  /**
   * usuarios.montas_supervisadas
   */
  export type usuarios$montas_supervisadasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    where?: evento_montaWhereInput
    orderBy?: evento_montaOrderByWithRelationInput | evento_montaOrderByWithRelationInput[]
    cursor?: evento_montaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_montaScalarFieldEnum | Evento_montaScalarFieldEnum[]
  }

  /**
   * usuarios.diagnosticos
   */
  export type usuarios$diagnosticosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
    where?: diagnostico_preñezWhereInput
    orderBy?: diagnostico_preñezOrderByWithRelationInput | diagnostico_preñezOrderByWithRelationInput[]
    cursor?: diagnostico_preñezWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Diagnostico_preñezScalarFieldEnum | Diagnostico_preñezScalarFieldEnum[]
  }

  /**
   * usuarios.partos_veterinario
   */
  export type usuarios$partos_veterinarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    where?: evento_partoWhereInput
    orderBy?: evento_partoOrderByWithRelationInput | evento_partoOrderByWithRelationInput[]
    cursor?: evento_partoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_partoScalarFieldEnum | Evento_partoScalarFieldEnum[]
  }

  /**
   * usuarios.partos_operador
   */
  export type usuarios$partos_operadorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    where?: evento_partoWhereInput
    orderBy?: evento_partoOrderByWithRelationInput | evento_partoOrderByWithRelationInput[]
    cursor?: evento_partoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_partoScalarFieldEnum | Evento_partoScalarFieldEnum[]
  }

  /**
   * usuarios without action
   */
  export type usuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the usuarios
     */
    select?: usuariosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the usuarios
     */
    omit?: usuariosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usuariosInclude<ExtArgs> | null
  }


  /**
   * Model unidades
   */

  export type AggregateUnidades = {
    _count: UnidadesCountAggregateOutputType | null
    _avg: UnidadesAvgAggregateOutputType | null
    _sum: UnidadesSumAggregateOutputType | null
    _min: UnidadesMinAggregateOutputType | null
    _max: UnidadesMaxAggregateOutputType | null
  }

  export type UnidadesAvgAggregateOutputType = {
    unidad_id: number | null
  }

  export type UnidadesSumAggregateOutputType = {
    unidad_id: number | null
  }

  export type UnidadesMinAggregateOutputType = {
    unidad_id: number | null
    nombre: string | null
    deleted_at: Date | null
  }

  export type UnidadesMaxAggregateOutputType = {
    unidad_id: number | null
    nombre: string | null
    deleted_at: Date | null
  }

  export type UnidadesCountAggregateOutputType = {
    unidad_id: number
    nombre: number
    deleted_at: number
    _all: number
  }


  export type UnidadesAvgAggregateInputType = {
    unidad_id?: true
  }

  export type UnidadesSumAggregateInputType = {
    unidad_id?: true
  }

  export type UnidadesMinAggregateInputType = {
    unidad_id?: true
    nombre?: true
    deleted_at?: true
  }

  export type UnidadesMaxAggregateInputType = {
    unidad_id?: true
    nombre?: true
    deleted_at?: true
  }

  export type UnidadesCountAggregateInputType = {
    unidad_id?: true
    nombre?: true
    deleted_at?: true
    _all?: true
  }

  export type UnidadesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which unidades to aggregate.
     */
    where?: unidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of unidades to fetch.
     */
    orderBy?: unidadesOrderByWithRelationInput | unidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: unidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` unidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` unidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned unidades
    **/
    _count?: true | UnidadesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UnidadesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UnidadesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UnidadesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UnidadesMaxAggregateInputType
  }

  export type GetUnidadesAggregateType<T extends UnidadesAggregateArgs> = {
        [P in keyof T & keyof AggregateUnidades]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUnidades[P]>
      : GetScalarType<T[P], AggregateUnidades[P]>
  }




  export type unidadesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: unidadesWhereInput
    orderBy?: unidadesOrderByWithAggregationInput | unidadesOrderByWithAggregationInput[]
    by: UnidadesScalarFieldEnum[] | UnidadesScalarFieldEnum
    having?: unidadesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UnidadesCountAggregateInputType | true
    _avg?: UnidadesAvgAggregateInputType
    _sum?: UnidadesSumAggregateInputType
    _min?: UnidadesMinAggregateInputType
    _max?: UnidadesMaxAggregateInputType
  }

  export type UnidadesGroupByOutputType = {
    unidad_id: number
    nombre: string
    deleted_at: Date | null
    _count: UnidadesCountAggregateOutputType | null
    _avg: UnidadesAvgAggregateOutputType | null
    _sum: UnidadesSumAggregateOutputType | null
    _min: UnidadesMinAggregateOutputType | null
    _max: UnidadesMaxAggregateOutputType | null
  }

  type GetUnidadesGroupByPayload<T extends unidadesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UnidadesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UnidadesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UnidadesGroupByOutputType[P]>
            : GetScalarType<T[P], UnidadesGroupByOutputType[P]>
        }
      >
    >


  export type unidadesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    unidad_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
    insumos?: boolean | unidades$insumosArgs<ExtArgs>
    pesajes?: boolean | unidades$pesajesArgs<ExtArgs>
    producciones_leche?: boolean | unidades$producciones_lecheArgs<ExtArgs>
    _count?: boolean | UnidadesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["unidades"]>

  export type unidadesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    unidad_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["unidades"]>

  export type unidadesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    unidad_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["unidades"]>

  export type unidadesSelectScalar = {
    unidad_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
  }

  export type unidadesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"unidad_id" | "nombre" | "deleted_at", ExtArgs["result"]["unidades"]>
  export type unidadesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    insumos?: boolean | unidades$insumosArgs<ExtArgs>
    pesajes?: boolean | unidades$pesajesArgs<ExtArgs>
    producciones_leche?: boolean | unidades$producciones_lecheArgs<ExtArgs>
    _count?: boolean | UnidadesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type unidadesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type unidadesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $unidadesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "unidades"
    objects: {
      insumos: Prisma.$insumosPayload<ExtArgs>[]
      pesajes: Prisma.$pesajesPayload<ExtArgs>[]
      producciones_leche: Prisma.$produccion_lecheraPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      unidad_id: number
      nombre: string
      deleted_at: Date | null
    }, ExtArgs["result"]["unidades"]>
    composites: {}
  }

  type unidadesGetPayload<S extends boolean | null | undefined | unidadesDefaultArgs> = $Result.GetResult<Prisma.$unidadesPayload, S>

  type unidadesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<unidadesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UnidadesCountAggregateInputType | true
    }

  export interface unidadesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['unidades'], meta: { name: 'unidades' } }
    /**
     * Find zero or one Unidades that matches the filter.
     * @param {unidadesFindUniqueArgs} args - Arguments to find a Unidades
     * @example
     * // Get one Unidades
     * const unidades = await prisma.unidades.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends unidadesFindUniqueArgs>(args: SelectSubset<T, unidadesFindUniqueArgs<ExtArgs>>): Prisma__unidadesClient<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Unidades that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {unidadesFindUniqueOrThrowArgs} args - Arguments to find a Unidades
     * @example
     * // Get one Unidades
     * const unidades = await prisma.unidades.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends unidadesFindUniqueOrThrowArgs>(args: SelectSubset<T, unidadesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__unidadesClient<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Unidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {unidadesFindFirstArgs} args - Arguments to find a Unidades
     * @example
     * // Get one Unidades
     * const unidades = await prisma.unidades.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends unidadesFindFirstArgs>(args?: SelectSubset<T, unidadesFindFirstArgs<ExtArgs>>): Prisma__unidadesClient<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Unidades that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {unidadesFindFirstOrThrowArgs} args - Arguments to find a Unidades
     * @example
     * // Get one Unidades
     * const unidades = await prisma.unidades.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends unidadesFindFirstOrThrowArgs>(args?: SelectSubset<T, unidadesFindFirstOrThrowArgs<ExtArgs>>): Prisma__unidadesClient<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Unidades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {unidadesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Unidades
     * const unidades = await prisma.unidades.findMany()
     * 
     * // Get first 10 Unidades
     * const unidades = await prisma.unidades.findMany({ take: 10 })
     * 
     * // Only select the `unidad_id`
     * const unidadesWithUnidad_idOnly = await prisma.unidades.findMany({ select: { unidad_id: true } })
     * 
     */
    findMany<T extends unidadesFindManyArgs>(args?: SelectSubset<T, unidadesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Unidades.
     * @param {unidadesCreateArgs} args - Arguments to create a Unidades.
     * @example
     * // Create one Unidades
     * const Unidades = await prisma.unidades.create({
     *   data: {
     *     // ... data to create a Unidades
     *   }
     * })
     * 
     */
    create<T extends unidadesCreateArgs>(args: SelectSubset<T, unidadesCreateArgs<ExtArgs>>): Prisma__unidadesClient<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Unidades.
     * @param {unidadesCreateManyArgs} args - Arguments to create many Unidades.
     * @example
     * // Create many Unidades
     * const unidades = await prisma.unidades.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends unidadesCreateManyArgs>(args?: SelectSubset<T, unidadesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Unidades and returns the data saved in the database.
     * @param {unidadesCreateManyAndReturnArgs} args - Arguments to create many Unidades.
     * @example
     * // Create many Unidades
     * const unidades = await prisma.unidades.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Unidades and only return the `unidad_id`
     * const unidadesWithUnidad_idOnly = await prisma.unidades.createManyAndReturn({
     *   select: { unidad_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends unidadesCreateManyAndReturnArgs>(args?: SelectSubset<T, unidadesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Unidades.
     * @param {unidadesDeleteArgs} args - Arguments to delete one Unidades.
     * @example
     * // Delete one Unidades
     * const Unidades = await prisma.unidades.delete({
     *   where: {
     *     // ... filter to delete one Unidades
     *   }
     * })
     * 
     */
    delete<T extends unidadesDeleteArgs>(args: SelectSubset<T, unidadesDeleteArgs<ExtArgs>>): Prisma__unidadesClient<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Unidades.
     * @param {unidadesUpdateArgs} args - Arguments to update one Unidades.
     * @example
     * // Update one Unidades
     * const unidades = await prisma.unidades.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends unidadesUpdateArgs>(args: SelectSubset<T, unidadesUpdateArgs<ExtArgs>>): Prisma__unidadesClient<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Unidades.
     * @param {unidadesDeleteManyArgs} args - Arguments to filter Unidades to delete.
     * @example
     * // Delete a few Unidades
     * const { count } = await prisma.unidades.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends unidadesDeleteManyArgs>(args?: SelectSubset<T, unidadesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Unidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {unidadesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Unidades
     * const unidades = await prisma.unidades.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends unidadesUpdateManyArgs>(args: SelectSubset<T, unidadesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Unidades and returns the data updated in the database.
     * @param {unidadesUpdateManyAndReturnArgs} args - Arguments to update many Unidades.
     * @example
     * // Update many Unidades
     * const unidades = await prisma.unidades.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Unidades and only return the `unidad_id`
     * const unidadesWithUnidad_idOnly = await prisma.unidades.updateManyAndReturn({
     *   select: { unidad_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends unidadesUpdateManyAndReturnArgs>(args: SelectSubset<T, unidadesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Unidades.
     * @param {unidadesUpsertArgs} args - Arguments to update or create a Unidades.
     * @example
     * // Update or create a Unidades
     * const unidades = await prisma.unidades.upsert({
     *   create: {
     *     // ... data to create a Unidades
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Unidades we want to update
     *   }
     * })
     */
    upsert<T extends unidadesUpsertArgs>(args: SelectSubset<T, unidadesUpsertArgs<ExtArgs>>): Prisma__unidadesClient<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Unidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {unidadesCountArgs} args - Arguments to filter Unidades to count.
     * @example
     * // Count the number of Unidades
     * const count = await prisma.unidades.count({
     *   where: {
     *     // ... the filter for the Unidades we want to count
     *   }
     * })
    **/
    count<T extends unidadesCountArgs>(
      args?: Subset<T, unidadesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UnidadesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Unidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UnidadesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UnidadesAggregateArgs>(args: Subset<T, UnidadesAggregateArgs>): Prisma.PrismaPromise<GetUnidadesAggregateType<T>>

    /**
     * Group by Unidades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {unidadesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends unidadesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: unidadesGroupByArgs['orderBy'] }
        : { orderBy?: unidadesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, unidadesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUnidadesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the unidades model
   */
  readonly fields: unidadesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for unidades.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__unidadesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    insumos<T extends unidades$insumosArgs<ExtArgs> = {}>(args?: Subset<T, unidades$insumosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pesajes<T extends unidades$pesajesArgs<ExtArgs> = {}>(args?: Subset<T, unidades$pesajesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    producciones_leche<T extends unidades$producciones_lecheArgs<ExtArgs> = {}>(args?: Subset<T, unidades$producciones_lecheArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the unidades model
   */
  interface unidadesFieldRefs {
    readonly unidad_id: FieldRef<"unidades", 'Int'>
    readonly nombre: FieldRef<"unidades", 'String'>
    readonly deleted_at: FieldRef<"unidades", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * unidades findUnique
   */
  export type unidadesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: unidadesInclude<ExtArgs> | null
    /**
     * Filter, which unidades to fetch.
     */
    where: unidadesWhereUniqueInput
  }

  /**
   * unidades findUniqueOrThrow
   */
  export type unidadesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: unidadesInclude<ExtArgs> | null
    /**
     * Filter, which unidades to fetch.
     */
    where: unidadesWhereUniqueInput
  }

  /**
   * unidades findFirst
   */
  export type unidadesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: unidadesInclude<ExtArgs> | null
    /**
     * Filter, which unidades to fetch.
     */
    where?: unidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of unidades to fetch.
     */
    orderBy?: unidadesOrderByWithRelationInput | unidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for unidades.
     */
    cursor?: unidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` unidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` unidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of unidades.
     */
    distinct?: UnidadesScalarFieldEnum | UnidadesScalarFieldEnum[]
  }

  /**
   * unidades findFirstOrThrow
   */
  export type unidadesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: unidadesInclude<ExtArgs> | null
    /**
     * Filter, which unidades to fetch.
     */
    where?: unidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of unidades to fetch.
     */
    orderBy?: unidadesOrderByWithRelationInput | unidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for unidades.
     */
    cursor?: unidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` unidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` unidades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of unidades.
     */
    distinct?: UnidadesScalarFieldEnum | UnidadesScalarFieldEnum[]
  }

  /**
   * unidades findMany
   */
  export type unidadesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: unidadesInclude<ExtArgs> | null
    /**
     * Filter, which unidades to fetch.
     */
    where?: unidadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of unidades to fetch.
     */
    orderBy?: unidadesOrderByWithRelationInput | unidadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing unidades.
     */
    cursor?: unidadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` unidades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` unidades.
     */
    skip?: number
    distinct?: UnidadesScalarFieldEnum | UnidadesScalarFieldEnum[]
  }

  /**
   * unidades create
   */
  export type unidadesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: unidadesInclude<ExtArgs> | null
    /**
     * The data needed to create a unidades.
     */
    data: XOR<unidadesCreateInput, unidadesUncheckedCreateInput>
  }

  /**
   * unidades createMany
   */
  export type unidadesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many unidades.
     */
    data: unidadesCreateManyInput | unidadesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * unidades createManyAndReturn
   */
  export type unidadesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * The data used to create many unidades.
     */
    data: unidadesCreateManyInput | unidadesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * unidades update
   */
  export type unidadesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: unidadesInclude<ExtArgs> | null
    /**
     * The data needed to update a unidades.
     */
    data: XOR<unidadesUpdateInput, unidadesUncheckedUpdateInput>
    /**
     * Choose, which unidades to update.
     */
    where: unidadesWhereUniqueInput
  }

  /**
   * unidades updateMany
   */
  export type unidadesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update unidades.
     */
    data: XOR<unidadesUpdateManyMutationInput, unidadesUncheckedUpdateManyInput>
    /**
     * Filter which unidades to update
     */
    where?: unidadesWhereInput
    /**
     * Limit how many unidades to update.
     */
    limit?: number
  }

  /**
   * unidades updateManyAndReturn
   */
  export type unidadesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * The data used to update unidades.
     */
    data: XOR<unidadesUpdateManyMutationInput, unidadesUncheckedUpdateManyInput>
    /**
     * Filter which unidades to update
     */
    where?: unidadesWhereInput
    /**
     * Limit how many unidades to update.
     */
    limit?: number
  }

  /**
   * unidades upsert
   */
  export type unidadesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: unidadesInclude<ExtArgs> | null
    /**
     * The filter to search for the unidades to update in case it exists.
     */
    where: unidadesWhereUniqueInput
    /**
     * In case the unidades found by the `where` argument doesn't exist, create a new unidades with this data.
     */
    create: XOR<unidadesCreateInput, unidadesUncheckedCreateInput>
    /**
     * In case the unidades was found with the provided `where` argument, update it with this data.
     */
    update: XOR<unidadesUpdateInput, unidadesUncheckedUpdateInput>
  }

  /**
   * unidades delete
   */
  export type unidadesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: unidadesInclude<ExtArgs> | null
    /**
     * Filter which unidades to delete.
     */
    where: unidadesWhereUniqueInput
  }

  /**
   * unidades deleteMany
   */
  export type unidadesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which unidades to delete
     */
    where?: unidadesWhereInput
    /**
     * Limit how many unidades to delete.
     */
    limit?: number
  }

  /**
   * unidades.insumos
   */
  export type unidades$insumosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
    where?: insumosWhereInput
    orderBy?: insumosOrderByWithRelationInput | insumosOrderByWithRelationInput[]
    cursor?: insumosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InsumosScalarFieldEnum | InsumosScalarFieldEnum[]
  }

  /**
   * unidades.pesajes
   */
  export type unidades$pesajesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    where?: pesajesWhereInput
    orderBy?: pesajesOrderByWithRelationInput | pesajesOrderByWithRelationInput[]
    cursor?: pesajesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PesajesScalarFieldEnum | PesajesScalarFieldEnum[]
  }

  /**
   * unidades.producciones_leche
   */
  export type unidades$producciones_lecheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    where?: produccion_lecheraWhereInput
    orderBy?: produccion_lecheraOrderByWithRelationInput | produccion_lecheraOrderByWithRelationInput[]
    cursor?: produccion_lecheraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Produccion_lecheraScalarFieldEnum | Produccion_lecheraScalarFieldEnum[]
  }

  /**
   * unidades without action
   */
  export type unidadesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the unidades
     */
    select?: unidadesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the unidades
     */
    omit?: unidadesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: unidadesInclude<ExtArgs> | null
  }


  /**
   * Model tipo_insumo
   */

  export type AggregateTipo_insumo = {
    _count: Tipo_insumoCountAggregateOutputType | null
    _avg: Tipo_insumoAvgAggregateOutputType | null
    _sum: Tipo_insumoSumAggregateOutputType | null
    _min: Tipo_insumoMinAggregateOutputType | null
    _max: Tipo_insumoMaxAggregateOutputType | null
  }

  export type Tipo_insumoAvgAggregateOutputType = {
    tipo_insumo_id: number | null
  }

  export type Tipo_insumoSumAggregateOutputType = {
    tipo_insumo_id: number | null
  }

  export type Tipo_insumoMinAggregateOutputType = {
    tipo_insumo_id: number | null
    nombre: string | null
    deleted_at: Date | null
  }

  export type Tipo_insumoMaxAggregateOutputType = {
    tipo_insumo_id: number | null
    nombre: string | null
    deleted_at: Date | null
  }

  export type Tipo_insumoCountAggregateOutputType = {
    tipo_insumo_id: number
    nombre: number
    deleted_at: number
    _all: number
  }


  export type Tipo_insumoAvgAggregateInputType = {
    tipo_insumo_id?: true
  }

  export type Tipo_insumoSumAggregateInputType = {
    tipo_insumo_id?: true
  }

  export type Tipo_insumoMinAggregateInputType = {
    tipo_insumo_id?: true
    nombre?: true
    deleted_at?: true
  }

  export type Tipo_insumoMaxAggregateInputType = {
    tipo_insumo_id?: true
    nombre?: true
    deleted_at?: true
  }

  export type Tipo_insumoCountAggregateInputType = {
    tipo_insumo_id?: true
    nombre?: true
    deleted_at?: true
    _all?: true
  }

  export type Tipo_insumoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_insumo to aggregate.
     */
    where?: tipo_insumoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_insumos to fetch.
     */
    orderBy?: tipo_insumoOrderByWithRelationInput | tipo_insumoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipo_insumoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_insumos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipo_insumos
    **/
    _count?: true | Tipo_insumoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipo_insumoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipo_insumoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipo_insumoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipo_insumoMaxAggregateInputType
  }

  export type GetTipo_insumoAggregateType<T extends Tipo_insumoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipo_insumo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipo_insumo[P]>
      : GetScalarType<T[P], AggregateTipo_insumo[P]>
  }




  export type tipo_insumoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipo_insumoWhereInput
    orderBy?: tipo_insumoOrderByWithAggregationInput | tipo_insumoOrderByWithAggregationInput[]
    by: Tipo_insumoScalarFieldEnum[] | Tipo_insumoScalarFieldEnum
    having?: tipo_insumoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipo_insumoCountAggregateInputType | true
    _avg?: Tipo_insumoAvgAggregateInputType
    _sum?: Tipo_insumoSumAggregateInputType
    _min?: Tipo_insumoMinAggregateInputType
    _max?: Tipo_insumoMaxAggregateInputType
  }

  export type Tipo_insumoGroupByOutputType = {
    tipo_insumo_id: number
    nombre: string
    deleted_at: Date | null
    _count: Tipo_insumoCountAggregateOutputType | null
    _avg: Tipo_insumoAvgAggregateOutputType | null
    _sum: Tipo_insumoSumAggregateOutputType | null
    _min: Tipo_insumoMinAggregateOutputType | null
    _max: Tipo_insumoMaxAggregateOutputType | null
  }

  type GetTipo_insumoGroupByPayload<T extends tipo_insumoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipo_insumoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipo_insumoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipo_insumoGroupByOutputType[P]>
            : GetScalarType<T[P], Tipo_insumoGroupByOutputType[P]>
        }
      >
    >


  export type tipo_insumoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tipo_insumo_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
    insumos?: boolean | tipo_insumo$insumosArgs<ExtArgs>
    _count?: boolean | Tipo_insumoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipo_insumo"]>

  export type tipo_insumoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tipo_insumo_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["tipo_insumo"]>

  export type tipo_insumoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tipo_insumo_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["tipo_insumo"]>

  export type tipo_insumoSelectScalar = {
    tipo_insumo_id?: boolean
    nombre?: boolean
    deleted_at?: boolean
  }

  export type tipo_insumoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"tipo_insumo_id" | "nombre" | "deleted_at", ExtArgs["result"]["tipo_insumo"]>
  export type tipo_insumoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    insumos?: boolean | tipo_insumo$insumosArgs<ExtArgs>
    _count?: boolean | Tipo_insumoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tipo_insumoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tipo_insumoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tipo_insumoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipo_insumo"
    objects: {
      insumos: Prisma.$insumosPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      tipo_insumo_id: number
      nombre: string
      deleted_at: Date | null
    }, ExtArgs["result"]["tipo_insumo"]>
    composites: {}
  }

  type tipo_insumoGetPayload<S extends boolean | null | undefined | tipo_insumoDefaultArgs> = $Result.GetResult<Prisma.$tipo_insumoPayload, S>

  type tipo_insumoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tipo_insumoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tipo_insumoCountAggregateInputType | true
    }

  export interface tipo_insumoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipo_insumo'], meta: { name: 'tipo_insumo' } }
    /**
     * Find zero or one Tipo_insumo that matches the filter.
     * @param {tipo_insumoFindUniqueArgs} args - Arguments to find a Tipo_insumo
     * @example
     * // Get one Tipo_insumo
     * const tipo_insumo = await prisma.tipo_insumo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tipo_insumoFindUniqueArgs>(args: SelectSubset<T, tipo_insumoFindUniqueArgs<ExtArgs>>): Prisma__tipo_insumoClient<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tipo_insumo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tipo_insumoFindUniqueOrThrowArgs} args - Arguments to find a Tipo_insumo
     * @example
     * // Get one Tipo_insumo
     * const tipo_insumo = await prisma.tipo_insumo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tipo_insumoFindUniqueOrThrowArgs>(args: SelectSubset<T, tipo_insumoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tipo_insumoClient<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipo_insumo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_insumoFindFirstArgs} args - Arguments to find a Tipo_insumo
     * @example
     * // Get one Tipo_insumo
     * const tipo_insumo = await prisma.tipo_insumo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tipo_insumoFindFirstArgs>(args?: SelectSubset<T, tipo_insumoFindFirstArgs<ExtArgs>>): Prisma__tipo_insumoClient<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipo_insumo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_insumoFindFirstOrThrowArgs} args - Arguments to find a Tipo_insumo
     * @example
     * // Get one Tipo_insumo
     * const tipo_insumo = await prisma.tipo_insumo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tipo_insumoFindFirstOrThrowArgs>(args?: SelectSubset<T, tipo_insumoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tipo_insumoClient<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tipo_insumos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_insumoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipo_insumos
     * const tipo_insumos = await prisma.tipo_insumo.findMany()
     * 
     * // Get first 10 Tipo_insumos
     * const tipo_insumos = await prisma.tipo_insumo.findMany({ take: 10 })
     * 
     * // Only select the `tipo_insumo_id`
     * const tipo_insumoWithTipo_insumo_idOnly = await prisma.tipo_insumo.findMany({ select: { tipo_insumo_id: true } })
     * 
     */
    findMany<T extends tipo_insumoFindManyArgs>(args?: SelectSubset<T, tipo_insumoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tipo_insumo.
     * @param {tipo_insumoCreateArgs} args - Arguments to create a Tipo_insumo.
     * @example
     * // Create one Tipo_insumo
     * const Tipo_insumo = await prisma.tipo_insumo.create({
     *   data: {
     *     // ... data to create a Tipo_insumo
     *   }
     * })
     * 
     */
    create<T extends tipo_insumoCreateArgs>(args: SelectSubset<T, tipo_insumoCreateArgs<ExtArgs>>): Prisma__tipo_insumoClient<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tipo_insumos.
     * @param {tipo_insumoCreateManyArgs} args - Arguments to create many Tipo_insumos.
     * @example
     * // Create many Tipo_insumos
     * const tipo_insumo = await prisma.tipo_insumo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tipo_insumoCreateManyArgs>(args?: SelectSubset<T, tipo_insumoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tipo_insumos and returns the data saved in the database.
     * @param {tipo_insumoCreateManyAndReturnArgs} args - Arguments to create many Tipo_insumos.
     * @example
     * // Create many Tipo_insumos
     * const tipo_insumo = await prisma.tipo_insumo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tipo_insumos and only return the `tipo_insumo_id`
     * const tipo_insumoWithTipo_insumo_idOnly = await prisma.tipo_insumo.createManyAndReturn({
     *   select: { tipo_insumo_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tipo_insumoCreateManyAndReturnArgs>(args?: SelectSubset<T, tipo_insumoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tipo_insumo.
     * @param {tipo_insumoDeleteArgs} args - Arguments to delete one Tipo_insumo.
     * @example
     * // Delete one Tipo_insumo
     * const Tipo_insumo = await prisma.tipo_insumo.delete({
     *   where: {
     *     // ... filter to delete one Tipo_insumo
     *   }
     * })
     * 
     */
    delete<T extends tipo_insumoDeleteArgs>(args: SelectSubset<T, tipo_insumoDeleteArgs<ExtArgs>>): Prisma__tipo_insumoClient<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tipo_insumo.
     * @param {tipo_insumoUpdateArgs} args - Arguments to update one Tipo_insumo.
     * @example
     * // Update one Tipo_insumo
     * const tipo_insumo = await prisma.tipo_insumo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tipo_insumoUpdateArgs>(args: SelectSubset<T, tipo_insumoUpdateArgs<ExtArgs>>): Prisma__tipo_insumoClient<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tipo_insumos.
     * @param {tipo_insumoDeleteManyArgs} args - Arguments to filter Tipo_insumos to delete.
     * @example
     * // Delete a few Tipo_insumos
     * const { count } = await prisma.tipo_insumo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tipo_insumoDeleteManyArgs>(args?: SelectSubset<T, tipo_insumoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_insumos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_insumoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipo_insumos
     * const tipo_insumo = await prisma.tipo_insumo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tipo_insumoUpdateManyArgs>(args: SelectSubset<T, tipo_insumoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_insumos and returns the data updated in the database.
     * @param {tipo_insumoUpdateManyAndReturnArgs} args - Arguments to update many Tipo_insumos.
     * @example
     * // Update many Tipo_insumos
     * const tipo_insumo = await prisma.tipo_insumo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tipo_insumos and only return the `tipo_insumo_id`
     * const tipo_insumoWithTipo_insumo_idOnly = await prisma.tipo_insumo.updateManyAndReturn({
     *   select: { tipo_insumo_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tipo_insumoUpdateManyAndReturnArgs>(args: SelectSubset<T, tipo_insumoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tipo_insumo.
     * @param {tipo_insumoUpsertArgs} args - Arguments to update or create a Tipo_insumo.
     * @example
     * // Update or create a Tipo_insumo
     * const tipo_insumo = await prisma.tipo_insumo.upsert({
     *   create: {
     *     // ... data to create a Tipo_insumo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipo_insumo we want to update
     *   }
     * })
     */
    upsert<T extends tipo_insumoUpsertArgs>(args: SelectSubset<T, tipo_insumoUpsertArgs<ExtArgs>>): Prisma__tipo_insumoClient<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tipo_insumos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_insumoCountArgs} args - Arguments to filter Tipo_insumos to count.
     * @example
     * // Count the number of Tipo_insumos
     * const count = await prisma.tipo_insumo.count({
     *   where: {
     *     // ... the filter for the Tipo_insumos we want to count
     *   }
     * })
    **/
    count<T extends tipo_insumoCountArgs>(
      args?: Subset<T, tipo_insumoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipo_insumoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipo_insumo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_insumoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipo_insumoAggregateArgs>(args: Subset<T, Tipo_insumoAggregateArgs>): Prisma.PrismaPromise<GetTipo_insumoAggregateType<T>>

    /**
     * Group by Tipo_insumo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_insumoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipo_insumoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipo_insumoGroupByArgs['orderBy'] }
        : { orderBy?: tipo_insumoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipo_insumoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipo_insumoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipo_insumo model
   */
  readonly fields: tipo_insumoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipo_insumo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipo_insumoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    insumos<T extends tipo_insumo$insumosArgs<ExtArgs> = {}>(args?: Subset<T, tipo_insumo$insumosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tipo_insumo model
   */
  interface tipo_insumoFieldRefs {
    readonly tipo_insumo_id: FieldRef<"tipo_insumo", 'Int'>
    readonly nombre: FieldRef<"tipo_insumo", 'String'>
    readonly deleted_at: FieldRef<"tipo_insumo", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * tipo_insumo findUnique
   */
  export type tipo_insumoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_insumoInclude<ExtArgs> | null
    /**
     * Filter, which tipo_insumo to fetch.
     */
    where: tipo_insumoWhereUniqueInput
  }

  /**
   * tipo_insumo findUniqueOrThrow
   */
  export type tipo_insumoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_insumoInclude<ExtArgs> | null
    /**
     * Filter, which tipo_insumo to fetch.
     */
    where: tipo_insumoWhereUniqueInput
  }

  /**
   * tipo_insumo findFirst
   */
  export type tipo_insumoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_insumoInclude<ExtArgs> | null
    /**
     * Filter, which tipo_insumo to fetch.
     */
    where?: tipo_insumoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_insumos to fetch.
     */
    orderBy?: tipo_insumoOrderByWithRelationInput | tipo_insumoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_insumos.
     */
    cursor?: tipo_insumoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_insumos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_insumos.
     */
    distinct?: Tipo_insumoScalarFieldEnum | Tipo_insumoScalarFieldEnum[]
  }

  /**
   * tipo_insumo findFirstOrThrow
   */
  export type tipo_insumoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_insumoInclude<ExtArgs> | null
    /**
     * Filter, which tipo_insumo to fetch.
     */
    where?: tipo_insumoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_insumos to fetch.
     */
    orderBy?: tipo_insumoOrderByWithRelationInput | tipo_insumoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_insumos.
     */
    cursor?: tipo_insumoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_insumos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_insumos.
     */
    distinct?: Tipo_insumoScalarFieldEnum | Tipo_insumoScalarFieldEnum[]
  }

  /**
   * tipo_insumo findMany
   */
  export type tipo_insumoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_insumoInclude<ExtArgs> | null
    /**
     * Filter, which tipo_insumos to fetch.
     */
    where?: tipo_insumoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_insumos to fetch.
     */
    orderBy?: tipo_insumoOrderByWithRelationInput | tipo_insumoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipo_insumos.
     */
    cursor?: tipo_insumoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_insumos.
     */
    skip?: number
    distinct?: Tipo_insumoScalarFieldEnum | Tipo_insumoScalarFieldEnum[]
  }

  /**
   * tipo_insumo create
   */
  export type tipo_insumoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_insumoInclude<ExtArgs> | null
    /**
     * The data needed to create a tipo_insumo.
     */
    data: XOR<tipo_insumoCreateInput, tipo_insumoUncheckedCreateInput>
  }

  /**
   * tipo_insumo createMany
   */
  export type tipo_insumoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipo_insumos.
     */
    data: tipo_insumoCreateManyInput | tipo_insumoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipo_insumo createManyAndReturn
   */
  export type tipo_insumoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * The data used to create many tipo_insumos.
     */
    data: tipo_insumoCreateManyInput | tipo_insumoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipo_insumo update
   */
  export type tipo_insumoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_insumoInclude<ExtArgs> | null
    /**
     * The data needed to update a tipo_insumo.
     */
    data: XOR<tipo_insumoUpdateInput, tipo_insumoUncheckedUpdateInput>
    /**
     * Choose, which tipo_insumo to update.
     */
    where: tipo_insumoWhereUniqueInput
  }

  /**
   * tipo_insumo updateMany
   */
  export type tipo_insumoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipo_insumos.
     */
    data: XOR<tipo_insumoUpdateManyMutationInput, tipo_insumoUncheckedUpdateManyInput>
    /**
     * Filter which tipo_insumos to update
     */
    where?: tipo_insumoWhereInput
    /**
     * Limit how many tipo_insumos to update.
     */
    limit?: number
  }

  /**
   * tipo_insumo updateManyAndReturn
   */
  export type tipo_insumoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * The data used to update tipo_insumos.
     */
    data: XOR<tipo_insumoUpdateManyMutationInput, tipo_insumoUncheckedUpdateManyInput>
    /**
     * Filter which tipo_insumos to update
     */
    where?: tipo_insumoWhereInput
    /**
     * Limit how many tipo_insumos to update.
     */
    limit?: number
  }

  /**
   * tipo_insumo upsert
   */
  export type tipo_insumoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_insumoInclude<ExtArgs> | null
    /**
     * The filter to search for the tipo_insumo to update in case it exists.
     */
    where: tipo_insumoWhereUniqueInput
    /**
     * In case the tipo_insumo found by the `where` argument doesn't exist, create a new tipo_insumo with this data.
     */
    create: XOR<tipo_insumoCreateInput, tipo_insumoUncheckedCreateInput>
    /**
     * In case the tipo_insumo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipo_insumoUpdateInput, tipo_insumoUncheckedUpdateInput>
  }

  /**
   * tipo_insumo delete
   */
  export type tipo_insumoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_insumoInclude<ExtArgs> | null
    /**
     * Filter which tipo_insumo to delete.
     */
    where: tipo_insumoWhereUniqueInput
  }

  /**
   * tipo_insumo deleteMany
   */
  export type tipo_insumoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_insumos to delete
     */
    where?: tipo_insumoWhereInput
    /**
     * Limit how many tipo_insumos to delete.
     */
    limit?: number
  }

  /**
   * tipo_insumo.insumos
   */
  export type tipo_insumo$insumosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
    where?: insumosWhereInput
    orderBy?: insumosOrderByWithRelationInput | insumosOrderByWithRelationInput[]
    cursor?: insumosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InsumosScalarFieldEnum | InsumosScalarFieldEnum[]
  }

  /**
   * tipo_insumo without action
   */
  export type tipo_insumoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_insumo
     */
    select?: tipo_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_insumo
     */
    omit?: tipo_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_insumoInclude<ExtArgs> | null
  }


  /**
   * Model insumos
   */

  export type AggregateInsumos = {
    _count: InsumosCountAggregateOutputType | null
    _avg: InsumosAvgAggregateOutputType | null
    _sum: InsumosSumAggregateOutputType | null
    _min: InsumosMinAggregateOutputType | null
    _max: InsumosMaxAggregateOutputType | null
  }

  export type InsumosAvgAggregateOutputType = {
    insumo_id: number | null
    tipo_insumo_id: number | null
    cantidad: number | null
    unidad_id: number | null
  }

  export type InsumosSumAggregateOutputType = {
    insumo_id: number | null
    tipo_insumo_id: number | null
    cantidad: number | null
    unidad_id: number | null
  }

  export type InsumosMinAggregateOutputType = {
    insumo_id: number | null
    tipo_insumo_id: number | null
    nombre: string | null
    cantidad: number | null
    unidad_id: number | null
    descripcion: string | null
    deleted_at: Date | null
  }

  export type InsumosMaxAggregateOutputType = {
    insumo_id: number | null
    tipo_insumo_id: number | null
    nombre: string | null
    cantidad: number | null
    unidad_id: number | null
    descripcion: string | null
    deleted_at: Date | null
  }

  export type InsumosCountAggregateOutputType = {
    insumo_id: number
    tipo_insumo_id: number
    nombre: number
    cantidad: number
    unidad_id: number
    descripcion: number
    deleted_at: number
    _all: number
  }


  export type InsumosAvgAggregateInputType = {
    insumo_id?: true
    tipo_insumo_id?: true
    cantidad?: true
    unidad_id?: true
  }

  export type InsumosSumAggregateInputType = {
    insumo_id?: true
    tipo_insumo_id?: true
    cantidad?: true
    unidad_id?: true
  }

  export type InsumosMinAggregateInputType = {
    insumo_id?: true
    tipo_insumo_id?: true
    nombre?: true
    cantidad?: true
    unidad_id?: true
    descripcion?: true
    deleted_at?: true
  }

  export type InsumosMaxAggregateInputType = {
    insumo_id?: true
    tipo_insumo_id?: true
    nombre?: true
    cantidad?: true
    unidad_id?: true
    descripcion?: true
    deleted_at?: true
  }

  export type InsumosCountAggregateInputType = {
    insumo_id?: true
    tipo_insumo_id?: true
    nombre?: true
    cantidad?: true
    unidad_id?: true
    descripcion?: true
    deleted_at?: true
    _all?: true
  }

  export type InsumosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which insumos to aggregate.
     */
    where?: insumosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of insumos to fetch.
     */
    orderBy?: insumosOrderByWithRelationInput | insumosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: insumosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` insumos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned insumos
    **/
    _count?: true | InsumosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: InsumosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: InsumosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InsumosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InsumosMaxAggregateInputType
  }

  export type GetInsumosAggregateType<T extends InsumosAggregateArgs> = {
        [P in keyof T & keyof AggregateInsumos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInsumos[P]>
      : GetScalarType<T[P], AggregateInsumos[P]>
  }




  export type insumosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: insumosWhereInput
    orderBy?: insumosOrderByWithAggregationInput | insumosOrderByWithAggregationInput[]
    by: InsumosScalarFieldEnum[] | InsumosScalarFieldEnum
    having?: insumosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InsumosCountAggregateInputType | true
    _avg?: InsumosAvgAggregateInputType
    _sum?: InsumosSumAggregateInputType
    _min?: InsumosMinAggregateInputType
    _max?: InsumosMaxAggregateInputType
  }

  export type InsumosGroupByOutputType = {
    insumo_id: number
    tipo_insumo_id: number
    nombre: string
    cantidad: number
    unidad_id: number
    descripcion: string | null
    deleted_at: Date | null
    _count: InsumosCountAggregateOutputType | null
    _avg: InsumosAvgAggregateOutputType | null
    _sum: InsumosSumAggregateOutputType | null
    _min: InsumosMinAggregateOutputType | null
    _max: InsumosMaxAggregateOutputType | null
  }

  type GetInsumosGroupByPayload<T extends insumosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InsumosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InsumosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InsumosGroupByOutputType[P]>
            : GetScalarType<T[P], InsumosGroupByOutputType[P]>
        }
      >
    >


  export type insumosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    insumo_id?: boolean
    tipo_insumo_id?: boolean
    nombre?: boolean
    cantidad?: boolean
    unidad_id?: boolean
    descripcion?: boolean
    deleted_at?: boolean
    tipo_insumo?: boolean | tipo_insumoDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
    detalle_compras?: boolean | insumos$detalle_comprasArgs<ExtArgs>
    evento_insumos?: boolean | insumos$evento_insumosArgs<ExtArgs>
    alimentaciones?: boolean | insumos$alimentacionesArgs<ExtArgs>
    _count?: boolean | InsumosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["insumos"]>

  export type insumosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    insumo_id?: boolean
    tipo_insumo_id?: boolean
    nombre?: boolean
    cantidad?: boolean
    unidad_id?: boolean
    descripcion?: boolean
    deleted_at?: boolean
    tipo_insumo?: boolean | tipo_insumoDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["insumos"]>

  export type insumosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    insumo_id?: boolean
    tipo_insumo_id?: boolean
    nombre?: boolean
    cantidad?: boolean
    unidad_id?: boolean
    descripcion?: boolean
    deleted_at?: boolean
    tipo_insumo?: boolean | tipo_insumoDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["insumos"]>

  export type insumosSelectScalar = {
    insumo_id?: boolean
    tipo_insumo_id?: boolean
    nombre?: boolean
    cantidad?: boolean
    unidad_id?: boolean
    descripcion?: boolean
    deleted_at?: boolean
  }

  export type insumosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"insumo_id" | "tipo_insumo_id" | "nombre" | "cantidad" | "unidad_id" | "descripcion" | "deleted_at", ExtArgs["result"]["insumos"]>
  export type insumosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo_insumo?: boolean | tipo_insumoDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
    detalle_compras?: boolean | insumos$detalle_comprasArgs<ExtArgs>
    evento_insumos?: boolean | insumos$evento_insumosArgs<ExtArgs>
    alimentaciones?: boolean | insumos$alimentacionesArgs<ExtArgs>
    _count?: boolean | InsumosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type insumosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo_insumo?: boolean | tipo_insumoDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }
  export type insumosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tipo_insumo?: boolean | tipo_insumoDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }

  export type $insumosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "insumos"
    objects: {
      tipo_insumo: Prisma.$tipo_insumoPayload<ExtArgs>
      unidad: Prisma.$unidadesPayload<ExtArgs>
      detalle_compras: Prisma.$detalle_comprasPayload<ExtArgs>[]
      evento_insumos: Prisma.$evento_insumoPayload<ExtArgs>[]
      alimentaciones: Prisma.$alimentacionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      insumo_id: number
      tipo_insumo_id: number
      nombre: string
      cantidad: number
      unidad_id: number
      descripcion: string | null
      deleted_at: Date | null
    }, ExtArgs["result"]["insumos"]>
    composites: {}
  }

  type insumosGetPayload<S extends boolean | null | undefined | insumosDefaultArgs> = $Result.GetResult<Prisma.$insumosPayload, S>

  type insumosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<insumosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InsumosCountAggregateInputType | true
    }

  export interface insumosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['insumos'], meta: { name: 'insumos' } }
    /**
     * Find zero or one Insumos that matches the filter.
     * @param {insumosFindUniqueArgs} args - Arguments to find a Insumos
     * @example
     * // Get one Insumos
     * const insumos = await prisma.insumos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends insumosFindUniqueArgs>(args: SelectSubset<T, insumosFindUniqueArgs<ExtArgs>>): Prisma__insumosClient<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Insumos that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {insumosFindUniqueOrThrowArgs} args - Arguments to find a Insumos
     * @example
     * // Get one Insumos
     * const insumos = await prisma.insumos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends insumosFindUniqueOrThrowArgs>(args: SelectSubset<T, insumosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__insumosClient<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Insumos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumosFindFirstArgs} args - Arguments to find a Insumos
     * @example
     * // Get one Insumos
     * const insumos = await prisma.insumos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends insumosFindFirstArgs>(args?: SelectSubset<T, insumosFindFirstArgs<ExtArgs>>): Prisma__insumosClient<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Insumos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumosFindFirstOrThrowArgs} args - Arguments to find a Insumos
     * @example
     * // Get one Insumos
     * const insumos = await prisma.insumos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends insumosFindFirstOrThrowArgs>(args?: SelectSubset<T, insumosFindFirstOrThrowArgs<ExtArgs>>): Prisma__insumosClient<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Insumos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Insumos
     * const insumos = await prisma.insumos.findMany()
     * 
     * // Get first 10 Insumos
     * const insumos = await prisma.insumos.findMany({ take: 10 })
     * 
     * // Only select the `insumo_id`
     * const insumosWithInsumo_idOnly = await prisma.insumos.findMany({ select: { insumo_id: true } })
     * 
     */
    findMany<T extends insumosFindManyArgs>(args?: SelectSubset<T, insumosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Insumos.
     * @param {insumosCreateArgs} args - Arguments to create a Insumos.
     * @example
     * // Create one Insumos
     * const Insumos = await prisma.insumos.create({
     *   data: {
     *     // ... data to create a Insumos
     *   }
     * })
     * 
     */
    create<T extends insumosCreateArgs>(args: SelectSubset<T, insumosCreateArgs<ExtArgs>>): Prisma__insumosClient<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Insumos.
     * @param {insumosCreateManyArgs} args - Arguments to create many Insumos.
     * @example
     * // Create many Insumos
     * const insumos = await prisma.insumos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends insumosCreateManyArgs>(args?: SelectSubset<T, insumosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Insumos and returns the data saved in the database.
     * @param {insumosCreateManyAndReturnArgs} args - Arguments to create many Insumos.
     * @example
     * // Create many Insumos
     * const insumos = await prisma.insumos.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Insumos and only return the `insumo_id`
     * const insumosWithInsumo_idOnly = await prisma.insumos.createManyAndReturn({
     *   select: { insumo_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends insumosCreateManyAndReturnArgs>(args?: SelectSubset<T, insumosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Insumos.
     * @param {insumosDeleteArgs} args - Arguments to delete one Insumos.
     * @example
     * // Delete one Insumos
     * const Insumos = await prisma.insumos.delete({
     *   where: {
     *     // ... filter to delete one Insumos
     *   }
     * })
     * 
     */
    delete<T extends insumosDeleteArgs>(args: SelectSubset<T, insumosDeleteArgs<ExtArgs>>): Prisma__insumosClient<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Insumos.
     * @param {insumosUpdateArgs} args - Arguments to update one Insumos.
     * @example
     * // Update one Insumos
     * const insumos = await prisma.insumos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends insumosUpdateArgs>(args: SelectSubset<T, insumosUpdateArgs<ExtArgs>>): Prisma__insumosClient<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Insumos.
     * @param {insumosDeleteManyArgs} args - Arguments to filter Insumos to delete.
     * @example
     * // Delete a few Insumos
     * const { count } = await prisma.insumos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends insumosDeleteManyArgs>(args?: SelectSubset<T, insumosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Insumos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Insumos
     * const insumos = await prisma.insumos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends insumosUpdateManyArgs>(args: SelectSubset<T, insumosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Insumos and returns the data updated in the database.
     * @param {insumosUpdateManyAndReturnArgs} args - Arguments to update many Insumos.
     * @example
     * // Update many Insumos
     * const insumos = await prisma.insumos.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Insumos and only return the `insumo_id`
     * const insumosWithInsumo_idOnly = await prisma.insumos.updateManyAndReturn({
     *   select: { insumo_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends insumosUpdateManyAndReturnArgs>(args: SelectSubset<T, insumosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Insumos.
     * @param {insumosUpsertArgs} args - Arguments to update or create a Insumos.
     * @example
     * // Update or create a Insumos
     * const insumos = await prisma.insumos.upsert({
     *   create: {
     *     // ... data to create a Insumos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Insumos we want to update
     *   }
     * })
     */
    upsert<T extends insumosUpsertArgs>(args: SelectSubset<T, insumosUpsertArgs<ExtArgs>>): Prisma__insumosClient<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Insumos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumosCountArgs} args - Arguments to filter Insumos to count.
     * @example
     * // Count the number of Insumos
     * const count = await prisma.insumos.count({
     *   where: {
     *     // ... the filter for the Insumos we want to count
     *   }
     * })
    **/
    count<T extends insumosCountArgs>(
      args?: Subset<T, insumosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InsumosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Insumos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InsumosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InsumosAggregateArgs>(args: Subset<T, InsumosAggregateArgs>): Prisma.PrismaPromise<GetInsumosAggregateType<T>>

    /**
     * Group by Insumos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {insumosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends insumosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: insumosGroupByArgs['orderBy'] }
        : { orderBy?: insumosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, insumosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInsumosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the insumos model
   */
  readonly fields: insumosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for insumos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__insumosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tipo_insumo<T extends tipo_insumoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tipo_insumoDefaultArgs<ExtArgs>>): Prisma__tipo_insumoClient<$Result.GetResult<Prisma.$tipo_insumoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    unidad<T extends unidadesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, unidadesDefaultArgs<ExtArgs>>): Prisma__unidadesClient<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    detalle_compras<T extends insumos$detalle_comprasArgs<ExtArgs> = {}>(args?: Subset<T, insumos$detalle_comprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    evento_insumos<T extends insumos$evento_insumosArgs<ExtArgs> = {}>(args?: Subset<T, insumos$evento_insumosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alimentaciones<T extends insumos$alimentacionesArgs<ExtArgs> = {}>(args?: Subset<T, insumos$alimentacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the insumos model
   */
  interface insumosFieldRefs {
    readonly insumo_id: FieldRef<"insumos", 'Int'>
    readonly tipo_insumo_id: FieldRef<"insumos", 'Int'>
    readonly nombre: FieldRef<"insumos", 'String'>
    readonly cantidad: FieldRef<"insumos", 'Int'>
    readonly unidad_id: FieldRef<"insumos", 'Int'>
    readonly descripcion: FieldRef<"insumos", 'String'>
    readonly deleted_at: FieldRef<"insumos", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * insumos findUnique
   */
  export type insumosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
    /**
     * Filter, which insumos to fetch.
     */
    where: insumosWhereUniqueInput
  }

  /**
   * insumos findUniqueOrThrow
   */
  export type insumosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
    /**
     * Filter, which insumos to fetch.
     */
    where: insumosWhereUniqueInput
  }

  /**
   * insumos findFirst
   */
  export type insumosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
    /**
     * Filter, which insumos to fetch.
     */
    where?: insumosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of insumos to fetch.
     */
    orderBy?: insumosOrderByWithRelationInput | insumosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for insumos.
     */
    cursor?: insumosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` insumos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of insumos.
     */
    distinct?: InsumosScalarFieldEnum | InsumosScalarFieldEnum[]
  }

  /**
   * insumos findFirstOrThrow
   */
  export type insumosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
    /**
     * Filter, which insumos to fetch.
     */
    where?: insumosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of insumos to fetch.
     */
    orderBy?: insumosOrderByWithRelationInput | insumosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for insumos.
     */
    cursor?: insumosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` insumos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of insumos.
     */
    distinct?: InsumosScalarFieldEnum | InsumosScalarFieldEnum[]
  }

  /**
   * insumos findMany
   */
  export type insumosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
    /**
     * Filter, which insumos to fetch.
     */
    where?: insumosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of insumos to fetch.
     */
    orderBy?: insumosOrderByWithRelationInput | insumosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing insumos.
     */
    cursor?: insumosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` insumos.
     */
    skip?: number
    distinct?: InsumosScalarFieldEnum | InsumosScalarFieldEnum[]
  }

  /**
   * insumos create
   */
  export type insumosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
    /**
     * The data needed to create a insumos.
     */
    data: XOR<insumosCreateInput, insumosUncheckedCreateInput>
  }

  /**
   * insumos createMany
   */
  export type insumosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many insumos.
     */
    data: insumosCreateManyInput | insumosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * insumos createManyAndReturn
   */
  export type insumosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * The data used to create many insumos.
     */
    data: insumosCreateManyInput | insumosCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * insumos update
   */
  export type insumosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
    /**
     * The data needed to update a insumos.
     */
    data: XOR<insumosUpdateInput, insumosUncheckedUpdateInput>
    /**
     * Choose, which insumos to update.
     */
    where: insumosWhereUniqueInput
  }

  /**
   * insumos updateMany
   */
  export type insumosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update insumos.
     */
    data: XOR<insumosUpdateManyMutationInput, insumosUncheckedUpdateManyInput>
    /**
     * Filter which insumos to update
     */
    where?: insumosWhereInput
    /**
     * Limit how many insumos to update.
     */
    limit?: number
  }

  /**
   * insumos updateManyAndReturn
   */
  export type insumosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * The data used to update insumos.
     */
    data: XOR<insumosUpdateManyMutationInput, insumosUncheckedUpdateManyInput>
    /**
     * Filter which insumos to update
     */
    where?: insumosWhereInput
    /**
     * Limit how many insumos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * insumos upsert
   */
  export type insumosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
    /**
     * The filter to search for the insumos to update in case it exists.
     */
    where: insumosWhereUniqueInput
    /**
     * In case the insumos found by the `where` argument doesn't exist, create a new insumos with this data.
     */
    create: XOR<insumosCreateInput, insumosUncheckedCreateInput>
    /**
     * In case the insumos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<insumosUpdateInput, insumosUncheckedUpdateInput>
  }

  /**
   * insumos delete
   */
  export type insumosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
    /**
     * Filter which insumos to delete.
     */
    where: insumosWhereUniqueInput
  }

  /**
   * insumos deleteMany
   */
  export type insumosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which insumos to delete
     */
    where?: insumosWhereInput
    /**
     * Limit how many insumos to delete.
     */
    limit?: number
  }

  /**
   * insumos.detalle_compras
   */
  export type insumos$detalle_comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
    where?: detalle_comprasWhereInput
    orderBy?: detalle_comprasOrderByWithRelationInput | detalle_comprasOrderByWithRelationInput[]
    cursor?: detalle_comprasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_comprasScalarFieldEnum | Detalle_comprasScalarFieldEnum[]
  }

  /**
   * insumos.evento_insumos
   */
  export type insumos$evento_insumosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
    where?: evento_insumoWhereInput
    orderBy?: evento_insumoOrderByWithRelationInput | evento_insumoOrderByWithRelationInput[]
    cursor?: evento_insumoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_insumoScalarFieldEnum | Evento_insumoScalarFieldEnum[]
  }

  /**
   * insumos.alimentaciones
   */
  export type insumos$alimentacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    where?: alimentacionWhereInput
    orderBy?: alimentacionOrderByWithRelationInput | alimentacionOrderByWithRelationInput[]
    cursor?: alimentacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlimentacionScalarFieldEnum | AlimentacionScalarFieldEnum[]
  }

  /**
   * insumos without action
   */
  export type insumosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the insumos
     */
    select?: insumosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the insumos
     */
    omit?: insumosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: insumosInclude<ExtArgs> | null
  }


  /**
   * Model tipo_evento
   */

  export type AggregateTipo_evento = {
    _count: Tipo_eventoCountAggregateOutputType | null
    _avg: Tipo_eventoAvgAggregateOutputType | null
    _sum: Tipo_eventoSumAggregateOutputType | null
    _min: Tipo_eventoMinAggregateOutputType | null
    _max: Tipo_eventoMaxAggregateOutputType | null
  }

  export type Tipo_eventoAvgAggregateOutputType = {
    tipo_evento_id: number | null
    padre_id: number | null
  }

  export type Tipo_eventoSumAggregateOutputType = {
    tipo_evento_id: number | null
    padre_id: number | null
  }

  export type Tipo_eventoMinAggregateOutputType = {
    tipo_evento_id: number | null
    nombre: string | null
    padre_id: number | null
    deleted_at: Date | null
  }

  export type Tipo_eventoMaxAggregateOutputType = {
    tipo_evento_id: number | null
    nombre: string | null
    padre_id: number | null
    deleted_at: Date | null
  }

  export type Tipo_eventoCountAggregateOutputType = {
    tipo_evento_id: number
    nombre: number
    padre_id: number
    deleted_at: number
    _all: number
  }


  export type Tipo_eventoAvgAggregateInputType = {
    tipo_evento_id?: true
    padre_id?: true
  }

  export type Tipo_eventoSumAggregateInputType = {
    tipo_evento_id?: true
    padre_id?: true
  }

  export type Tipo_eventoMinAggregateInputType = {
    tipo_evento_id?: true
    nombre?: true
    padre_id?: true
    deleted_at?: true
  }

  export type Tipo_eventoMaxAggregateInputType = {
    tipo_evento_id?: true
    nombre?: true
    padre_id?: true
    deleted_at?: true
  }

  export type Tipo_eventoCountAggregateInputType = {
    tipo_evento_id?: true
    nombre?: true
    padre_id?: true
    deleted_at?: true
    _all?: true
  }

  export type Tipo_eventoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_evento to aggregate.
     */
    where?: tipo_eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_eventos to fetch.
     */
    orderBy?: tipo_eventoOrderByWithRelationInput | tipo_eventoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipo_eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipo_eventos
    **/
    _count?: true | Tipo_eventoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipo_eventoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipo_eventoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipo_eventoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipo_eventoMaxAggregateInputType
  }

  export type GetTipo_eventoAggregateType<T extends Tipo_eventoAggregateArgs> = {
        [P in keyof T & keyof AggregateTipo_evento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipo_evento[P]>
      : GetScalarType<T[P], AggregateTipo_evento[P]>
  }




  export type tipo_eventoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipo_eventoWhereInput
    orderBy?: tipo_eventoOrderByWithAggregationInput | tipo_eventoOrderByWithAggregationInput[]
    by: Tipo_eventoScalarFieldEnum[] | Tipo_eventoScalarFieldEnum
    having?: tipo_eventoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipo_eventoCountAggregateInputType | true
    _avg?: Tipo_eventoAvgAggregateInputType
    _sum?: Tipo_eventoSumAggregateInputType
    _min?: Tipo_eventoMinAggregateInputType
    _max?: Tipo_eventoMaxAggregateInputType
  }

  export type Tipo_eventoGroupByOutputType = {
    tipo_evento_id: number
    nombre: string
    padre_id: number | null
    deleted_at: Date | null
    _count: Tipo_eventoCountAggregateOutputType | null
    _avg: Tipo_eventoAvgAggregateOutputType | null
    _sum: Tipo_eventoSumAggregateOutputType | null
    _min: Tipo_eventoMinAggregateOutputType | null
    _max: Tipo_eventoMaxAggregateOutputType | null
  }

  type GetTipo_eventoGroupByPayload<T extends tipo_eventoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipo_eventoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipo_eventoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipo_eventoGroupByOutputType[P]>
            : GetScalarType<T[P], Tipo_eventoGroupByOutputType[P]>
        }
      >
    >


  export type tipo_eventoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tipo_evento_id?: boolean
    nombre?: boolean
    padre_id?: boolean
    deleted_at?: boolean
    padre?: boolean | tipo_evento$padreArgs<ExtArgs>
    hijos?: boolean | tipo_evento$hijosArgs<ExtArgs>
    eventos_sanitarios?: boolean | tipo_evento$eventos_sanitariosArgs<ExtArgs>
    eventos_monta?: boolean | tipo_evento$eventos_montaArgs<ExtArgs>
    eventos_parto?: boolean | tipo_evento$eventos_partoArgs<ExtArgs>
    _count?: boolean | Tipo_eventoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tipo_evento"]>

  export type tipo_eventoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tipo_evento_id?: boolean
    nombre?: boolean
    padre_id?: boolean
    deleted_at?: boolean
    padre?: boolean | tipo_evento$padreArgs<ExtArgs>
  }, ExtArgs["result"]["tipo_evento"]>

  export type tipo_eventoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    tipo_evento_id?: boolean
    nombre?: boolean
    padre_id?: boolean
    deleted_at?: boolean
    padre?: boolean | tipo_evento$padreArgs<ExtArgs>
  }, ExtArgs["result"]["tipo_evento"]>

  export type tipo_eventoSelectScalar = {
    tipo_evento_id?: boolean
    nombre?: boolean
    padre_id?: boolean
    deleted_at?: boolean
  }

  export type tipo_eventoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"tipo_evento_id" | "nombre" | "padre_id" | "deleted_at", ExtArgs["result"]["tipo_evento"]>
  export type tipo_eventoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    padre?: boolean | tipo_evento$padreArgs<ExtArgs>
    hijos?: boolean | tipo_evento$hijosArgs<ExtArgs>
    eventos_sanitarios?: boolean | tipo_evento$eventos_sanitariosArgs<ExtArgs>
    eventos_monta?: boolean | tipo_evento$eventos_montaArgs<ExtArgs>
    eventos_parto?: boolean | tipo_evento$eventos_partoArgs<ExtArgs>
    _count?: boolean | Tipo_eventoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tipo_eventoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    padre?: boolean | tipo_evento$padreArgs<ExtArgs>
  }
  export type tipo_eventoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    padre?: boolean | tipo_evento$padreArgs<ExtArgs>
  }

  export type $tipo_eventoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipo_evento"
    objects: {
      padre: Prisma.$tipo_eventoPayload<ExtArgs> | null
      hijos: Prisma.$tipo_eventoPayload<ExtArgs>[]
      eventos_sanitarios: Prisma.$evento_sanitarioPayload<ExtArgs>[]
      eventos_monta: Prisma.$evento_montaPayload<ExtArgs>[]
      eventos_parto: Prisma.$evento_partoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      tipo_evento_id: number
      nombre: string
      padre_id: number | null
      deleted_at: Date | null
    }, ExtArgs["result"]["tipo_evento"]>
    composites: {}
  }

  type tipo_eventoGetPayload<S extends boolean | null | undefined | tipo_eventoDefaultArgs> = $Result.GetResult<Prisma.$tipo_eventoPayload, S>

  type tipo_eventoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tipo_eventoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Tipo_eventoCountAggregateInputType | true
    }

  export interface tipo_eventoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipo_evento'], meta: { name: 'tipo_evento' } }
    /**
     * Find zero or one Tipo_evento that matches the filter.
     * @param {tipo_eventoFindUniqueArgs} args - Arguments to find a Tipo_evento
     * @example
     * // Get one Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tipo_eventoFindUniqueArgs>(args: SelectSubset<T, tipo_eventoFindUniqueArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tipo_evento that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tipo_eventoFindUniqueOrThrowArgs} args - Arguments to find a Tipo_evento
     * @example
     * // Get one Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tipo_eventoFindUniqueOrThrowArgs>(args: SelectSubset<T, tipo_eventoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipo_evento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_eventoFindFirstArgs} args - Arguments to find a Tipo_evento
     * @example
     * // Get one Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tipo_eventoFindFirstArgs>(args?: SelectSubset<T, tipo_eventoFindFirstArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tipo_evento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_eventoFindFirstOrThrowArgs} args - Arguments to find a Tipo_evento
     * @example
     * // Get one Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tipo_eventoFindFirstOrThrowArgs>(args?: SelectSubset<T, tipo_eventoFindFirstOrThrowArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tipo_eventos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_eventoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipo_eventos
     * const tipo_eventos = await prisma.tipo_evento.findMany()
     * 
     * // Get first 10 Tipo_eventos
     * const tipo_eventos = await prisma.tipo_evento.findMany({ take: 10 })
     * 
     * // Only select the `tipo_evento_id`
     * const tipo_eventoWithTipo_evento_idOnly = await prisma.tipo_evento.findMany({ select: { tipo_evento_id: true } })
     * 
     */
    findMany<T extends tipo_eventoFindManyArgs>(args?: SelectSubset<T, tipo_eventoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tipo_evento.
     * @param {tipo_eventoCreateArgs} args - Arguments to create a Tipo_evento.
     * @example
     * // Create one Tipo_evento
     * const Tipo_evento = await prisma.tipo_evento.create({
     *   data: {
     *     // ... data to create a Tipo_evento
     *   }
     * })
     * 
     */
    create<T extends tipo_eventoCreateArgs>(args: SelectSubset<T, tipo_eventoCreateArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tipo_eventos.
     * @param {tipo_eventoCreateManyArgs} args - Arguments to create many Tipo_eventos.
     * @example
     * // Create many Tipo_eventos
     * const tipo_evento = await prisma.tipo_evento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tipo_eventoCreateManyArgs>(args?: SelectSubset<T, tipo_eventoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tipo_eventos and returns the data saved in the database.
     * @param {tipo_eventoCreateManyAndReturnArgs} args - Arguments to create many Tipo_eventos.
     * @example
     * // Create many Tipo_eventos
     * const tipo_evento = await prisma.tipo_evento.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tipo_eventos and only return the `tipo_evento_id`
     * const tipo_eventoWithTipo_evento_idOnly = await prisma.tipo_evento.createManyAndReturn({
     *   select: { tipo_evento_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tipo_eventoCreateManyAndReturnArgs>(args?: SelectSubset<T, tipo_eventoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tipo_evento.
     * @param {tipo_eventoDeleteArgs} args - Arguments to delete one Tipo_evento.
     * @example
     * // Delete one Tipo_evento
     * const Tipo_evento = await prisma.tipo_evento.delete({
     *   where: {
     *     // ... filter to delete one Tipo_evento
     *   }
     * })
     * 
     */
    delete<T extends tipo_eventoDeleteArgs>(args: SelectSubset<T, tipo_eventoDeleteArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tipo_evento.
     * @param {tipo_eventoUpdateArgs} args - Arguments to update one Tipo_evento.
     * @example
     * // Update one Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tipo_eventoUpdateArgs>(args: SelectSubset<T, tipo_eventoUpdateArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tipo_eventos.
     * @param {tipo_eventoDeleteManyArgs} args - Arguments to filter Tipo_eventos to delete.
     * @example
     * // Delete a few Tipo_eventos
     * const { count } = await prisma.tipo_evento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tipo_eventoDeleteManyArgs>(args?: SelectSubset<T, tipo_eventoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_eventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_eventoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipo_eventos
     * const tipo_evento = await prisma.tipo_evento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tipo_eventoUpdateManyArgs>(args: SelectSubset<T, tipo_eventoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_eventos and returns the data updated in the database.
     * @param {tipo_eventoUpdateManyAndReturnArgs} args - Arguments to update many Tipo_eventos.
     * @example
     * // Update many Tipo_eventos
     * const tipo_evento = await prisma.tipo_evento.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tipo_eventos and only return the `tipo_evento_id`
     * const tipo_eventoWithTipo_evento_idOnly = await prisma.tipo_evento.updateManyAndReturn({
     *   select: { tipo_evento_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tipo_eventoUpdateManyAndReturnArgs>(args: SelectSubset<T, tipo_eventoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tipo_evento.
     * @param {tipo_eventoUpsertArgs} args - Arguments to update or create a Tipo_evento.
     * @example
     * // Update or create a Tipo_evento
     * const tipo_evento = await prisma.tipo_evento.upsert({
     *   create: {
     *     // ... data to create a Tipo_evento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipo_evento we want to update
     *   }
     * })
     */
    upsert<T extends tipo_eventoUpsertArgs>(args: SelectSubset<T, tipo_eventoUpsertArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tipo_eventos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_eventoCountArgs} args - Arguments to filter Tipo_eventos to count.
     * @example
     * // Count the number of Tipo_eventos
     * const count = await prisma.tipo_evento.count({
     *   where: {
     *     // ... the filter for the Tipo_eventos we want to count
     *   }
     * })
    **/
    count<T extends tipo_eventoCountArgs>(
      args?: Subset<T, tipo_eventoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipo_eventoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipo_evento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_eventoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipo_eventoAggregateArgs>(args: Subset<T, Tipo_eventoAggregateArgs>): Prisma.PrismaPromise<GetTipo_eventoAggregateType<T>>

    /**
     * Group by Tipo_evento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_eventoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipo_eventoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipo_eventoGroupByArgs['orderBy'] }
        : { orderBy?: tipo_eventoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipo_eventoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipo_eventoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipo_evento model
   */
  readonly fields: tipo_eventoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipo_evento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipo_eventoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    padre<T extends tipo_evento$padreArgs<ExtArgs> = {}>(args?: Subset<T, tipo_evento$padreArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    hijos<T extends tipo_evento$hijosArgs<ExtArgs> = {}>(args?: Subset<T, tipo_evento$hijosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    eventos_sanitarios<T extends tipo_evento$eventos_sanitariosArgs<ExtArgs> = {}>(args?: Subset<T, tipo_evento$eventos_sanitariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    eventos_monta<T extends tipo_evento$eventos_montaArgs<ExtArgs> = {}>(args?: Subset<T, tipo_evento$eventos_montaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    eventos_parto<T extends tipo_evento$eventos_partoArgs<ExtArgs> = {}>(args?: Subset<T, tipo_evento$eventos_partoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tipo_evento model
   */
  interface tipo_eventoFieldRefs {
    readonly tipo_evento_id: FieldRef<"tipo_evento", 'Int'>
    readonly nombre: FieldRef<"tipo_evento", 'String'>
    readonly padre_id: FieldRef<"tipo_evento", 'Int'>
    readonly deleted_at: FieldRef<"tipo_evento", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * tipo_evento findUnique
   */
  export type tipo_eventoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
    /**
     * Filter, which tipo_evento to fetch.
     */
    where: tipo_eventoWhereUniqueInput
  }

  /**
   * tipo_evento findUniqueOrThrow
   */
  export type tipo_eventoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
    /**
     * Filter, which tipo_evento to fetch.
     */
    where: tipo_eventoWhereUniqueInput
  }

  /**
   * tipo_evento findFirst
   */
  export type tipo_eventoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
    /**
     * Filter, which tipo_evento to fetch.
     */
    where?: tipo_eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_eventos to fetch.
     */
    orderBy?: tipo_eventoOrderByWithRelationInput | tipo_eventoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_eventos.
     */
    cursor?: tipo_eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_eventos.
     */
    distinct?: Tipo_eventoScalarFieldEnum | Tipo_eventoScalarFieldEnum[]
  }

  /**
   * tipo_evento findFirstOrThrow
   */
  export type tipo_eventoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
    /**
     * Filter, which tipo_evento to fetch.
     */
    where?: tipo_eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_eventos to fetch.
     */
    orderBy?: tipo_eventoOrderByWithRelationInput | tipo_eventoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_eventos.
     */
    cursor?: tipo_eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_eventos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_eventos.
     */
    distinct?: Tipo_eventoScalarFieldEnum | Tipo_eventoScalarFieldEnum[]
  }

  /**
   * tipo_evento findMany
   */
  export type tipo_eventoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
    /**
     * Filter, which tipo_eventos to fetch.
     */
    where?: tipo_eventoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_eventos to fetch.
     */
    orderBy?: tipo_eventoOrderByWithRelationInput | tipo_eventoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipo_eventos.
     */
    cursor?: tipo_eventoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_eventos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_eventos.
     */
    skip?: number
    distinct?: Tipo_eventoScalarFieldEnum | Tipo_eventoScalarFieldEnum[]
  }

  /**
   * tipo_evento create
   */
  export type tipo_eventoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
    /**
     * The data needed to create a tipo_evento.
     */
    data: XOR<tipo_eventoCreateInput, tipo_eventoUncheckedCreateInput>
  }

  /**
   * tipo_evento createMany
   */
  export type tipo_eventoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipo_eventos.
     */
    data: tipo_eventoCreateManyInput | tipo_eventoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tipo_evento createManyAndReturn
   */
  export type tipo_eventoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * The data used to create many tipo_eventos.
     */
    data: tipo_eventoCreateManyInput | tipo_eventoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * tipo_evento update
   */
  export type tipo_eventoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
    /**
     * The data needed to update a tipo_evento.
     */
    data: XOR<tipo_eventoUpdateInput, tipo_eventoUncheckedUpdateInput>
    /**
     * Choose, which tipo_evento to update.
     */
    where: tipo_eventoWhereUniqueInput
  }

  /**
   * tipo_evento updateMany
   */
  export type tipo_eventoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipo_eventos.
     */
    data: XOR<tipo_eventoUpdateManyMutationInput, tipo_eventoUncheckedUpdateManyInput>
    /**
     * Filter which tipo_eventos to update
     */
    where?: tipo_eventoWhereInput
    /**
     * Limit how many tipo_eventos to update.
     */
    limit?: number
  }

  /**
   * tipo_evento updateManyAndReturn
   */
  export type tipo_eventoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * The data used to update tipo_eventos.
     */
    data: XOR<tipo_eventoUpdateManyMutationInput, tipo_eventoUncheckedUpdateManyInput>
    /**
     * Filter which tipo_eventos to update
     */
    where?: tipo_eventoWhereInput
    /**
     * Limit how many tipo_eventos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * tipo_evento upsert
   */
  export type tipo_eventoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
    /**
     * The filter to search for the tipo_evento to update in case it exists.
     */
    where: tipo_eventoWhereUniqueInput
    /**
     * In case the tipo_evento found by the `where` argument doesn't exist, create a new tipo_evento with this data.
     */
    create: XOR<tipo_eventoCreateInput, tipo_eventoUncheckedCreateInput>
    /**
     * In case the tipo_evento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipo_eventoUpdateInput, tipo_eventoUncheckedUpdateInput>
  }

  /**
   * tipo_evento delete
   */
  export type tipo_eventoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
    /**
     * Filter which tipo_evento to delete.
     */
    where: tipo_eventoWhereUniqueInput
  }

  /**
   * tipo_evento deleteMany
   */
  export type tipo_eventoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_eventos to delete
     */
    where?: tipo_eventoWhereInput
    /**
     * Limit how many tipo_eventos to delete.
     */
    limit?: number
  }

  /**
   * tipo_evento.padre
   */
  export type tipo_evento$padreArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
    where?: tipo_eventoWhereInput
  }

  /**
   * tipo_evento.hijos
   */
  export type tipo_evento$hijosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
    where?: tipo_eventoWhereInput
    orderBy?: tipo_eventoOrderByWithRelationInput | tipo_eventoOrderByWithRelationInput[]
    cursor?: tipo_eventoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Tipo_eventoScalarFieldEnum | Tipo_eventoScalarFieldEnum[]
  }

  /**
   * tipo_evento.eventos_sanitarios
   */
  export type tipo_evento$eventos_sanitariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    where?: evento_sanitarioWhereInput
    orderBy?: evento_sanitarioOrderByWithRelationInput | evento_sanitarioOrderByWithRelationInput[]
    cursor?: evento_sanitarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_sanitarioScalarFieldEnum | Evento_sanitarioScalarFieldEnum[]
  }

  /**
   * tipo_evento.eventos_monta
   */
  export type tipo_evento$eventos_montaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    where?: evento_montaWhereInput
    orderBy?: evento_montaOrderByWithRelationInput | evento_montaOrderByWithRelationInput[]
    cursor?: evento_montaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_montaScalarFieldEnum | Evento_montaScalarFieldEnum[]
  }

  /**
   * tipo_evento.eventos_parto
   */
  export type tipo_evento$eventos_partoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    where?: evento_partoWhereInput
    orderBy?: evento_partoOrderByWithRelationInput | evento_partoOrderByWithRelationInput[]
    cursor?: evento_partoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_partoScalarFieldEnum | Evento_partoScalarFieldEnum[]
  }

  /**
   * tipo_evento without action
   */
  export type tipo_eventoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_evento
     */
    select?: tipo_eventoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tipo_evento
     */
    omit?: tipo_eventoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tipo_eventoInclude<ExtArgs> | null
  }


  /**
   * Model razas
   */

  export type AggregateRazas = {
    _count: RazasCountAggregateOutputType | null
    _avg: RazasAvgAggregateOutputType | null
    _sum: RazasSumAggregateOutputType | null
    _min: RazasMinAggregateOutputType | null
    _max: RazasMaxAggregateOutputType | null
  }

  export type RazasAvgAggregateOutputType = {
    raza_id: number | null
  }

  export type RazasSumAggregateOutputType = {
    raza_id: number | null
  }

  export type RazasMinAggregateOutputType = {
    raza_id: number | null
    nombre: string | null
    descripcion: string | null
    deleted_at: Date | null
  }

  export type RazasMaxAggregateOutputType = {
    raza_id: number | null
    nombre: string | null
    descripcion: string | null
    deleted_at: Date | null
  }

  export type RazasCountAggregateOutputType = {
    raza_id: number
    nombre: number
    descripcion: number
    deleted_at: number
    _all: number
  }


  export type RazasAvgAggregateInputType = {
    raza_id?: true
  }

  export type RazasSumAggregateInputType = {
    raza_id?: true
  }

  export type RazasMinAggregateInputType = {
    raza_id?: true
    nombre?: true
    descripcion?: true
    deleted_at?: true
  }

  export type RazasMaxAggregateInputType = {
    raza_id?: true
    nombre?: true
    descripcion?: true
    deleted_at?: true
  }

  export type RazasCountAggregateInputType = {
    raza_id?: true
    nombre?: true
    descripcion?: true
    deleted_at?: true
    _all?: true
  }

  export type RazasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which razas to aggregate.
     */
    where?: razasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of razas to fetch.
     */
    orderBy?: razasOrderByWithRelationInput | razasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: razasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` razas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` razas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned razas
    **/
    _count?: true | RazasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RazasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RazasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RazasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RazasMaxAggregateInputType
  }

  export type GetRazasAggregateType<T extends RazasAggregateArgs> = {
        [P in keyof T & keyof AggregateRazas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRazas[P]>
      : GetScalarType<T[P], AggregateRazas[P]>
  }




  export type razasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: razasWhereInput
    orderBy?: razasOrderByWithAggregationInput | razasOrderByWithAggregationInput[]
    by: RazasScalarFieldEnum[] | RazasScalarFieldEnum
    having?: razasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RazasCountAggregateInputType | true
    _avg?: RazasAvgAggregateInputType
    _sum?: RazasSumAggregateInputType
    _min?: RazasMinAggregateInputType
    _max?: RazasMaxAggregateInputType
  }

  export type RazasGroupByOutputType = {
    raza_id: number
    nombre: string
    descripcion: string | null
    deleted_at: Date | null
    _count: RazasCountAggregateOutputType | null
    _avg: RazasAvgAggregateOutputType | null
    _sum: RazasSumAggregateOutputType | null
    _min: RazasMinAggregateOutputType | null
    _max: RazasMaxAggregateOutputType | null
  }

  type GetRazasGroupByPayload<T extends razasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RazasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RazasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RazasGroupByOutputType[P]>
            : GetScalarType<T[P], RazasGroupByOutputType[P]>
        }
      >
    >


  export type razasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    raza_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    deleted_at?: boolean
    animales?: boolean | razas$animalesArgs<ExtArgs>
    _count?: boolean | RazasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["razas"]>

  export type razasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    raza_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["razas"]>

  export type razasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    raza_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["razas"]>

  export type razasSelectScalar = {
    raza_id?: boolean
    nombre?: boolean
    descripcion?: boolean
    deleted_at?: boolean
  }

  export type razasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"raza_id" | "nombre" | "descripcion" | "deleted_at", ExtArgs["result"]["razas"]>
  export type razasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animales?: boolean | razas$animalesArgs<ExtArgs>
    _count?: boolean | RazasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type razasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type razasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $razasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "razas"
    objects: {
      animales: Prisma.$animalesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      raza_id: number
      nombre: string
      descripcion: string | null
      deleted_at: Date | null
    }, ExtArgs["result"]["razas"]>
    composites: {}
  }

  type razasGetPayload<S extends boolean | null | undefined | razasDefaultArgs> = $Result.GetResult<Prisma.$razasPayload, S>

  type razasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<razasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RazasCountAggregateInputType | true
    }

  export interface razasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['razas'], meta: { name: 'razas' } }
    /**
     * Find zero or one Razas that matches the filter.
     * @param {razasFindUniqueArgs} args - Arguments to find a Razas
     * @example
     * // Get one Razas
     * const razas = await prisma.razas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends razasFindUniqueArgs>(args: SelectSubset<T, razasFindUniqueArgs<ExtArgs>>): Prisma__razasClient<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Razas that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {razasFindUniqueOrThrowArgs} args - Arguments to find a Razas
     * @example
     * // Get one Razas
     * const razas = await prisma.razas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends razasFindUniqueOrThrowArgs>(args: SelectSubset<T, razasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__razasClient<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Razas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {razasFindFirstArgs} args - Arguments to find a Razas
     * @example
     * // Get one Razas
     * const razas = await prisma.razas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends razasFindFirstArgs>(args?: SelectSubset<T, razasFindFirstArgs<ExtArgs>>): Prisma__razasClient<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Razas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {razasFindFirstOrThrowArgs} args - Arguments to find a Razas
     * @example
     * // Get one Razas
     * const razas = await prisma.razas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends razasFindFirstOrThrowArgs>(args?: SelectSubset<T, razasFindFirstOrThrowArgs<ExtArgs>>): Prisma__razasClient<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Razas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {razasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Razas
     * const razas = await prisma.razas.findMany()
     * 
     * // Get first 10 Razas
     * const razas = await prisma.razas.findMany({ take: 10 })
     * 
     * // Only select the `raza_id`
     * const razasWithRaza_idOnly = await prisma.razas.findMany({ select: { raza_id: true } })
     * 
     */
    findMany<T extends razasFindManyArgs>(args?: SelectSubset<T, razasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Razas.
     * @param {razasCreateArgs} args - Arguments to create a Razas.
     * @example
     * // Create one Razas
     * const Razas = await prisma.razas.create({
     *   data: {
     *     // ... data to create a Razas
     *   }
     * })
     * 
     */
    create<T extends razasCreateArgs>(args: SelectSubset<T, razasCreateArgs<ExtArgs>>): Prisma__razasClient<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Razas.
     * @param {razasCreateManyArgs} args - Arguments to create many Razas.
     * @example
     * // Create many Razas
     * const razas = await prisma.razas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends razasCreateManyArgs>(args?: SelectSubset<T, razasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Razas and returns the data saved in the database.
     * @param {razasCreateManyAndReturnArgs} args - Arguments to create many Razas.
     * @example
     * // Create many Razas
     * const razas = await prisma.razas.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Razas and only return the `raza_id`
     * const razasWithRaza_idOnly = await prisma.razas.createManyAndReturn({
     *   select: { raza_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends razasCreateManyAndReturnArgs>(args?: SelectSubset<T, razasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Razas.
     * @param {razasDeleteArgs} args - Arguments to delete one Razas.
     * @example
     * // Delete one Razas
     * const Razas = await prisma.razas.delete({
     *   where: {
     *     // ... filter to delete one Razas
     *   }
     * })
     * 
     */
    delete<T extends razasDeleteArgs>(args: SelectSubset<T, razasDeleteArgs<ExtArgs>>): Prisma__razasClient<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Razas.
     * @param {razasUpdateArgs} args - Arguments to update one Razas.
     * @example
     * // Update one Razas
     * const razas = await prisma.razas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends razasUpdateArgs>(args: SelectSubset<T, razasUpdateArgs<ExtArgs>>): Prisma__razasClient<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Razas.
     * @param {razasDeleteManyArgs} args - Arguments to filter Razas to delete.
     * @example
     * // Delete a few Razas
     * const { count } = await prisma.razas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends razasDeleteManyArgs>(args?: SelectSubset<T, razasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Razas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {razasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Razas
     * const razas = await prisma.razas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends razasUpdateManyArgs>(args: SelectSubset<T, razasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Razas and returns the data updated in the database.
     * @param {razasUpdateManyAndReturnArgs} args - Arguments to update many Razas.
     * @example
     * // Update many Razas
     * const razas = await prisma.razas.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Razas and only return the `raza_id`
     * const razasWithRaza_idOnly = await prisma.razas.updateManyAndReturn({
     *   select: { raza_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends razasUpdateManyAndReturnArgs>(args: SelectSubset<T, razasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Razas.
     * @param {razasUpsertArgs} args - Arguments to update or create a Razas.
     * @example
     * // Update or create a Razas
     * const razas = await prisma.razas.upsert({
     *   create: {
     *     // ... data to create a Razas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Razas we want to update
     *   }
     * })
     */
    upsert<T extends razasUpsertArgs>(args: SelectSubset<T, razasUpsertArgs<ExtArgs>>): Prisma__razasClient<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Razas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {razasCountArgs} args - Arguments to filter Razas to count.
     * @example
     * // Count the number of Razas
     * const count = await prisma.razas.count({
     *   where: {
     *     // ... the filter for the Razas we want to count
     *   }
     * })
    **/
    count<T extends razasCountArgs>(
      args?: Subset<T, razasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RazasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Razas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RazasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RazasAggregateArgs>(args: Subset<T, RazasAggregateArgs>): Prisma.PrismaPromise<GetRazasAggregateType<T>>

    /**
     * Group by Razas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {razasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends razasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: razasGroupByArgs['orderBy'] }
        : { orderBy?: razasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, razasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRazasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the razas model
   */
  readonly fields: razasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for razas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__razasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    animales<T extends razas$animalesArgs<ExtArgs> = {}>(args?: Subset<T, razas$animalesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the razas model
   */
  interface razasFieldRefs {
    readonly raza_id: FieldRef<"razas", 'Int'>
    readonly nombre: FieldRef<"razas", 'String'>
    readonly descripcion: FieldRef<"razas", 'String'>
    readonly deleted_at: FieldRef<"razas", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * razas findUnique
   */
  export type razasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: razasInclude<ExtArgs> | null
    /**
     * Filter, which razas to fetch.
     */
    where: razasWhereUniqueInput
  }

  /**
   * razas findUniqueOrThrow
   */
  export type razasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: razasInclude<ExtArgs> | null
    /**
     * Filter, which razas to fetch.
     */
    where: razasWhereUniqueInput
  }

  /**
   * razas findFirst
   */
  export type razasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: razasInclude<ExtArgs> | null
    /**
     * Filter, which razas to fetch.
     */
    where?: razasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of razas to fetch.
     */
    orderBy?: razasOrderByWithRelationInput | razasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for razas.
     */
    cursor?: razasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` razas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` razas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of razas.
     */
    distinct?: RazasScalarFieldEnum | RazasScalarFieldEnum[]
  }

  /**
   * razas findFirstOrThrow
   */
  export type razasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: razasInclude<ExtArgs> | null
    /**
     * Filter, which razas to fetch.
     */
    where?: razasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of razas to fetch.
     */
    orderBy?: razasOrderByWithRelationInput | razasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for razas.
     */
    cursor?: razasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` razas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` razas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of razas.
     */
    distinct?: RazasScalarFieldEnum | RazasScalarFieldEnum[]
  }

  /**
   * razas findMany
   */
  export type razasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: razasInclude<ExtArgs> | null
    /**
     * Filter, which razas to fetch.
     */
    where?: razasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of razas to fetch.
     */
    orderBy?: razasOrderByWithRelationInput | razasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing razas.
     */
    cursor?: razasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` razas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` razas.
     */
    skip?: number
    distinct?: RazasScalarFieldEnum | RazasScalarFieldEnum[]
  }

  /**
   * razas create
   */
  export type razasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: razasInclude<ExtArgs> | null
    /**
     * The data needed to create a razas.
     */
    data: XOR<razasCreateInput, razasUncheckedCreateInput>
  }

  /**
   * razas createMany
   */
  export type razasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many razas.
     */
    data: razasCreateManyInput | razasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * razas createManyAndReturn
   */
  export type razasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * The data used to create many razas.
     */
    data: razasCreateManyInput | razasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * razas update
   */
  export type razasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: razasInclude<ExtArgs> | null
    /**
     * The data needed to update a razas.
     */
    data: XOR<razasUpdateInput, razasUncheckedUpdateInput>
    /**
     * Choose, which razas to update.
     */
    where: razasWhereUniqueInput
  }

  /**
   * razas updateMany
   */
  export type razasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update razas.
     */
    data: XOR<razasUpdateManyMutationInput, razasUncheckedUpdateManyInput>
    /**
     * Filter which razas to update
     */
    where?: razasWhereInput
    /**
     * Limit how many razas to update.
     */
    limit?: number
  }

  /**
   * razas updateManyAndReturn
   */
  export type razasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * The data used to update razas.
     */
    data: XOR<razasUpdateManyMutationInput, razasUncheckedUpdateManyInput>
    /**
     * Filter which razas to update
     */
    where?: razasWhereInput
    /**
     * Limit how many razas to update.
     */
    limit?: number
  }

  /**
   * razas upsert
   */
  export type razasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: razasInclude<ExtArgs> | null
    /**
     * The filter to search for the razas to update in case it exists.
     */
    where: razasWhereUniqueInput
    /**
     * In case the razas found by the `where` argument doesn't exist, create a new razas with this data.
     */
    create: XOR<razasCreateInput, razasUncheckedCreateInput>
    /**
     * In case the razas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<razasUpdateInput, razasUncheckedUpdateInput>
  }

  /**
   * razas delete
   */
  export type razasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: razasInclude<ExtArgs> | null
    /**
     * Filter which razas to delete.
     */
    where: razasWhereUniqueInput
  }

  /**
   * razas deleteMany
   */
  export type razasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which razas to delete
     */
    where?: razasWhereInput
    /**
     * Limit how many razas to delete.
     */
    limit?: number
  }

  /**
   * razas.animales
   */
  export type razas$animalesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    where?: animalesWhereInput
    orderBy?: animalesOrderByWithRelationInput | animalesOrderByWithRelationInput[]
    cursor?: animalesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnimalesScalarFieldEnum | AnimalesScalarFieldEnum[]
  }

  /**
   * razas without action
   */
  export type razasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the razas
     */
    select?: razasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the razas
     */
    omit?: razasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: razasInclude<ExtArgs> | null
  }


  /**
   * Model potreros
   */

  export type AggregatePotreros = {
    _count: PotrerosCountAggregateOutputType | null
    _avg: PotrerosAvgAggregateOutputType | null
    _sum: PotrerosSumAggregateOutputType | null
    _min: PotrerosMinAggregateOutputType | null
    _max: PotrerosMaxAggregateOutputType | null
  }

  export type PotrerosAvgAggregateOutputType = {
    potrero_id: number | null
  }

  export type PotrerosSumAggregateOutputType = {
    potrero_id: number | null
  }

  export type PotrerosMinAggregateOutputType = {
    potrero_id: number | null
    ubicacion: string | null
    deleted_at: Date | null
  }

  export type PotrerosMaxAggregateOutputType = {
    potrero_id: number | null
    ubicacion: string | null
    deleted_at: Date | null
  }

  export type PotrerosCountAggregateOutputType = {
    potrero_id: number
    ubicacion: number
    deleted_at: number
    _all: number
  }


  export type PotrerosAvgAggregateInputType = {
    potrero_id?: true
  }

  export type PotrerosSumAggregateInputType = {
    potrero_id?: true
  }

  export type PotrerosMinAggregateInputType = {
    potrero_id?: true
    ubicacion?: true
    deleted_at?: true
  }

  export type PotrerosMaxAggregateInputType = {
    potrero_id?: true
    ubicacion?: true
    deleted_at?: true
  }

  export type PotrerosCountAggregateInputType = {
    potrero_id?: true
    ubicacion?: true
    deleted_at?: true
    _all?: true
  }

  export type PotrerosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which potreros to aggregate.
     */
    where?: potrerosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of potreros to fetch.
     */
    orderBy?: potrerosOrderByWithRelationInput | potrerosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: potrerosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` potreros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` potreros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned potreros
    **/
    _count?: true | PotrerosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PotrerosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PotrerosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PotrerosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PotrerosMaxAggregateInputType
  }

  export type GetPotrerosAggregateType<T extends PotrerosAggregateArgs> = {
        [P in keyof T & keyof AggregatePotreros]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePotreros[P]>
      : GetScalarType<T[P], AggregatePotreros[P]>
  }




  export type potrerosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: potrerosWhereInput
    orderBy?: potrerosOrderByWithAggregationInput | potrerosOrderByWithAggregationInput[]
    by: PotrerosScalarFieldEnum[] | PotrerosScalarFieldEnum
    having?: potrerosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PotrerosCountAggregateInputType | true
    _avg?: PotrerosAvgAggregateInputType
    _sum?: PotrerosSumAggregateInputType
    _min?: PotrerosMinAggregateInputType
    _max?: PotrerosMaxAggregateInputType
  }

  export type PotrerosGroupByOutputType = {
    potrero_id: number
    ubicacion: string
    deleted_at: Date | null
    _count: PotrerosCountAggregateOutputType | null
    _avg: PotrerosAvgAggregateOutputType | null
    _sum: PotrerosSumAggregateOutputType | null
    _min: PotrerosMinAggregateOutputType | null
    _max: PotrerosMaxAggregateOutputType | null
  }

  type GetPotrerosGroupByPayload<T extends potrerosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PotrerosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PotrerosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PotrerosGroupByOutputType[P]>
            : GetScalarType<T[P], PotrerosGroupByOutputType[P]>
        }
      >
    >


  export type potrerosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    potrero_id?: boolean
    ubicacion?: boolean
    deleted_at?: boolean
    lotes?: boolean | potreros$lotesArgs<ExtArgs>
    _count?: boolean | PotrerosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["potreros"]>

  export type potrerosSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    potrero_id?: boolean
    ubicacion?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["potreros"]>

  export type potrerosSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    potrero_id?: boolean
    ubicacion?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["potreros"]>

  export type potrerosSelectScalar = {
    potrero_id?: boolean
    ubicacion?: boolean
    deleted_at?: boolean
  }

  export type potrerosOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"potrero_id" | "ubicacion" | "deleted_at", ExtArgs["result"]["potreros"]>
  export type potrerosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    lotes?: boolean | potreros$lotesArgs<ExtArgs>
    _count?: boolean | PotrerosCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type potrerosIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type potrerosIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $potrerosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "potreros"
    objects: {
      lotes: Prisma.$lotesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      potrero_id: number
      ubicacion: string
      deleted_at: Date | null
    }, ExtArgs["result"]["potreros"]>
    composites: {}
  }

  type potrerosGetPayload<S extends boolean | null | undefined | potrerosDefaultArgs> = $Result.GetResult<Prisma.$potrerosPayload, S>

  type potrerosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<potrerosFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PotrerosCountAggregateInputType | true
    }

  export interface potrerosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['potreros'], meta: { name: 'potreros' } }
    /**
     * Find zero or one Potreros that matches the filter.
     * @param {potrerosFindUniqueArgs} args - Arguments to find a Potreros
     * @example
     * // Get one Potreros
     * const potreros = await prisma.potreros.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends potrerosFindUniqueArgs>(args: SelectSubset<T, potrerosFindUniqueArgs<ExtArgs>>): Prisma__potrerosClient<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Potreros that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {potrerosFindUniqueOrThrowArgs} args - Arguments to find a Potreros
     * @example
     * // Get one Potreros
     * const potreros = await prisma.potreros.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends potrerosFindUniqueOrThrowArgs>(args: SelectSubset<T, potrerosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__potrerosClient<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Potreros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {potrerosFindFirstArgs} args - Arguments to find a Potreros
     * @example
     * // Get one Potreros
     * const potreros = await prisma.potreros.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends potrerosFindFirstArgs>(args?: SelectSubset<T, potrerosFindFirstArgs<ExtArgs>>): Prisma__potrerosClient<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Potreros that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {potrerosFindFirstOrThrowArgs} args - Arguments to find a Potreros
     * @example
     * // Get one Potreros
     * const potreros = await prisma.potreros.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends potrerosFindFirstOrThrowArgs>(args?: SelectSubset<T, potrerosFindFirstOrThrowArgs<ExtArgs>>): Prisma__potrerosClient<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Potreros that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {potrerosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Potreros
     * const potreros = await prisma.potreros.findMany()
     * 
     * // Get first 10 Potreros
     * const potreros = await prisma.potreros.findMany({ take: 10 })
     * 
     * // Only select the `potrero_id`
     * const potrerosWithPotrero_idOnly = await prisma.potreros.findMany({ select: { potrero_id: true } })
     * 
     */
    findMany<T extends potrerosFindManyArgs>(args?: SelectSubset<T, potrerosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Potreros.
     * @param {potrerosCreateArgs} args - Arguments to create a Potreros.
     * @example
     * // Create one Potreros
     * const Potreros = await prisma.potreros.create({
     *   data: {
     *     // ... data to create a Potreros
     *   }
     * })
     * 
     */
    create<T extends potrerosCreateArgs>(args: SelectSubset<T, potrerosCreateArgs<ExtArgs>>): Prisma__potrerosClient<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Potreros.
     * @param {potrerosCreateManyArgs} args - Arguments to create many Potreros.
     * @example
     * // Create many Potreros
     * const potreros = await prisma.potreros.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends potrerosCreateManyArgs>(args?: SelectSubset<T, potrerosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Potreros and returns the data saved in the database.
     * @param {potrerosCreateManyAndReturnArgs} args - Arguments to create many Potreros.
     * @example
     * // Create many Potreros
     * const potreros = await prisma.potreros.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Potreros and only return the `potrero_id`
     * const potrerosWithPotrero_idOnly = await prisma.potreros.createManyAndReturn({
     *   select: { potrero_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends potrerosCreateManyAndReturnArgs>(args?: SelectSubset<T, potrerosCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Potreros.
     * @param {potrerosDeleteArgs} args - Arguments to delete one Potreros.
     * @example
     * // Delete one Potreros
     * const Potreros = await prisma.potreros.delete({
     *   where: {
     *     // ... filter to delete one Potreros
     *   }
     * })
     * 
     */
    delete<T extends potrerosDeleteArgs>(args: SelectSubset<T, potrerosDeleteArgs<ExtArgs>>): Prisma__potrerosClient<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Potreros.
     * @param {potrerosUpdateArgs} args - Arguments to update one Potreros.
     * @example
     * // Update one Potreros
     * const potreros = await prisma.potreros.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends potrerosUpdateArgs>(args: SelectSubset<T, potrerosUpdateArgs<ExtArgs>>): Prisma__potrerosClient<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Potreros.
     * @param {potrerosDeleteManyArgs} args - Arguments to filter Potreros to delete.
     * @example
     * // Delete a few Potreros
     * const { count } = await prisma.potreros.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends potrerosDeleteManyArgs>(args?: SelectSubset<T, potrerosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Potreros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {potrerosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Potreros
     * const potreros = await prisma.potreros.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends potrerosUpdateManyArgs>(args: SelectSubset<T, potrerosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Potreros and returns the data updated in the database.
     * @param {potrerosUpdateManyAndReturnArgs} args - Arguments to update many Potreros.
     * @example
     * // Update many Potreros
     * const potreros = await prisma.potreros.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Potreros and only return the `potrero_id`
     * const potrerosWithPotrero_idOnly = await prisma.potreros.updateManyAndReturn({
     *   select: { potrero_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends potrerosUpdateManyAndReturnArgs>(args: SelectSubset<T, potrerosUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Potreros.
     * @param {potrerosUpsertArgs} args - Arguments to update or create a Potreros.
     * @example
     * // Update or create a Potreros
     * const potreros = await prisma.potreros.upsert({
     *   create: {
     *     // ... data to create a Potreros
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Potreros we want to update
     *   }
     * })
     */
    upsert<T extends potrerosUpsertArgs>(args: SelectSubset<T, potrerosUpsertArgs<ExtArgs>>): Prisma__potrerosClient<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Potreros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {potrerosCountArgs} args - Arguments to filter Potreros to count.
     * @example
     * // Count the number of Potreros
     * const count = await prisma.potreros.count({
     *   where: {
     *     // ... the filter for the Potreros we want to count
     *   }
     * })
    **/
    count<T extends potrerosCountArgs>(
      args?: Subset<T, potrerosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PotrerosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Potreros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PotrerosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PotrerosAggregateArgs>(args: Subset<T, PotrerosAggregateArgs>): Prisma.PrismaPromise<GetPotrerosAggregateType<T>>

    /**
     * Group by Potreros.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {potrerosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends potrerosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: potrerosGroupByArgs['orderBy'] }
        : { orderBy?: potrerosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, potrerosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPotrerosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the potreros model
   */
  readonly fields: potrerosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for potreros.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__potrerosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    lotes<T extends potreros$lotesArgs<ExtArgs> = {}>(args?: Subset<T, potreros$lotesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the potreros model
   */
  interface potrerosFieldRefs {
    readonly potrero_id: FieldRef<"potreros", 'Int'>
    readonly ubicacion: FieldRef<"potreros", 'String'>
    readonly deleted_at: FieldRef<"potreros", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * potreros findUnique
   */
  export type potrerosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: potrerosInclude<ExtArgs> | null
    /**
     * Filter, which potreros to fetch.
     */
    where: potrerosWhereUniqueInput
  }

  /**
   * potreros findUniqueOrThrow
   */
  export type potrerosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: potrerosInclude<ExtArgs> | null
    /**
     * Filter, which potreros to fetch.
     */
    where: potrerosWhereUniqueInput
  }

  /**
   * potreros findFirst
   */
  export type potrerosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: potrerosInclude<ExtArgs> | null
    /**
     * Filter, which potreros to fetch.
     */
    where?: potrerosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of potreros to fetch.
     */
    orderBy?: potrerosOrderByWithRelationInput | potrerosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for potreros.
     */
    cursor?: potrerosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` potreros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` potreros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of potreros.
     */
    distinct?: PotrerosScalarFieldEnum | PotrerosScalarFieldEnum[]
  }

  /**
   * potreros findFirstOrThrow
   */
  export type potrerosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: potrerosInclude<ExtArgs> | null
    /**
     * Filter, which potreros to fetch.
     */
    where?: potrerosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of potreros to fetch.
     */
    orderBy?: potrerosOrderByWithRelationInput | potrerosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for potreros.
     */
    cursor?: potrerosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` potreros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` potreros.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of potreros.
     */
    distinct?: PotrerosScalarFieldEnum | PotrerosScalarFieldEnum[]
  }

  /**
   * potreros findMany
   */
  export type potrerosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: potrerosInclude<ExtArgs> | null
    /**
     * Filter, which potreros to fetch.
     */
    where?: potrerosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of potreros to fetch.
     */
    orderBy?: potrerosOrderByWithRelationInput | potrerosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing potreros.
     */
    cursor?: potrerosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` potreros from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` potreros.
     */
    skip?: number
    distinct?: PotrerosScalarFieldEnum | PotrerosScalarFieldEnum[]
  }

  /**
   * potreros create
   */
  export type potrerosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: potrerosInclude<ExtArgs> | null
    /**
     * The data needed to create a potreros.
     */
    data: XOR<potrerosCreateInput, potrerosUncheckedCreateInput>
  }

  /**
   * potreros createMany
   */
  export type potrerosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many potreros.
     */
    data: potrerosCreateManyInput | potrerosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * potreros createManyAndReturn
   */
  export type potrerosCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * The data used to create many potreros.
     */
    data: potrerosCreateManyInput | potrerosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * potreros update
   */
  export type potrerosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: potrerosInclude<ExtArgs> | null
    /**
     * The data needed to update a potreros.
     */
    data: XOR<potrerosUpdateInput, potrerosUncheckedUpdateInput>
    /**
     * Choose, which potreros to update.
     */
    where: potrerosWhereUniqueInput
  }

  /**
   * potreros updateMany
   */
  export type potrerosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update potreros.
     */
    data: XOR<potrerosUpdateManyMutationInput, potrerosUncheckedUpdateManyInput>
    /**
     * Filter which potreros to update
     */
    where?: potrerosWhereInput
    /**
     * Limit how many potreros to update.
     */
    limit?: number
  }

  /**
   * potreros updateManyAndReturn
   */
  export type potrerosUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * The data used to update potreros.
     */
    data: XOR<potrerosUpdateManyMutationInput, potrerosUncheckedUpdateManyInput>
    /**
     * Filter which potreros to update
     */
    where?: potrerosWhereInput
    /**
     * Limit how many potreros to update.
     */
    limit?: number
  }

  /**
   * potreros upsert
   */
  export type potrerosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: potrerosInclude<ExtArgs> | null
    /**
     * The filter to search for the potreros to update in case it exists.
     */
    where: potrerosWhereUniqueInput
    /**
     * In case the potreros found by the `where` argument doesn't exist, create a new potreros with this data.
     */
    create: XOR<potrerosCreateInput, potrerosUncheckedCreateInput>
    /**
     * In case the potreros was found with the provided `where` argument, update it with this data.
     */
    update: XOR<potrerosUpdateInput, potrerosUncheckedUpdateInput>
  }

  /**
   * potreros delete
   */
  export type potrerosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: potrerosInclude<ExtArgs> | null
    /**
     * Filter which potreros to delete.
     */
    where: potrerosWhereUniqueInput
  }

  /**
   * potreros deleteMany
   */
  export type potrerosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which potreros to delete
     */
    where?: potrerosWhereInput
    /**
     * Limit how many potreros to delete.
     */
    limit?: number
  }

  /**
   * potreros.lotes
   */
  export type potreros$lotesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
    where?: lotesWhereInput
    orderBy?: lotesOrderByWithRelationInput | lotesOrderByWithRelationInput[]
    cursor?: lotesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LotesScalarFieldEnum | LotesScalarFieldEnum[]
  }

  /**
   * potreros without action
   */
  export type potrerosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the potreros
     */
    select?: potrerosSelect<ExtArgs> | null
    /**
     * Omit specific fields from the potreros
     */
    omit?: potrerosOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: potrerosInclude<ExtArgs> | null
  }


  /**
   * Model lotes
   */

  export type AggregateLotes = {
    _count: LotesCountAggregateOutputType | null
    _avg: LotesAvgAggregateOutputType | null
    _sum: LotesSumAggregateOutputType | null
    _min: LotesMinAggregateOutputType | null
    _max: LotesMaxAggregateOutputType | null
  }

  export type LotesAvgAggregateOutputType = {
    lote_id: number | null
    potrero_id: number | null
  }

  export type LotesSumAggregateOutputType = {
    lote_id: number | null
    potrero_id: number | null
  }

  export type LotesMinAggregateOutputType = {
    lote_id: number | null
    potrero_id: number | null
    descripcion: string | null
    deleted_at: Date | null
  }

  export type LotesMaxAggregateOutputType = {
    lote_id: number | null
    potrero_id: number | null
    descripcion: string | null
    deleted_at: Date | null
  }

  export type LotesCountAggregateOutputType = {
    lote_id: number
    potrero_id: number
    descripcion: number
    deleted_at: number
    _all: number
  }


  export type LotesAvgAggregateInputType = {
    lote_id?: true
    potrero_id?: true
  }

  export type LotesSumAggregateInputType = {
    lote_id?: true
    potrero_id?: true
  }

  export type LotesMinAggregateInputType = {
    lote_id?: true
    potrero_id?: true
    descripcion?: true
    deleted_at?: true
  }

  export type LotesMaxAggregateInputType = {
    lote_id?: true
    potrero_id?: true
    descripcion?: true
    deleted_at?: true
  }

  export type LotesCountAggregateInputType = {
    lote_id?: true
    potrero_id?: true
    descripcion?: true
    deleted_at?: true
    _all?: true
  }

  export type LotesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which lotes to aggregate.
     */
    where?: lotesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lotes to fetch.
     */
    orderBy?: lotesOrderByWithRelationInput | lotesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: lotesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned lotes
    **/
    _count?: true | LotesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LotesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LotesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LotesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LotesMaxAggregateInputType
  }

  export type GetLotesAggregateType<T extends LotesAggregateArgs> = {
        [P in keyof T & keyof AggregateLotes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLotes[P]>
      : GetScalarType<T[P], AggregateLotes[P]>
  }




  export type lotesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: lotesWhereInput
    orderBy?: lotesOrderByWithAggregationInput | lotesOrderByWithAggregationInput[]
    by: LotesScalarFieldEnum[] | LotesScalarFieldEnum
    having?: lotesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LotesCountAggregateInputType | true
    _avg?: LotesAvgAggregateInputType
    _sum?: LotesSumAggregateInputType
    _min?: LotesMinAggregateInputType
    _max?: LotesMaxAggregateInputType
  }

  export type LotesGroupByOutputType = {
    lote_id: number
    potrero_id: number
    descripcion: string | null
    deleted_at: Date | null
    _count: LotesCountAggregateOutputType | null
    _avg: LotesAvgAggregateOutputType | null
    _sum: LotesSumAggregateOutputType | null
    _min: LotesMinAggregateOutputType | null
    _max: LotesMaxAggregateOutputType | null
  }

  type GetLotesGroupByPayload<T extends lotesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LotesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LotesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LotesGroupByOutputType[P]>
            : GetScalarType<T[P], LotesGroupByOutputType[P]>
        }
      >
    >


  export type lotesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    lote_id?: boolean
    potrero_id?: boolean
    descripcion?: boolean
    deleted_at?: boolean
    potrero?: boolean | potrerosDefaultArgs<ExtArgs>
    animales?: boolean | lotes$animalesArgs<ExtArgs>
    _count?: boolean | LotesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lotes"]>

  export type lotesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    lote_id?: boolean
    potrero_id?: boolean
    descripcion?: boolean
    deleted_at?: boolean
    potrero?: boolean | potrerosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lotes"]>

  export type lotesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    lote_id?: boolean
    potrero_id?: boolean
    descripcion?: boolean
    deleted_at?: boolean
    potrero?: boolean | potrerosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["lotes"]>

  export type lotesSelectScalar = {
    lote_id?: boolean
    potrero_id?: boolean
    descripcion?: boolean
    deleted_at?: boolean
  }

  export type lotesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"lote_id" | "potrero_id" | "descripcion" | "deleted_at", ExtArgs["result"]["lotes"]>
  export type lotesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    potrero?: boolean | potrerosDefaultArgs<ExtArgs>
    animales?: boolean | lotes$animalesArgs<ExtArgs>
    _count?: boolean | LotesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type lotesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    potrero?: boolean | potrerosDefaultArgs<ExtArgs>
  }
  export type lotesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    potrero?: boolean | potrerosDefaultArgs<ExtArgs>
  }

  export type $lotesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "lotes"
    objects: {
      potrero: Prisma.$potrerosPayload<ExtArgs>
      animales: Prisma.$animalesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      lote_id: number
      potrero_id: number
      descripcion: string | null
      deleted_at: Date | null
    }, ExtArgs["result"]["lotes"]>
    composites: {}
  }

  type lotesGetPayload<S extends boolean | null | undefined | lotesDefaultArgs> = $Result.GetResult<Prisma.$lotesPayload, S>

  type lotesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<lotesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LotesCountAggregateInputType | true
    }

  export interface lotesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['lotes'], meta: { name: 'lotes' } }
    /**
     * Find zero or one Lotes that matches the filter.
     * @param {lotesFindUniqueArgs} args - Arguments to find a Lotes
     * @example
     * // Get one Lotes
     * const lotes = await prisma.lotes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends lotesFindUniqueArgs>(args: SelectSubset<T, lotesFindUniqueArgs<ExtArgs>>): Prisma__lotesClient<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Lotes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {lotesFindUniqueOrThrowArgs} args - Arguments to find a Lotes
     * @example
     * // Get one Lotes
     * const lotes = await prisma.lotes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends lotesFindUniqueOrThrowArgs>(args: SelectSubset<T, lotesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__lotesClient<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Lotes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lotesFindFirstArgs} args - Arguments to find a Lotes
     * @example
     * // Get one Lotes
     * const lotes = await prisma.lotes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends lotesFindFirstArgs>(args?: SelectSubset<T, lotesFindFirstArgs<ExtArgs>>): Prisma__lotesClient<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Lotes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lotesFindFirstOrThrowArgs} args - Arguments to find a Lotes
     * @example
     * // Get one Lotes
     * const lotes = await prisma.lotes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends lotesFindFirstOrThrowArgs>(args?: SelectSubset<T, lotesFindFirstOrThrowArgs<ExtArgs>>): Prisma__lotesClient<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Lotes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lotesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Lotes
     * const lotes = await prisma.lotes.findMany()
     * 
     * // Get first 10 Lotes
     * const lotes = await prisma.lotes.findMany({ take: 10 })
     * 
     * // Only select the `lote_id`
     * const lotesWithLote_idOnly = await prisma.lotes.findMany({ select: { lote_id: true } })
     * 
     */
    findMany<T extends lotesFindManyArgs>(args?: SelectSubset<T, lotesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Lotes.
     * @param {lotesCreateArgs} args - Arguments to create a Lotes.
     * @example
     * // Create one Lotes
     * const Lotes = await prisma.lotes.create({
     *   data: {
     *     // ... data to create a Lotes
     *   }
     * })
     * 
     */
    create<T extends lotesCreateArgs>(args: SelectSubset<T, lotesCreateArgs<ExtArgs>>): Prisma__lotesClient<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Lotes.
     * @param {lotesCreateManyArgs} args - Arguments to create many Lotes.
     * @example
     * // Create many Lotes
     * const lotes = await prisma.lotes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends lotesCreateManyArgs>(args?: SelectSubset<T, lotesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Lotes and returns the data saved in the database.
     * @param {lotesCreateManyAndReturnArgs} args - Arguments to create many Lotes.
     * @example
     * // Create many Lotes
     * const lotes = await prisma.lotes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Lotes and only return the `lote_id`
     * const lotesWithLote_idOnly = await prisma.lotes.createManyAndReturn({
     *   select: { lote_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends lotesCreateManyAndReturnArgs>(args?: SelectSubset<T, lotesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Lotes.
     * @param {lotesDeleteArgs} args - Arguments to delete one Lotes.
     * @example
     * // Delete one Lotes
     * const Lotes = await prisma.lotes.delete({
     *   where: {
     *     // ... filter to delete one Lotes
     *   }
     * })
     * 
     */
    delete<T extends lotesDeleteArgs>(args: SelectSubset<T, lotesDeleteArgs<ExtArgs>>): Prisma__lotesClient<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Lotes.
     * @param {lotesUpdateArgs} args - Arguments to update one Lotes.
     * @example
     * // Update one Lotes
     * const lotes = await prisma.lotes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends lotesUpdateArgs>(args: SelectSubset<T, lotesUpdateArgs<ExtArgs>>): Prisma__lotesClient<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Lotes.
     * @param {lotesDeleteManyArgs} args - Arguments to filter Lotes to delete.
     * @example
     * // Delete a few Lotes
     * const { count } = await prisma.lotes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends lotesDeleteManyArgs>(args?: SelectSubset<T, lotesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lotesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Lotes
     * const lotes = await prisma.lotes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends lotesUpdateManyArgs>(args: SelectSubset<T, lotesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Lotes and returns the data updated in the database.
     * @param {lotesUpdateManyAndReturnArgs} args - Arguments to update many Lotes.
     * @example
     * // Update many Lotes
     * const lotes = await prisma.lotes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Lotes and only return the `lote_id`
     * const lotesWithLote_idOnly = await prisma.lotes.updateManyAndReturn({
     *   select: { lote_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends lotesUpdateManyAndReturnArgs>(args: SelectSubset<T, lotesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Lotes.
     * @param {lotesUpsertArgs} args - Arguments to update or create a Lotes.
     * @example
     * // Update or create a Lotes
     * const lotes = await prisma.lotes.upsert({
     *   create: {
     *     // ... data to create a Lotes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Lotes we want to update
     *   }
     * })
     */
    upsert<T extends lotesUpsertArgs>(args: SelectSubset<T, lotesUpsertArgs<ExtArgs>>): Prisma__lotesClient<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Lotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lotesCountArgs} args - Arguments to filter Lotes to count.
     * @example
     * // Count the number of Lotes
     * const count = await prisma.lotes.count({
     *   where: {
     *     // ... the filter for the Lotes we want to count
     *   }
     * })
    **/
    count<T extends lotesCountArgs>(
      args?: Subset<T, lotesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LotesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Lotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LotesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LotesAggregateArgs>(args: Subset<T, LotesAggregateArgs>): Prisma.PrismaPromise<GetLotesAggregateType<T>>

    /**
     * Group by Lotes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {lotesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends lotesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: lotesGroupByArgs['orderBy'] }
        : { orderBy?: lotesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, lotesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLotesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the lotes model
   */
  readonly fields: lotesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for lotes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__lotesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    potrero<T extends potrerosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, potrerosDefaultArgs<ExtArgs>>): Prisma__potrerosClient<$Result.GetResult<Prisma.$potrerosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    animales<T extends lotes$animalesArgs<ExtArgs> = {}>(args?: Subset<T, lotes$animalesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the lotes model
   */
  interface lotesFieldRefs {
    readonly lote_id: FieldRef<"lotes", 'Int'>
    readonly potrero_id: FieldRef<"lotes", 'Int'>
    readonly descripcion: FieldRef<"lotes", 'String'>
    readonly deleted_at: FieldRef<"lotes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * lotes findUnique
   */
  export type lotesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
    /**
     * Filter, which lotes to fetch.
     */
    where: lotesWhereUniqueInput
  }

  /**
   * lotes findUniqueOrThrow
   */
  export type lotesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
    /**
     * Filter, which lotes to fetch.
     */
    where: lotesWhereUniqueInput
  }

  /**
   * lotes findFirst
   */
  export type lotesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
    /**
     * Filter, which lotes to fetch.
     */
    where?: lotesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lotes to fetch.
     */
    orderBy?: lotesOrderByWithRelationInput | lotesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lotes.
     */
    cursor?: lotesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lotes.
     */
    distinct?: LotesScalarFieldEnum | LotesScalarFieldEnum[]
  }

  /**
   * lotes findFirstOrThrow
   */
  export type lotesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
    /**
     * Filter, which lotes to fetch.
     */
    where?: lotesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lotes to fetch.
     */
    orderBy?: lotesOrderByWithRelationInput | lotesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for lotes.
     */
    cursor?: lotesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lotes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of lotes.
     */
    distinct?: LotesScalarFieldEnum | LotesScalarFieldEnum[]
  }

  /**
   * lotes findMany
   */
  export type lotesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
    /**
     * Filter, which lotes to fetch.
     */
    where?: lotesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of lotes to fetch.
     */
    orderBy?: lotesOrderByWithRelationInput | lotesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing lotes.
     */
    cursor?: lotesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` lotes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` lotes.
     */
    skip?: number
    distinct?: LotesScalarFieldEnum | LotesScalarFieldEnum[]
  }

  /**
   * lotes create
   */
  export type lotesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
    /**
     * The data needed to create a lotes.
     */
    data: XOR<lotesCreateInput, lotesUncheckedCreateInput>
  }

  /**
   * lotes createMany
   */
  export type lotesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many lotes.
     */
    data: lotesCreateManyInput | lotesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * lotes createManyAndReturn
   */
  export type lotesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * The data used to create many lotes.
     */
    data: lotesCreateManyInput | lotesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * lotes update
   */
  export type lotesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
    /**
     * The data needed to update a lotes.
     */
    data: XOR<lotesUpdateInput, lotesUncheckedUpdateInput>
    /**
     * Choose, which lotes to update.
     */
    where: lotesWhereUniqueInput
  }

  /**
   * lotes updateMany
   */
  export type lotesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update lotes.
     */
    data: XOR<lotesUpdateManyMutationInput, lotesUncheckedUpdateManyInput>
    /**
     * Filter which lotes to update
     */
    where?: lotesWhereInput
    /**
     * Limit how many lotes to update.
     */
    limit?: number
  }

  /**
   * lotes updateManyAndReturn
   */
  export type lotesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * The data used to update lotes.
     */
    data: XOR<lotesUpdateManyMutationInput, lotesUncheckedUpdateManyInput>
    /**
     * Filter which lotes to update
     */
    where?: lotesWhereInput
    /**
     * Limit how many lotes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * lotes upsert
   */
  export type lotesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
    /**
     * The filter to search for the lotes to update in case it exists.
     */
    where: lotesWhereUniqueInput
    /**
     * In case the lotes found by the `where` argument doesn't exist, create a new lotes with this data.
     */
    create: XOR<lotesCreateInput, lotesUncheckedCreateInput>
    /**
     * In case the lotes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<lotesUpdateInput, lotesUncheckedUpdateInput>
  }

  /**
   * lotes delete
   */
  export type lotesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
    /**
     * Filter which lotes to delete.
     */
    where: lotesWhereUniqueInput
  }

  /**
   * lotes deleteMany
   */
  export type lotesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which lotes to delete
     */
    where?: lotesWhereInput
    /**
     * Limit how many lotes to delete.
     */
    limit?: number
  }

  /**
   * lotes.animales
   */
  export type lotes$animalesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    where?: animalesWhereInput
    orderBy?: animalesOrderByWithRelationInput | animalesOrderByWithRelationInput[]
    cursor?: animalesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnimalesScalarFieldEnum | AnimalesScalarFieldEnum[]
  }

  /**
   * lotes without action
   */
  export type lotesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
  }


  /**
   * Model animales
   */

  export type AggregateAnimales = {
    _count: AnimalesCountAggregateOutputType | null
    _avg: AnimalesAvgAggregateOutputType | null
    _sum: AnimalesSumAggregateOutputType | null
    _min: AnimalesMinAggregateOutputType | null
    _max: AnimalesMaxAggregateOutputType | null
  }

  export type AnimalesAvgAggregateOutputType = {
    animal_id: number | null
    animal_madre_id: number | null
    animal_padre_id: number | null
    lote_id: number | null
    raza_id: number | null
  }

  export type AnimalesSumAggregateOutputType = {
    animal_id: number | null
    animal_madre_id: number | null
    animal_padre_id: number | null
    lote_id: number | null
    raza_id: number | null
  }

  export type AnimalesMinAggregateOutputType = {
    animal_id: number | null
    animal_madre_id: number | null
    animal_padre_id: number | null
    lote_id: number | null
    raza_id: number | null
    animal_img: string | null
    arete: string | null
    sexo: string | null
    fecha_destete: Date | null
    fecha_nacimiento: Date | null
    deleted_at: Date | null
  }

  export type AnimalesMaxAggregateOutputType = {
    animal_id: number | null
    animal_madre_id: number | null
    animal_padre_id: number | null
    lote_id: number | null
    raza_id: number | null
    animal_img: string | null
    arete: string | null
    sexo: string | null
    fecha_destete: Date | null
    fecha_nacimiento: Date | null
    deleted_at: Date | null
  }

  export type AnimalesCountAggregateOutputType = {
    animal_id: number
    animal_madre_id: number
    animal_padre_id: number
    lote_id: number
    raza_id: number
    animal_img: number
    arete: number
    sexo: number
    fecha_destete: number
    fecha_nacimiento: number
    deleted_at: number
    _all: number
  }


  export type AnimalesAvgAggregateInputType = {
    animal_id?: true
    animal_madre_id?: true
    animal_padre_id?: true
    lote_id?: true
    raza_id?: true
  }

  export type AnimalesSumAggregateInputType = {
    animal_id?: true
    animal_madre_id?: true
    animal_padre_id?: true
    lote_id?: true
    raza_id?: true
  }

  export type AnimalesMinAggregateInputType = {
    animal_id?: true
    animal_madre_id?: true
    animal_padre_id?: true
    lote_id?: true
    raza_id?: true
    animal_img?: true
    arete?: true
    sexo?: true
    fecha_destete?: true
    fecha_nacimiento?: true
    deleted_at?: true
  }

  export type AnimalesMaxAggregateInputType = {
    animal_id?: true
    animal_madre_id?: true
    animal_padre_id?: true
    lote_id?: true
    raza_id?: true
    animal_img?: true
    arete?: true
    sexo?: true
    fecha_destete?: true
    fecha_nacimiento?: true
    deleted_at?: true
  }

  export type AnimalesCountAggregateInputType = {
    animal_id?: true
    animal_madre_id?: true
    animal_padre_id?: true
    lote_id?: true
    raza_id?: true
    animal_img?: true
    arete?: true
    sexo?: true
    fecha_destete?: true
    fecha_nacimiento?: true
    deleted_at?: true
    _all?: true
  }

  export type AnimalesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which animales to aggregate.
     */
    where?: animalesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animales to fetch.
     */
    orderBy?: animalesOrderByWithRelationInput | animalesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: animalesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned animales
    **/
    _count?: true | AnimalesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AnimalesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AnimalesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AnimalesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AnimalesMaxAggregateInputType
  }

  export type GetAnimalesAggregateType<T extends AnimalesAggregateArgs> = {
        [P in keyof T & keyof AggregateAnimales]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnimales[P]>
      : GetScalarType<T[P], AggregateAnimales[P]>
  }




  export type animalesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: animalesWhereInput
    orderBy?: animalesOrderByWithAggregationInput | animalesOrderByWithAggregationInput[]
    by: AnimalesScalarFieldEnum[] | AnimalesScalarFieldEnum
    having?: animalesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AnimalesCountAggregateInputType | true
    _avg?: AnimalesAvgAggregateInputType
    _sum?: AnimalesSumAggregateInputType
    _min?: AnimalesMinAggregateInputType
    _max?: AnimalesMaxAggregateInputType
  }

  export type AnimalesGroupByOutputType = {
    animal_id: number
    animal_madre_id: number | null
    animal_padre_id: number | null
    lote_id: number | null
    raza_id: number
    animal_img: string | null
    arete: string
    sexo: string
    fecha_destete: Date | null
    fecha_nacimiento: Date
    deleted_at: Date | null
    _count: AnimalesCountAggregateOutputType | null
    _avg: AnimalesAvgAggregateOutputType | null
    _sum: AnimalesSumAggregateOutputType | null
    _min: AnimalesMinAggregateOutputType | null
    _max: AnimalesMaxAggregateOutputType | null
  }

  type GetAnimalesGroupByPayload<T extends animalesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AnimalesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AnimalesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AnimalesGroupByOutputType[P]>
            : GetScalarType<T[P], AnimalesGroupByOutputType[P]>
        }
      >
    >


  export type animalesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    animal_id?: boolean
    animal_madre_id?: boolean
    animal_padre_id?: boolean
    lote_id?: boolean
    raza_id?: boolean
    animal_img?: boolean
    arete?: boolean
    sexo?: boolean
    fecha_destete?: boolean
    fecha_nacimiento?: boolean
    deleted_at?: boolean
    madre?: boolean | animales$madreArgs<ExtArgs>
    padre?: boolean | animales$padreArgs<ExtArgs>
    hijos_madre?: boolean | animales$hijos_madreArgs<ExtArgs>
    hijos_padre?: boolean | animales$hijos_padreArgs<ExtArgs>
    lote?: boolean | animales$loteArgs<ExtArgs>
    raza?: boolean | razasDefaultArgs<ExtArgs>
    eventos_sanitarios?: boolean | animales$eventos_sanitariosArgs<ExtArgs>
    alimentaciones?: boolean | animales$alimentacionesArgs<ExtArgs>
    pesajes?: boolean | animales$pesajesArgs<ExtArgs>
    producciones_carne?: boolean | animales$producciones_carneArgs<ExtArgs>
    producciones_leche?: boolean | animales$producciones_lecheArgs<ExtArgs>
    montas_hembra?: boolean | animales$montas_hembraArgs<ExtArgs>
    montas_macho?: boolean | animales$montas_machoArgs<ExtArgs>
    partos?: boolean | animales$partosArgs<ExtArgs>
    _count?: boolean | AnimalesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animales"]>

  export type animalesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    animal_id?: boolean
    animal_madre_id?: boolean
    animal_padre_id?: boolean
    lote_id?: boolean
    raza_id?: boolean
    animal_img?: boolean
    arete?: boolean
    sexo?: boolean
    fecha_destete?: boolean
    fecha_nacimiento?: boolean
    deleted_at?: boolean
    madre?: boolean | animales$madreArgs<ExtArgs>
    padre?: boolean | animales$padreArgs<ExtArgs>
    lote?: boolean | animales$loteArgs<ExtArgs>
    raza?: boolean | razasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animales"]>

  export type animalesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    animal_id?: boolean
    animal_madre_id?: boolean
    animal_padre_id?: boolean
    lote_id?: boolean
    raza_id?: boolean
    animal_img?: boolean
    arete?: boolean
    sexo?: boolean
    fecha_destete?: boolean
    fecha_nacimiento?: boolean
    deleted_at?: boolean
    madre?: boolean | animales$madreArgs<ExtArgs>
    padre?: boolean | animales$padreArgs<ExtArgs>
    lote?: boolean | animales$loteArgs<ExtArgs>
    raza?: boolean | razasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["animales"]>

  export type animalesSelectScalar = {
    animal_id?: boolean
    animal_madre_id?: boolean
    animal_padre_id?: boolean
    lote_id?: boolean
    raza_id?: boolean
    animal_img?: boolean
    arete?: boolean
    sexo?: boolean
    fecha_destete?: boolean
    fecha_nacimiento?: boolean
    deleted_at?: boolean
  }

  export type animalesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"animal_id" | "animal_madre_id" | "animal_padre_id" | "lote_id" | "raza_id" | "animal_img" | "arete" | "sexo" | "fecha_destete" | "fecha_nacimiento" | "deleted_at", ExtArgs["result"]["animales"]>
  export type animalesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    madre?: boolean | animales$madreArgs<ExtArgs>
    padre?: boolean | animales$padreArgs<ExtArgs>
    hijos_madre?: boolean | animales$hijos_madreArgs<ExtArgs>
    hijos_padre?: boolean | animales$hijos_padreArgs<ExtArgs>
    lote?: boolean | animales$loteArgs<ExtArgs>
    raza?: boolean | razasDefaultArgs<ExtArgs>
    eventos_sanitarios?: boolean | animales$eventos_sanitariosArgs<ExtArgs>
    alimentaciones?: boolean | animales$alimentacionesArgs<ExtArgs>
    pesajes?: boolean | animales$pesajesArgs<ExtArgs>
    producciones_carne?: boolean | animales$producciones_carneArgs<ExtArgs>
    producciones_leche?: boolean | animales$producciones_lecheArgs<ExtArgs>
    montas_hembra?: boolean | animales$montas_hembraArgs<ExtArgs>
    montas_macho?: boolean | animales$montas_machoArgs<ExtArgs>
    partos?: boolean | animales$partosArgs<ExtArgs>
    _count?: boolean | AnimalesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type animalesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    madre?: boolean | animales$madreArgs<ExtArgs>
    padre?: boolean | animales$padreArgs<ExtArgs>
    lote?: boolean | animales$loteArgs<ExtArgs>
    raza?: boolean | razasDefaultArgs<ExtArgs>
  }
  export type animalesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    madre?: boolean | animales$madreArgs<ExtArgs>
    padre?: boolean | animales$padreArgs<ExtArgs>
    lote?: boolean | animales$loteArgs<ExtArgs>
    raza?: boolean | razasDefaultArgs<ExtArgs>
  }

  export type $animalesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "animales"
    objects: {
      madre: Prisma.$animalesPayload<ExtArgs> | null
      padre: Prisma.$animalesPayload<ExtArgs> | null
      hijos_madre: Prisma.$animalesPayload<ExtArgs>[]
      hijos_padre: Prisma.$animalesPayload<ExtArgs>[]
      lote: Prisma.$lotesPayload<ExtArgs> | null
      raza: Prisma.$razasPayload<ExtArgs>
      eventos_sanitarios: Prisma.$evento_sanitarioPayload<ExtArgs>[]
      alimentaciones: Prisma.$alimentacionPayload<ExtArgs>[]
      pesajes: Prisma.$pesajesPayload<ExtArgs>[]
      producciones_carne: Prisma.$produccion_carnePayload<ExtArgs>[]
      producciones_leche: Prisma.$produccion_lecheraPayload<ExtArgs>[]
      montas_hembra: Prisma.$evento_montaPayload<ExtArgs>[]
      montas_macho: Prisma.$evento_montaPayload<ExtArgs>[]
      partos: Prisma.$evento_partoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      animal_id: number
      animal_madre_id: number | null
      animal_padre_id: number | null
      lote_id: number | null
      raza_id: number
      animal_img: string | null
      arete: string
      sexo: string
      fecha_destete: Date | null
      fecha_nacimiento: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["animales"]>
    composites: {}
  }

  type animalesGetPayload<S extends boolean | null | undefined | animalesDefaultArgs> = $Result.GetResult<Prisma.$animalesPayload, S>

  type animalesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<animalesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AnimalesCountAggregateInputType | true
    }

  export interface animalesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['animales'], meta: { name: 'animales' } }
    /**
     * Find zero or one Animales that matches the filter.
     * @param {animalesFindUniqueArgs} args - Arguments to find a Animales
     * @example
     * // Get one Animales
     * const animales = await prisma.animales.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends animalesFindUniqueArgs>(args: SelectSubset<T, animalesFindUniqueArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Animales that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {animalesFindUniqueOrThrowArgs} args - Arguments to find a Animales
     * @example
     * // Get one Animales
     * const animales = await prisma.animales.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends animalesFindUniqueOrThrowArgs>(args: SelectSubset<T, animalesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Animales that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animalesFindFirstArgs} args - Arguments to find a Animales
     * @example
     * // Get one Animales
     * const animales = await prisma.animales.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends animalesFindFirstArgs>(args?: SelectSubset<T, animalesFindFirstArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Animales that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animalesFindFirstOrThrowArgs} args - Arguments to find a Animales
     * @example
     * // Get one Animales
     * const animales = await prisma.animales.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends animalesFindFirstOrThrowArgs>(args?: SelectSubset<T, animalesFindFirstOrThrowArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Animales that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animalesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Animales
     * const animales = await prisma.animales.findMany()
     * 
     * // Get first 10 Animales
     * const animales = await prisma.animales.findMany({ take: 10 })
     * 
     * // Only select the `animal_id`
     * const animalesWithAnimal_idOnly = await prisma.animales.findMany({ select: { animal_id: true } })
     * 
     */
    findMany<T extends animalesFindManyArgs>(args?: SelectSubset<T, animalesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Animales.
     * @param {animalesCreateArgs} args - Arguments to create a Animales.
     * @example
     * // Create one Animales
     * const Animales = await prisma.animales.create({
     *   data: {
     *     // ... data to create a Animales
     *   }
     * })
     * 
     */
    create<T extends animalesCreateArgs>(args: SelectSubset<T, animalesCreateArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Animales.
     * @param {animalesCreateManyArgs} args - Arguments to create many Animales.
     * @example
     * // Create many Animales
     * const animales = await prisma.animales.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends animalesCreateManyArgs>(args?: SelectSubset<T, animalesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Animales and returns the data saved in the database.
     * @param {animalesCreateManyAndReturnArgs} args - Arguments to create many Animales.
     * @example
     * // Create many Animales
     * const animales = await prisma.animales.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Animales and only return the `animal_id`
     * const animalesWithAnimal_idOnly = await prisma.animales.createManyAndReturn({
     *   select: { animal_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends animalesCreateManyAndReturnArgs>(args?: SelectSubset<T, animalesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Animales.
     * @param {animalesDeleteArgs} args - Arguments to delete one Animales.
     * @example
     * // Delete one Animales
     * const Animales = await prisma.animales.delete({
     *   where: {
     *     // ... filter to delete one Animales
     *   }
     * })
     * 
     */
    delete<T extends animalesDeleteArgs>(args: SelectSubset<T, animalesDeleteArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Animales.
     * @param {animalesUpdateArgs} args - Arguments to update one Animales.
     * @example
     * // Update one Animales
     * const animales = await prisma.animales.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends animalesUpdateArgs>(args: SelectSubset<T, animalesUpdateArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Animales.
     * @param {animalesDeleteManyArgs} args - Arguments to filter Animales to delete.
     * @example
     * // Delete a few Animales
     * const { count } = await prisma.animales.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends animalesDeleteManyArgs>(args?: SelectSubset<T, animalesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Animales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animalesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Animales
     * const animales = await prisma.animales.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends animalesUpdateManyArgs>(args: SelectSubset<T, animalesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Animales and returns the data updated in the database.
     * @param {animalesUpdateManyAndReturnArgs} args - Arguments to update many Animales.
     * @example
     * // Update many Animales
     * const animales = await prisma.animales.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Animales and only return the `animal_id`
     * const animalesWithAnimal_idOnly = await prisma.animales.updateManyAndReturn({
     *   select: { animal_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends animalesUpdateManyAndReturnArgs>(args: SelectSubset<T, animalesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Animales.
     * @param {animalesUpsertArgs} args - Arguments to update or create a Animales.
     * @example
     * // Update or create a Animales
     * const animales = await prisma.animales.upsert({
     *   create: {
     *     // ... data to create a Animales
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Animales we want to update
     *   }
     * })
     */
    upsert<T extends animalesUpsertArgs>(args: SelectSubset<T, animalesUpsertArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Animales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animalesCountArgs} args - Arguments to filter Animales to count.
     * @example
     * // Count the number of Animales
     * const count = await prisma.animales.count({
     *   where: {
     *     // ... the filter for the Animales we want to count
     *   }
     * })
    **/
    count<T extends animalesCountArgs>(
      args?: Subset<T, animalesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AnimalesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Animales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnimalesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AnimalesAggregateArgs>(args: Subset<T, AnimalesAggregateArgs>): Prisma.PrismaPromise<GetAnimalesAggregateType<T>>

    /**
     * Group by Animales.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {animalesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends animalesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: animalesGroupByArgs['orderBy'] }
        : { orderBy?: animalesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, animalesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnimalesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the animales model
   */
  readonly fields: animalesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for animales.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__animalesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    madre<T extends animales$madreArgs<ExtArgs> = {}>(args?: Subset<T, animales$madreArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    padre<T extends animales$padreArgs<ExtArgs> = {}>(args?: Subset<T, animales$padreArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    hijos_madre<T extends animales$hijos_madreArgs<ExtArgs> = {}>(args?: Subset<T, animales$hijos_madreArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    hijos_padre<T extends animales$hijos_padreArgs<ExtArgs> = {}>(args?: Subset<T, animales$hijos_padreArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    lote<T extends animales$loteArgs<ExtArgs> = {}>(args?: Subset<T, animales$loteArgs<ExtArgs>>): Prisma__lotesClient<$Result.GetResult<Prisma.$lotesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    raza<T extends razasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, razasDefaultArgs<ExtArgs>>): Prisma__razasClient<$Result.GetResult<Prisma.$razasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    eventos_sanitarios<T extends animales$eventos_sanitariosArgs<ExtArgs> = {}>(args?: Subset<T, animales$eventos_sanitariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    alimentaciones<T extends animales$alimentacionesArgs<ExtArgs> = {}>(args?: Subset<T, animales$alimentacionesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    pesajes<T extends animales$pesajesArgs<ExtArgs> = {}>(args?: Subset<T, animales$pesajesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    producciones_carne<T extends animales$producciones_carneArgs<ExtArgs> = {}>(args?: Subset<T, animales$producciones_carneArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    producciones_leche<T extends animales$producciones_lecheArgs<ExtArgs> = {}>(args?: Subset<T, animales$producciones_lecheArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    montas_hembra<T extends animales$montas_hembraArgs<ExtArgs> = {}>(args?: Subset<T, animales$montas_hembraArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    montas_macho<T extends animales$montas_machoArgs<ExtArgs> = {}>(args?: Subset<T, animales$montas_machoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    partos<T extends animales$partosArgs<ExtArgs> = {}>(args?: Subset<T, animales$partosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the animales model
   */
  interface animalesFieldRefs {
    readonly animal_id: FieldRef<"animales", 'Int'>
    readonly animal_madre_id: FieldRef<"animales", 'Int'>
    readonly animal_padre_id: FieldRef<"animales", 'Int'>
    readonly lote_id: FieldRef<"animales", 'Int'>
    readonly raza_id: FieldRef<"animales", 'Int'>
    readonly animal_img: FieldRef<"animales", 'String'>
    readonly arete: FieldRef<"animales", 'String'>
    readonly sexo: FieldRef<"animales", 'String'>
    readonly fecha_destete: FieldRef<"animales", 'DateTime'>
    readonly fecha_nacimiento: FieldRef<"animales", 'DateTime'>
    readonly deleted_at: FieldRef<"animales", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * animales findUnique
   */
  export type animalesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    /**
     * Filter, which animales to fetch.
     */
    where: animalesWhereUniqueInput
  }

  /**
   * animales findUniqueOrThrow
   */
  export type animalesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    /**
     * Filter, which animales to fetch.
     */
    where: animalesWhereUniqueInput
  }

  /**
   * animales findFirst
   */
  export type animalesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    /**
     * Filter, which animales to fetch.
     */
    where?: animalesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animales to fetch.
     */
    orderBy?: animalesOrderByWithRelationInput | animalesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for animales.
     */
    cursor?: animalesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of animales.
     */
    distinct?: AnimalesScalarFieldEnum | AnimalesScalarFieldEnum[]
  }

  /**
   * animales findFirstOrThrow
   */
  export type animalesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    /**
     * Filter, which animales to fetch.
     */
    where?: animalesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animales to fetch.
     */
    orderBy?: animalesOrderByWithRelationInput | animalesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for animales.
     */
    cursor?: animalesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animales.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of animales.
     */
    distinct?: AnimalesScalarFieldEnum | AnimalesScalarFieldEnum[]
  }

  /**
   * animales findMany
   */
  export type animalesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    /**
     * Filter, which animales to fetch.
     */
    where?: animalesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of animales to fetch.
     */
    orderBy?: animalesOrderByWithRelationInput | animalesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing animales.
     */
    cursor?: animalesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` animales from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` animales.
     */
    skip?: number
    distinct?: AnimalesScalarFieldEnum | AnimalesScalarFieldEnum[]
  }

  /**
   * animales create
   */
  export type animalesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    /**
     * The data needed to create a animales.
     */
    data: XOR<animalesCreateInput, animalesUncheckedCreateInput>
  }

  /**
   * animales createMany
   */
  export type animalesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many animales.
     */
    data: animalesCreateManyInput | animalesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * animales createManyAndReturn
   */
  export type animalesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * The data used to create many animales.
     */
    data: animalesCreateManyInput | animalesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * animales update
   */
  export type animalesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    /**
     * The data needed to update a animales.
     */
    data: XOR<animalesUpdateInput, animalesUncheckedUpdateInput>
    /**
     * Choose, which animales to update.
     */
    where: animalesWhereUniqueInput
  }

  /**
   * animales updateMany
   */
  export type animalesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update animales.
     */
    data: XOR<animalesUpdateManyMutationInput, animalesUncheckedUpdateManyInput>
    /**
     * Filter which animales to update
     */
    where?: animalesWhereInput
    /**
     * Limit how many animales to update.
     */
    limit?: number
  }

  /**
   * animales updateManyAndReturn
   */
  export type animalesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * The data used to update animales.
     */
    data: XOR<animalesUpdateManyMutationInput, animalesUncheckedUpdateManyInput>
    /**
     * Filter which animales to update
     */
    where?: animalesWhereInput
    /**
     * Limit how many animales to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * animales upsert
   */
  export type animalesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    /**
     * The filter to search for the animales to update in case it exists.
     */
    where: animalesWhereUniqueInput
    /**
     * In case the animales found by the `where` argument doesn't exist, create a new animales with this data.
     */
    create: XOR<animalesCreateInput, animalesUncheckedCreateInput>
    /**
     * In case the animales was found with the provided `where` argument, update it with this data.
     */
    update: XOR<animalesUpdateInput, animalesUncheckedUpdateInput>
  }

  /**
   * animales delete
   */
  export type animalesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    /**
     * Filter which animales to delete.
     */
    where: animalesWhereUniqueInput
  }

  /**
   * animales deleteMany
   */
  export type animalesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which animales to delete
     */
    where?: animalesWhereInput
    /**
     * Limit how many animales to delete.
     */
    limit?: number
  }

  /**
   * animales.madre
   */
  export type animales$madreArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    where?: animalesWhereInput
  }

  /**
   * animales.padre
   */
  export type animales$padreArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    where?: animalesWhereInput
  }

  /**
   * animales.hijos_madre
   */
  export type animales$hijos_madreArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    where?: animalesWhereInput
    orderBy?: animalesOrderByWithRelationInput | animalesOrderByWithRelationInput[]
    cursor?: animalesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnimalesScalarFieldEnum | AnimalesScalarFieldEnum[]
  }

  /**
   * animales.hijos_padre
   */
  export type animales$hijos_padreArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
    where?: animalesWhereInput
    orderBy?: animalesOrderByWithRelationInput | animalesOrderByWithRelationInput[]
    cursor?: animalesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnimalesScalarFieldEnum | AnimalesScalarFieldEnum[]
  }

  /**
   * animales.lote
   */
  export type animales$loteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the lotes
     */
    select?: lotesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the lotes
     */
    omit?: lotesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: lotesInclude<ExtArgs> | null
    where?: lotesWhereInput
  }

  /**
   * animales.eventos_sanitarios
   */
  export type animales$eventos_sanitariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    where?: evento_sanitarioWhereInput
    orderBy?: evento_sanitarioOrderByWithRelationInput | evento_sanitarioOrderByWithRelationInput[]
    cursor?: evento_sanitarioWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_sanitarioScalarFieldEnum | Evento_sanitarioScalarFieldEnum[]
  }

  /**
   * animales.alimentaciones
   */
  export type animales$alimentacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    where?: alimentacionWhereInput
    orderBy?: alimentacionOrderByWithRelationInput | alimentacionOrderByWithRelationInput[]
    cursor?: alimentacionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlimentacionScalarFieldEnum | AlimentacionScalarFieldEnum[]
  }

  /**
   * animales.pesajes
   */
  export type animales$pesajesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    where?: pesajesWhereInput
    orderBy?: pesajesOrderByWithRelationInput | pesajesOrderByWithRelationInput[]
    cursor?: pesajesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PesajesScalarFieldEnum | PesajesScalarFieldEnum[]
  }

  /**
   * animales.producciones_carne
   */
  export type animales$producciones_carneArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
    where?: produccion_carneWhereInput
    orderBy?: produccion_carneOrderByWithRelationInput | produccion_carneOrderByWithRelationInput[]
    cursor?: produccion_carneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Produccion_carneScalarFieldEnum | Produccion_carneScalarFieldEnum[]
  }

  /**
   * animales.producciones_leche
   */
  export type animales$producciones_lecheArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    where?: produccion_lecheraWhereInput
    orderBy?: produccion_lecheraOrderByWithRelationInput | produccion_lecheraOrderByWithRelationInput[]
    cursor?: produccion_lecheraWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Produccion_lecheraScalarFieldEnum | Produccion_lecheraScalarFieldEnum[]
  }

  /**
   * animales.montas_hembra
   */
  export type animales$montas_hembraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    where?: evento_montaWhereInput
    orderBy?: evento_montaOrderByWithRelationInput | evento_montaOrderByWithRelationInput[]
    cursor?: evento_montaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_montaScalarFieldEnum | Evento_montaScalarFieldEnum[]
  }

  /**
   * animales.montas_macho
   */
  export type animales$montas_machoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    where?: evento_montaWhereInput
    orderBy?: evento_montaOrderByWithRelationInput | evento_montaOrderByWithRelationInput[]
    cursor?: evento_montaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_montaScalarFieldEnum | Evento_montaScalarFieldEnum[]
  }

  /**
   * animales.partos
   */
  export type animales$partosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    where?: evento_partoWhereInput
    orderBy?: evento_partoOrderByWithRelationInput | evento_partoOrderByWithRelationInput[]
    cursor?: evento_partoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_partoScalarFieldEnum | Evento_partoScalarFieldEnum[]
  }

  /**
   * animales without action
   */
  export type animalesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the animales
     */
    select?: animalesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the animales
     */
    omit?: animalesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: animalesInclude<ExtArgs> | null
  }


  /**
   * Model proveedores
   */

  export type AggregateProveedores = {
    _count: ProveedoresCountAggregateOutputType | null
    _avg: ProveedoresAvgAggregateOutputType | null
    _sum: ProveedoresSumAggregateOutputType | null
    _min: ProveedoresMinAggregateOutputType | null
    _max: ProveedoresMaxAggregateOutputType | null
  }

  export type ProveedoresAvgAggregateOutputType = {
    proveedor_id: number | null
  }

  export type ProveedoresSumAggregateOutputType = {
    proveedor_id: number | null
  }

  export type ProveedoresMinAggregateOutputType = {
    proveedor_id: number | null
    nombre_compañia: string | null
    nombre_contacto: string | null
    telefono: string | null
    deleted_at: Date | null
  }

  export type ProveedoresMaxAggregateOutputType = {
    proveedor_id: number | null
    nombre_compañia: string | null
    nombre_contacto: string | null
    telefono: string | null
    deleted_at: Date | null
  }

  export type ProveedoresCountAggregateOutputType = {
    proveedor_id: number
    nombre_compañia: number
    nombre_contacto: number
    telefono: number
    deleted_at: number
    _all: number
  }


  export type ProveedoresAvgAggregateInputType = {
    proveedor_id?: true
  }

  export type ProveedoresSumAggregateInputType = {
    proveedor_id?: true
  }

  export type ProveedoresMinAggregateInputType = {
    proveedor_id?: true
    nombre_compañia?: true
    nombre_contacto?: true
    telefono?: true
    deleted_at?: true
  }

  export type ProveedoresMaxAggregateInputType = {
    proveedor_id?: true
    nombre_compañia?: true
    nombre_contacto?: true
    telefono?: true
    deleted_at?: true
  }

  export type ProveedoresCountAggregateInputType = {
    proveedor_id?: true
    nombre_compañia?: true
    nombre_contacto?: true
    telefono?: true
    deleted_at?: true
    _all?: true
  }

  export type ProveedoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proveedores to aggregate.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned proveedores
    **/
    _count?: true | ProveedoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProveedoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProveedoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProveedoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProveedoresMaxAggregateInputType
  }

  export type GetProveedoresAggregateType<T extends ProveedoresAggregateArgs> = {
        [P in keyof T & keyof AggregateProveedores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProveedores[P]>
      : GetScalarType<T[P], AggregateProveedores[P]>
  }




  export type proveedoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: proveedoresWhereInput
    orderBy?: proveedoresOrderByWithAggregationInput | proveedoresOrderByWithAggregationInput[]
    by: ProveedoresScalarFieldEnum[] | ProveedoresScalarFieldEnum
    having?: proveedoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProveedoresCountAggregateInputType | true
    _avg?: ProveedoresAvgAggregateInputType
    _sum?: ProveedoresSumAggregateInputType
    _min?: ProveedoresMinAggregateInputType
    _max?: ProveedoresMaxAggregateInputType
  }

  export type ProveedoresGroupByOutputType = {
    proveedor_id: number
    nombre_compañia: string
    nombre_contacto: string | null
    telefono: string | null
    deleted_at: Date | null
    _count: ProveedoresCountAggregateOutputType | null
    _avg: ProveedoresAvgAggregateOutputType | null
    _sum: ProveedoresSumAggregateOutputType | null
    _min: ProveedoresMinAggregateOutputType | null
    _max: ProveedoresMaxAggregateOutputType | null
  }

  type GetProveedoresGroupByPayload<T extends proveedoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProveedoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProveedoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProveedoresGroupByOutputType[P]>
            : GetScalarType<T[P], ProveedoresGroupByOutputType[P]>
        }
      >
    >


  export type proveedoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    proveedor_id?: boolean
    nombre_compañia?: boolean
    nombre_contacto?: boolean
    telefono?: boolean
    deleted_at?: boolean
    compras?: boolean | proveedores$comprasArgs<ExtArgs>
    _count?: boolean | ProveedoresCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["proveedores"]>

  export type proveedoresSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    proveedor_id?: boolean
    nombre_compañia?: boolean
    nombre_contacto?: boolean
    telefono?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["proveedores"]>

  export type proveedoresSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    proveedor_id?: boolean
    nombre_compañia?: boolean
    nombre_contacto?: boolean
    telefono?: boolean
    deleted_at?: boolean
  }, ExtArgs["result"]["proveedores"]>

  export type proveedoresSelectScalar = {
    proveedor_id?: boolean
    nombre_compañia?: boolean
    nombre_contacto?: boolean
    telefono?: boolean
    deleted_at?: boolean
  }

  export type proveedoresOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"proveedor_id" | "nombre_compañia" | "nombre_contacto" | "telefono" | "deleted_at", ExtArgs["result"]["proveedores"]>
  export type proveedoresInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compras?: boolean | proveedores$comprasArgs<ExtArgs>
    _count?: boolean | ProveedoresCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type proveedoresIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type proveedoresIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $proveedoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "proveedores"
    objects: {
      compras: Prisma.$comprasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      proveedor_id: number
      nombre_compañia: string
      nombre_contacto: string | null
      telefono: string | null
      deleted_at: Date | null
    }, ExtArgs["result"]["proveedores"]>
    composites: {}
  }

  type proveedoresGetPayload<S extends boolean | null | undefined | proveedoresDefaultArgs> = $Result.GetResult<Prisma.$proveedoresPayload, S>

  type proveedoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<proveedoresFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProveedoresCountAggregateInputType | true
    }

  export interface proveedoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['proveedores'], meta: { name: 'proveedores' } }
    /**
     * Find zero or one Proveedores that matches the filter.
     * @param {proveedoresFindUniqueArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends proveedoresFindUniqueArgs>(args: SelectSubset<T, proveedoresFindUniqueArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Proveedores that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {proveedoresFindUniqueOrThrowArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends proveedoresFindUniqueOrThrowArgs>(args: SelectSubset<T, proveedoresFindUniqueOrThrowArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proveedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindFirstArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends proveedoresFindFirstArgs>(args?: SelectSubset<T, proveedoresFindFirstArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Proveedores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindFirstOrThrowArgs} args - Arguments to find a Proveedores
     * @example
     * // Get one Proveedores
     * const proveedores = await prisma.proveedores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends proveedoresFindFirstOrThrowArgs>(args?: SelectSubset<T, proveedoresFindFirstOrThrowArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Proveedores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Proveedores
     * const proveedores = await prisma.proveedores.findMany()
     * 
     * // Get first 10 Proveedores
     * const proveedores = await prisma.proveedores.findMany({ take: 10 })
     * 
     * // Only select the `proveedor_id`
     * const proveedoresWithProveedor_idOnly = await prisma.proveedores.findMany({ select: { proveedor_id: true } })
     * 
     */
    findMany<T extends proveedoresFindManyArgs>(args?: SelectSubset<T, proveedoresFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Proveedores.
     * @param {proveedoresCreateArgs} args - Arguments to create a Proveedores.
     * @example
     * // Create one Proveedores
     * const Proveedores = await prisma.proveedores.create({
     *   data: {
     *     // ... data to create a Proveedores
     *   }
     * })
     * 
     */
    create<T extends proveedoresCreateArgs>(args: SelectSubset<T, proveedoresCreateArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Proveedores.
     * @param {proveedoresCreateManyArgs} args - Arguments to create many Proveedores.
     * @example
     * // Create many Proveedores
     * const proveedores = await prisma.proveedores.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends proveedoresCreateManyArgs>(args?: SelectSubset<T, proveedoresCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Proveedores and returns the data saved in the database.
     * @param {proveedoresCreateManyAndReturnArgs} args - Arguments to create many Proveedores.
     * @example
     * // Create many Proveedores
     * const proveedores = await prisma.proveedores.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Proveedores and only return the `proveedor_id`
     * const proveedoresWithProveedor_idOnly = await prisma.proveedores.createManyAndReturn({
     *   select: { proveedor_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends proveedoresCreateManyAndReturnArgs>(args?: SelectSubset<T, proveedoresCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Proveedores.
     * @param {proveedoresDeleteArgs} args - Arguments to delete one Proveedores.
     * @example
     * // Delete one Proveedores
     * const Proveedores = await prisma.proveedores.delete({
     *   where: {
     *     // ... filter to delete one Proveedores
     *   }
     * })
     * 
     */
    delete<T extends proveedoresDeleteArgs>(args: SelectSubset<T, proveedoresDeleteArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Proveedores.
     * @param {proveedoresUpdateArgs} args - Arguments to update one Proveedores.
     * @example
     * // Update one Proveedores
     * const proveedores = await prisma.proveedores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends proveedoresUpdateArgs>(args: SelectSubset<T, proveedoresUpdateArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Proveedores.
     * @param {proveedoresDeleteManyArgs} args - Arguments to filter Proveedores to delete.
     * @example
     * // Delete a few Proveedores
     * const { count } = await prisma.proveedores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends proveedoresDeleteManyArgs>(args?: SelectSubset<T, proveedoresDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Proveedores
     * const proveedores = await prisma.proveedores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends proveedoresUpdateManyArgs>(args: SelectSubset<T, proveedoresUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Proveedores and returns the data updated in the database.
     * @param {proveedoresUpdateManyAndReturnArgs} args - Arguments to update many Proveedores.
     * @example
     * // Update many Proveedores
     * const proveedores = await prisma.proveedores.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Proveedores and only return the `proveedor_id`
     * const proveedoresWithProveedor_idOnly = await prisma.proveedores.updateManyAndReturn({
     *   select: { proveedor_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends proveedoresUpdateManyAndReturnArgs>(args: SelectSubset<T, proveedoresUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Proveedores.
     * @param {proveedoresUpsertArgs} args - Arguments to update or create a Proveedores.
     * @example
     * // Update or create a Proveedores
     * const proveedores = await prisma.proveedores.upsert({
     *   create: {
     *     // ... data to create a Proveedores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Proveedores we want to update
     *   }
     * })
     */
    upsert<T extends proveedoresUpsertArgs>(args: SelectSubset<T, proveedoresUpsertArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresCountArgs} args - Arguments to filter Proveedores to count.
     * @example
     * // Count the number of Proveedores
     * const count = await prisma.proveedores.count({
     *   where: {
     *     // ... the filter for the Proveedores we want to count
     *   }
     * })
    **/
    count<T extends proveedoresCountArgs>(
      args?: Subset<T, proveedoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProveedoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProveedoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProveedoresAggregateArgs>(args: Subset<T, ProveedoresAggregateArgs>): Prisma.PrismaPromise<GetProveedoresAggregateType<T>>

    /**
     * Group by Proveedores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {proveedoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends proveedoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: proveedoresGroupByArgs['orderBy'] }
        : { orderBy?: proveedoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, proveedoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProveedoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the proveedores model
   */
  readonly fields: proveedoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for proveedores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__proveedoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    compras<T extends proveedores$comprasArgs<ExtArgs> = {}>(args?: Subset<T, proveedores$comprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the proveedores model
   */
  interface proveedoresFieldRefs {
    readonly proveedor_id: FieldRef<"proveedores", 'Int'>
    readonly nombre_compañia: FieldRef<"proveedores", 'String'>
    readonly nombre_contacto: FieldRef<"proveedores", 'String'>
    readonly telefono: FieldRef<"proveedores", 'String'>
    readonly deleted_at: FieldRef<"proveedores", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * proveedores findUnique
   */
  export type proveedoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores findUniqueOrThrow
   */
  export type proveedoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores findFirst
   */
  export type proveedoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proveedores.
     */
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores findFirstOrThrow
   */
  export type proveedoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of proveedores.
     */
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores findMany
   */
  export type proveedoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter, which proveedores to fetch.
     */
    where?: proveedoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of proveedores to fetch.
     */
    orderBy?: proveedoresOrderByWithRelationInput | proveedoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing proveedores.
     */
    cursor?: proveedoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` proveedores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` proveedores.
     */
    skip?: number
    distinct?: ProveedoresScalarFieldEnum | ProveedoresScalarFieldEnum[]
  }

  /**
   * proveedores create
   */
  export type proveedoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * The data needed to create a proveedores.
     */
    data: XOR<proveedoresCreateInput, proveedoresUncheckedCreateInput>
  }

  /**
   * proveedores createMany
   */
  export type proveedoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many proveedores.
     */
    data: proveedoresCreateManyInput | proveedoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proveedores createManyAndReturn
   */
  export type proveedoresCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * The data used to create many proveedores.
     */
    data: proveedoresCreateManyInput | proveedoresCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * proveedores update
   */
  export type proveedoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * The data needed to update a proveedores.
     */
    data: XOR<proveedoresUpdateInput, proveedoresUncheckedUpdateInput>
    /**
     * Choose, which proveedores to update.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores updateMany
   */
  export type proveedoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update proveedores.
     */
    data: XOR<proveedoresUpdateManyMutationInput, proveedoresUncheckedUpdateManyInput>
    /**
     * Filter which proveedores to update
     */
    where?: proveedoresWhereInput
    /**
     * Limit how many proveedores to update.
     */
    limit?: number
  }

  /**
   * proveedores updateManyAndReturn
   */
  export type proveedoresUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * The data used to update proveedores.
     */
    data: XOR<proveedoresUpdateManyMutationInput, proveedoresUncheckedUpdateManyInput>
    /**
     * Filter which proveedores to update
     */
    where?: proveedoresWhereInput
    /**
     * Limit how many proveedores to update.
     */
    limit?: number
  }

  /**
   * proveedores upsert
   */
  export type proveedoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * The filter to search for the proveedores to update in case it exists.
     */
    where: proveedoresWhereUniqueInput
    /**
     * In case the proveedores found by the `where` argument doesn't exist, create a new proveedores with this data.
     */
    create: XOR<proveedoresCreateInput, proveedoresUncheckedCreateInput>
    /**
     * In case the proveedores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<proveedoresUpdateInput, proveedoresUncheckedUpdateInput>
  }

  /**
   * proveedores delete
   */
  export type proveedoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
    /**
     * Filter which proveedores to delete.
     */
    where: proveedoresWhereUniqueInput
  }

  /**
   * proveedores deleteMany
   */
  export type proveedoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which proveedores to delete
     */
    where?: proveedoresWhereInput
    /**
     * Limit how many proveedores to delete.
     */
    limit?: number
  }

  /**
   * proveedores.compras
   */
  export type proveedores$comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
    where?: comprasWhereInput
    orderBy?: comprasOrderByWithRelationInput | comprasOrderByWithRelationInput[]
    cursor?: comprasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ComprasScalarFieldEnum | ComprasScalarFieldEnum[]
  }

  /**
   * proveedores without action
   */
  export type proveedoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the proveedores
     */
    select?: proveedoresSelect<ExtArgs> | null
    /**
     * Omit specific fields from the proveedores
     */
    omit?: proveedoresOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: proveedoresInclude<ExtArgs> | null
  }


  /**
   * Model compras
   */

  export type AggregateCompras = {
    _count: ComprasCountAggregateOutputType | null
    _avg: ComprasAvgAggregateOutputType | null
    _sum: ComprasSumAggregateOutputType | null
    _min: ComprasMinAggregateOutputType | null
    _max: ComprasMaxAggregateOutputType | null
  }

  export type ComprasAvgAggregateOutputType = {
    compra_id: number | null
    usuario_contable_id: number | null
    proveedor_id: number | null
  }

  export type ComprasSumAggregateOutputType = {
    compra_id: number | null
    usuario_contable_id: number | null
    proveedor_id: number | null
  }

  export type ComprasMinAggregateOutputType = {
    compra_id: number | null
    usuario_contable_id: number | null
    proveedor_id: number | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type ComprasMaxAggregateOutputType = {
    compra_id: number | null
    usuario_contable_id: number | null
    proveedor_id: number | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type ComprasCountAggregateOutputType = {
    compra_id: number
    usuario_contable_id: number
    proveedor_id: number
    fecha: number
    deleted_at: number
    _all: number
  }


  export type ComprasAvgAggregateInputType = {
    compra_id?: true
    usuario_contable_id?: true
    proveedor_id?: true
  }

  export type ComprasSumAggregateInputType = {
    compra_id?: true
    usuario_contable_id?: true
    proveedor_id?: true
  }

  export type ComprasMinAggregateInputType = {
    compra_id?: true
    usuario_contable_id?: true
    proveedor_id?: true
    fecha?: true
    deleted_at?: true
  }

  export type ComprasMaxAggregateInputType = {
    compra_id?: true
    usuario_contable_id?: true
    proveedor_id?: true
    fecha?: true
    deleted_at?: true
  }

  export type ComprasCountAggregateInputType = {
    compra_id?: true
    usuario_contable_id?: true
    proveedor_id?: true
    fecha?: true
    deleted_at?: true
    _all?: true
  }

  export type ComprasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which compras to aggregate.
     */
    where?: comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: comprasOrderByWithRelationInput | comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned compras
    **/
    _count?: true | ComprasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ComprasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ComprasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ComprasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ComprasMaxAggregateInputType
  }

  export type GetComprasAggregateType<T extends ComprasAggregateArgs> = {
        [P in keyof T & keyof AggregateCompras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompras[P]>
      : GetScalarType<T[P], AggregateCompras[P]>
  }




  export type comprasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: comprasWhereInput
    orderBy?: comprasOrderByWithAggregationInput | comprasOrderByWithAggregationInput[]
    by: ComprasScalarFieldEnum[] | ComprasScalarFieldEnum
    having?: comprasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ComprasCountAggregateInputType | true
    _avg?: ComprasAvgAggregateInputType
    _sum?: ComprasSumAggregateInputType
    _min?: ComprasMinAggregateInputType
    _max?: ComprasMaxAggregateInputType
  }

  export type ComprasGroupByOutputType = {
    compra_id: number
    usuario_contable_id: number
    proveedor_id: number
    fecha: Date
    deleted_at: Date | null
    _count: ComprasCountAggregateOutputType | null
    _avg: ComprasAvgAggregateOutputType | null
    _sum: ComprasSumAggregateOutputType | null
    _min: ComprasMinAggregateOutputType | null
    _max: ComprasMaxAggregateOutputType | null
  }

  type GetComprasGroupByPayload<T extends comprasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ComprasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ComprasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ComprasGroupByOutputType[P]>
            : GetScalarType<T[P], ComprasGroupByOutputType[P]>
        }
      >
    >


  export type comprasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    compra_id?: boolean
    usuario_contable_id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
    usuario_contable?: boolean | usuariosDefaultArgs<ExtArgs>
    proveedor?: boolean | proveedoresDefaultArgs<ExtArgs>
    detalle_compras?: boolean | compras$detalle_comprasArgs<ExtArgs>
    _count?: boolean | ComprasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compras"]>

  export type comprasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    compra_id?: boolean
    usuario_contable_id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
    usuario_contable?: boolean | usuariosDefaultArgs<ExtArgs>
    proveedor?: boolean | proveedoresDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compras"]>

  export type comprasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    compra_id?: boolean
    usuario_contable_id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
    usuario_contable?: boolean | usuariosDefaultArgs<ExtArgs>
    proveedor?: boolean | proveedoresDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["compras"]>

  export type comprasSelectScalar = {
    compra_id?: boolean
    usuario_contable_id?: boolean
    proveedor_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
  }

  export type comprasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"compra_id" | "usuario_contable_id" | "proveedor_id" | "fecha" | "deleted_at", ExtArgs["result"]["compras"]>
  export type comprasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario_contable?: boolean | usuariosDefaultArgs<ExtArgs>
    proveedor?: boolean | proveedoresDefaultArgs<ExtArgs>
    detalle_compras?: boolean | compras$detalle_comprasArgs<ExtArgs>
    _count?: boolean | ComprasCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type comprasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario_contable?: boolean | usuariosDefaultArgs<ExtArgs>
    proveedor?: boolean | proveedoresDefaultArgs<ExtArgs>
  }
  export type comprasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario_contable?: boolean | usuariosDefaultArgs<ExtArgs>
    proveedor?: boolean | proveedoresDefaultArgs<ExtArgs>
  }

  export type $comprasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "compras"
    objects: {
      usuario_contable: Prisma.$usuariosPayload<ExtArgs>
      proveedor: Prisma.$proveedoresPayload<ExtArgs>
      detalle_compras: Prisma.$detalle_comprasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      compra_id: number
      usuario_contable_id: number
      proveedor_id: number
      fecha: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["compras"]>
    composites: {}
  }

  type comprasGetPayload<S extends boolean | null | undefined | comprasDefaultArgs> = $Result.GetResult<Prisma.$comprasPayload, S>

  type comprasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<comprasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ComprasCountAggregateInputType | true
    }

  export interface comprasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['compras'], meta: { name: 'compras' } }
    /**
     * Find zero or one Compras that matches the filter.
     * @param {comprasFindUniqueArgs} args - Arguments to find a Compras
     * @example
     * // Get one Compras
     * const compras = await prisma.compras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends comprasFindUniqueArgs>(args: SelectSubset<T, comprasFindUniqueArgs<ExtArgs>>): Prisma__comprasClient<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Compras that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {comprasFindUniqueOrThrowArgs} args - Arguments to find a Compras
     * @example
     * // Get one Compras
     * const compras = await prisma.compras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends comprasFindUniqueOrThrowArgs>(args: SelectSubset<T, comprasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__comprasClient<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comprasFindFirstArgs} args - Arguments to find a Compras
     * @example
     * // Get one Compras
     * const compras = await prisma.compras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends comprasFindFirstArgs>(args?: SelectSubset<T, comprasFindFirstArgs<ExtArgs>>): Prisma__comprasClient<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Compras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comprasFindFirstOrThrowArgs} args - Arguments to find a Compras
     * @example
     * // Get one Compras
     * const compras = await prisma.compras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends comprasFindFirstOrThrowArgs>(args?: SelectSubset<T, comprasFindFirstOrThrowArgs<ExtArgs>>): Prisma__comprasClient<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comprasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Compras
     * const compras = await prisma.compras.findMany()
     * 
     * // Get first 10 Compras
     * const compras = await prisma.compras.findMany({ take: 10 })
     * 
     * // Only select the `compra_id`
     * const comprasWithCompra_idOnly = await prisma.compras.findMany({ select: { compra_id: true } })
     * 
     */
    findMany<T extends comprasFindManyArgs>(args?: SelectSubset<T, comprasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Compras.
     * @param {comprasCreateArgs} args - Arguments to create a Compras.
     * @example
     * // Create one Compras
     * const Compras = await prisma.compras.create({
     *   data: {
     *     // ... data to create a Compras
     *   }
     * })
     * 
     */
    create<T extends comprasCreateArgs>(args: SelectSubset<T, comprasCreateArgs<ExtArgs>>): Prisma__comprasClient<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Compras.
     * @param {comprasCreateManyArgs} args - Arguments to create many Compras.
     * @example
     * // Create many Compras
     * const compras = await prisma.compras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends comprasCreateManyArgs>(args?: SelectSubset<T, comprasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Compras and returns the data saved in the database.
     * @param {comprasCreateManyAndReturnArgs} args - Arguments to create many Compras.
     * @example
     * // Create many Compras
     * const compras = await prisma.compras.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Compras and only return the `compra_id`
     * const comprasWithCompra_idOnly = await prisma.compras.createManyAndReturn({
     *   select: { compra_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends comprasCreateManyAndReturnArgs>(args?: SelectSubset<T, comprasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Compras.
     * @param {comprasDeleteArgs} args - Arguments to delete one Compras.
     * @example
     * // Delete one Compras
     * const Compras = await prisma.compras.delete({
     *   where: {
     *     // ... filter to delete one Compras
     *   }
     * })
     * 
     */
    delete<T extends comprasDeleteArgs>(args: SelectSubset<T, comprasDeleteArgs<ExtArgs>>): Prisma__comprasClient<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Compras.
     * @param {comprasUpdateArgs} args - Arguments to update one Compras.
     * @example
     * // Update one Compras
     * const compras = await prisma.compras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends comprasUpdateArgs>(args: SelectSubset<T, comprasUpdateArgs<ExtArgs>>): Prisma__comprasClient<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Compras.
     * @param {comprasDeleteManyArgs} args - Arguments to filter Compras to delete.
     * @example
     * // Delete a few Compras
     * const { count } = await prisma.compras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends comprasDeleteManyArgs>(args?: SelectSubset<T, comprasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comprasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Compras
     * const compras = await prisma.compras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends comprasUpdateManyArgs>(args: SelectSubset<T, comprasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Compras and returns the data updated in the database.
     * @param {comprasUpdateManyAndReturnArgs} args - Arguments to update many Compras.
     * @example
     * // Update many Compras
     * const compras = await prisma.compras.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Compras and only return the `compra_id`
     * const comprasWithCompra_idOnly = await prisma.compras.updateManyAndReturn({
     *   select: { compra_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends comprasUpdateManyAndReturnArgs>(args: SelectSubset<T, comprasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Compras.
     * @param {comprasUpsertArgs} args - Arguments to update or create a Compras.
     * @example
     * // Update or create a Compras
     * const compras = await prisma.compras.upsert({
     *   create: {
     *     // ... data to create a Compras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Compras we want to update
     *   }
     * })
     */
    upsert<T extends comprasUpsertArgs>(args: SelectSubset<T, comprasUpsertArgs<ExtArgs>>): Prisma__comprasClient<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comprasCountArgs} args - Arguments to filter Compras to count.
     * @example
     * // Count the number of Compras
     * const count = await prisma.compras.count({
     *   where: {
     *     // ... the filter for the Compras we want to count
     *   }
     * })
    **/
    count<T extends comprasCountArgs>(
      args?: Subset<T, comprasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ComprasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ComprasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ComprasAggregateArgs>(args: Subset<T, ComprasAggregateArgs>): Prisma.PrismaPromise<GetComprasAggregateType<T>>

    /**
     * Group by Compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {comprasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends comprasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: comprasGroupByArgs['orderBy'] }
        : { orderBy?: comprasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, comprasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetComprasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the compras model
   */
  readonly fields: comprasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for compras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__comprasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario_contable<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    proveedor<T extends proveedoresDefaultArgs<ExtArgs> = {}>(args?: Subset<T, proveedoresDefaultArgs<ExtArgs>>): Prisma__proveedoresClient<$Result.GetResult<Prisma.$proveedoresPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    detalle_compras<T extends compras$detalle_comprasArgs<ExtArgs> = {}>(args?: Subset<T, compras$detalle_comprasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the compras model
   */
  interface comprasFieldRefs {
    readonly compra_id: FieldRef<"compras", 'Int'>
    readonly usuario_contable_id: FieldRef<"compras", 'Int'>
    readonly proveedor_id: FieldRef<"compras", 'Int'>
    readonly fecha: FieldRef<"compras", 'DateTime'>
    readonly deleted_at: FieldRef<"compras", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * compras findUnique
   */
  export type comprasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
    /**
     * Filter, which compras to fetch.
     */
    where: comprasWhereUniqueInput
  }

  /**
   * compras findUniqueOrThrow
   */
  export type comprasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
    /**
     * Filter, which compras to fetch.
     */
    where: comprasWhereUniqueInput
  }

  /**
   * compras findFirst
   */
  export type comprasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
    /**
     * Filter, which compras to fetch.
     */
    where?: comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: comprasOrderByWithRelationInput | comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for compras.
     */
    cursor?: comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of compras.
     */
    distinct?: ComprasScalarFieldEnum | ComprasScalarFieldEnum[]
  }

  /**
   * compras findFirstOrThrow
   */
  export type comprasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
    /**
     * Filter, which compras to fetch.
     */
    where?: comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: comprasOrderByWithRelationInput | comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for compras.
     */
    cursor?: comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of compras.
     */
    distinct?: ComprasScalarFieldEnum | ComprasScalarFieldEnum[]
  }

  /**
   * compras findMany
   */
  export type comprasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
    /**
     * Filter, which compras to fetch.
     */
    where?: comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of compras to fetch.
     */
    orderBy?: comprasOrderByWithRelationInput | comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing compras.
     */
    cursor?: comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` compras.
     */
    skip?: number
    distinct?: ComprasScalarFieldEnum | ComprasScalarFieldEnum[]
  }

  /**
   * compras create
   */
  export type comprasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
    /**
     * The data needed to create a compras.
     */
    data: XOR<comprasCreateInput, comprasUncheckedCreateInput>
  }

  /**
   * compras createMany
   */
  export type comprasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many compras.
     */
    data: comprasCreateManyInput | comprasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * compras createManyAndReturn
   */
  export type comprasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * The data used to create many compras.
     */
    data: comprasCreateManyInput | comprasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * compras update
   */
  export type comprasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
    /**
     * The data needed to update a compras.
     */
    data: XOR<comprasUpdateInput, comprasUncheckedUpdateInput>
    /**
     * Choose, which compras to update.
     */
    where: comprasWhereUniqueInput
  }

  /**
   * compras updateMany
   */
  export type comprasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update compras.
     */
    data: XOR<comprasUpdateManyMutationInput, comprasUncheckedUpdateManyInput>
    /**
     * Filter which compras to update
     */
    where?: comprasWhereInput
    /**
     * Limit how many compras to update.
     */
    limit?: number
  }

  /**
   * compras updateManyAndReturn
   */
  export type comprasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * The data used to update compras.
     */
    data: XOR<comprasUpdateManyMutationInput, comprasUncheckedUpdateManyInput>
    /**
     * Filter which compras to update
     */
    where?: comprasWhereInput
    /**
     * Limit how many compras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * compras upsert
   */
  export type comprasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
    /**
     * The filter to search for the compras to update in case it exists.
     */
    where: comprasWhereUniqueInput
    /**
     * In case the compras found by the `where` argument doesn't exist, create a new compras with this data.
     */
    create: XOR<comprasCreateInput, comprasUncheckedCreateInput>
    /**
     * In case the compras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<comprasUpdateInput, comprasUncheckedUpdateInput>
  }

  /**
   * compras delete
   */
  export type comprasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
    /**
     * Filter which compras to delete.
     */
    where: comprasWhereUniqueInput
  }

  /**
   * compras deleteMany
   */
  export type comprasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which compras to delete
     */
    where?: comprasWhereInput
    /**
     * Limit how many compras to delete.
     */
    limit?: number
  }

  /**
   * compras.detalle_compras
   */
  export type compras$detalle_comprasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
    where?: detalle_comprasWhereInput
    orderBy?: detalle_comprasOrderByWithRelationInput | detalle_comprasOrderByWithRelationInput[]
    cursor?: detalle_comprasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Detalle_comprasScalarFieldEnum | Detalle_comprasScalarFieldEnum[]
  }

  /**
   * compras without action
   */
  export type comprasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the compras
     */
    select?: comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the compras
     */
    omit?: comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: comprasInclude<ExtArgs> | null
  }


  /**
   * Model detalle_compras
   */

  export type AggregateDetalle_compras = {
    _count: Detalle_comprasCountAggregateOutputType | null
    _avg: Detalle_comprasAvgAggregateOutputType | null
    _sum: Detalle_comprasSumAggregateOutputType | null
    _min: Detalle_comprasMinAggregateOutputType | null
    _max: Detalle_comprasMaxAggregateOutputType | null
  }

  export type Detalle_comprasAvgAggregateOutputType = {
    detalle_id: number | null
    compra_id: number | null
    insumo_id: number | null
    precio: Decimal | null
    cantidad: number | null
  }

  export type Detalle_comprasSumAggregateOutputType = {
    detalle_id: number | null
    compra_id: number | null
    insumo_id: number | null
    precio: Decimal | null
    cantidad: number | null
  }

  export type Detalle_comprasMinAggregateOutputType = {
    detalle_id: number | null
    compra_id: number | null
    insumo_id: number | null
    precio: Decimal | null
    cantidad: number | null
    deleted_at: Date | null
  }

  export type Detalle_comprasMaxAggregateOutputType = {
    detalle_id: number | null
    compra_id: number | null
    insumo_id: number | null
    precio: Decimal | null
    cantidad: number | null
    deleted_at: Date | null
  }

  export type Detalle_comprasCountAggregateOutputType = {
    detalle_id: number
    compra_id: number
    insumo_id: number
    precio: number
    cantidad: number
    deleted_at: number
    _all: number
  }


  export type Detalle_comprasAvgAggregateInputType = {
    detalle_id?: true
    compra_id?: true
    insumo_id?: true
    precio?: true
    cantidad?: true
  }

  export type Detalle_comprasSumAggregateInputType = {
    detalle_id?: true
    compra_id?: true
    insumo_id?: true
    precio?: true
    cantidad?: true
  }

  export type Detalle_comprasMinAggregateInputType = {
    detalle_id?: true
    compra_id?: true
    insumo_id?: true
    precio?: true
    cantidad?: true
    deleted_at?: true
  }

  export type Detalle_comprasMaxAggregateInputType = {
    detalle_id?: true
    compra_id?: true
    insumo_id?: true
    precio?: true
    cantidad?: true
    deleted_at?: true
  }

  export type Detalle_comprasCountAggregateInputType = {
    detalle_id?: true
    compra_id?: true
    insumo_id?: true
    precio?: true
    cantidad?: true
    deleted_at?: true
    _all?: true
  }

  export type Detalle_comprasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_compras to aggregate.
     */
    where?: detalle_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_compras to fetch.
     */
    orderBy?: detalle_comprasOrderByWithRelationInput | detalle_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: detalle_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned detalle_compras
    **/
    _count?: true | Detalle_comprasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Detalle_comprasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Detalle_comprasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Detalle_comprasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Detalle_comprasMaxAggregateInputType
  }

  export type GetDetalle_comprasAggregateType<T extends Detalle_comprasAggregateArgs> = {
        [P in keyof T & keyof AggregateDetalle_compras]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDetalle_compras[P]>
      : GetScalarType<T[P], AggregateDetalle_compras[P]>
  }




  export type detalle_comprasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: detalle_comprasWhereInput
    orderBy?: detalle_comprasOrderByWithAggregationInput | detalle_comprasOrderByWithAggregationInput[]
    by: Detalle_comprasScalarFieldEnum[] | Detalle_comprasScalarFieldEnum
    having?: detalle_comprasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Detalle_comprasCountAggregateInputType | true
    _avg?: Detalle_comprasAvgAggregateInputType
    _sum?: Detalle_comprasSumAggregateInputType
    _min?: Detalle_comprasMinAggregateInputType
    _max?: Detalle_comprasMaxAggregateInputType
  }

  export type Detalle_comprasGroupByOutputType = {
    detalle_id: number
    compra_id: number
    insumo_id: number
    precio: Decimal
    cantidad: number
    deleted_at: Date | null
    _count: Detalle_comprasCountAggregateOutputType | null
    _avg: Detalle_comprasAvgAggregateOutputType | null
    _sum: Detalle_comprasSumAggregateOutputType | null
    _min: Detalle_comprasMinAggregateOutputType | null
    _max: Detalle_comprasMaxAggregateOutputType | null
  }

  type GetDetalle_comprasGroupByPayload<T extends detalle_comprasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Detalle_comprasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Detalle_comprasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Detalle_comprasGroupByOutputType[P]>
            : GetScalarType<T[P], Detalle_comprasGroupByOutputType[P]>
        }
      >
    >


  export type detalle_comprasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    detalle_id?: boolean
    compra_id?: boolean
    insumo_id?: boolean
    precio?: boolean
    cantidad?: boolean
    deleted_at?: boolean
    compra?: boolean | comprasDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_compras"]>

  export type detalle_comprasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    detalle_id?: boolean
    compra_id?: boolean
    insumo_id?: boolean
    precio?: boolean
    cantidad?: boolean
    deleted_at?: boolean
    compra?: boolean | comprasDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_compras"]>

  export type detalle_comprasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    detalle_id?: boolean
    compra_id?: boolean
    insumo_id?: boolean
    precio?: boolean
    cantidad?: boolean
    deleted_at?: boolean
    compra?: boolean | comprasDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["detalle_compras"]>

  export type detalle_comprasSelectScalar = {
    detalle_id?: boolean
    compra_id?: boolean
    insumo_id?: boolean
    precio?: boolean
    cantidad?: boolean
    deleted_at?: boolean
  }

  export type detalle_comprasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"detalle_id" | "compra_id" | "insumo_id" | "precio" | "cantidad" | "deleted_at", ExtArgs["result"]["detalle_compras"]>
  export type detalle_comprasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | comprasDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }
  export type detalle_comprasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | comprasDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }
  export type detalle_comprasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    compra?: boolean | comprasDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }

  export type $detalle_comprasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "detalle_compras"
    objects: {
      compra: Prisma.$comprasPayload<ExtArgs>
      insumo: Prisma.$insumosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      detalle_id: number
      compra_id: number
      insumo_id: number
      precio: Prisma.Decimal
      cantidad: number
      deleted_at: Date | null
    }, ExtArgs["result"]["detalle_compras"]>
    composites: {}
  }

  type detalle_comprasGetPayload<S extends boolean | null | undefined | detalle_comprasDefaultArgs> = $Result.GetResult<Prisma.$detalle_comprasPayload, S>

  type detalle_comprasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<detalle_comprasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Detalle_comprasCountAggregateInputType | true
    }

  export interface detalle_comprasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['detalle_compras'], meta: { name: 'detalle_compras' } }
    /**
     * Find zero or one Detalle_compras that matches the filter.
     * @param {detalle_comprasFindUniqueArgs} args - Arguments to find a Detalle_compras
     * @example
     * // Get one Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends detalle_comprasFindUniqueArgs>(args: SelectSubset<T, detalle_comprasFindUniqueArgs<ExtArgs>>): Prisma__detalle_comprasClient<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Detalle_compras that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {detalle_comprasFindUniqueOrThrowArgs} args - Arguments to find a Detalle_compras
     * @example
     * // Get one Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends detalle_comprasFindUniqueOrThrowArgs>(args: SelectSubset<T, detalle_comprasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__detalle_comprasClient<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_comprasFindFirstArgs} args - Arguments to find a Detalle_compras
     * @example
     * // Get one Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends detalle_comprasFindFirstArgs>(args?: SelectSubset<T, detalle_comprasFindFirstArgs<ExtArgs>>): Prisma__detalle_comprasClient<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Detalle_compras that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_comprasFindFirstOrThrowArgs} args - Arguments to find a Detalle_compras
     * @example
     * // Get one Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends detalle_comprasFindFirstOrThrowArgs>(args?: SelectSubset<T, detalle_comprasFindFirstOrThrowArgs<ExtArgs>>): Prisma__detalle_comprasClient<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Detalle_compras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_comprasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.findMany()
     * 
     * // Get first 10 Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.findMany({ take: 10 })
     * 
     * // Only select the `detalle_id`
     * const detalle_comprasWithDetalle_idOnly = await prisma.detalle_compras.findMany({ select: { detalle_id: true } })
     * 
     */
    findMany<T extends detalle_comprasFindManyArgs>(args?: SelectSubset<T, detalle_comprasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Detalle_compras.
     * @param {detalle_comprasCreateArgs} args - Arguments to create a Detalle_compras.
     * @example
     * // Create one Detalle_compras
     * const Detalle_compras = await prisma.detalle_compras.create({
     *   data: {
     *     // ... data to create a Detalle_compras
     *   }
     * })
     * 
     */
    create<T extends detalle_comprasCreateArgs>(args: SelectSubset<T, detalle_comprasCreateArgs<ExtArgs>>): Prisma__detalle_comprasClient<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Detalle_compras.
     * @param {detalle_comprasCreateManyArgs} args - Arguments to create many Detalle_compras.
     * @example
     * // Create many Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends detalle_comprasCreateManyArgs>(args?: SelectSubset<T, detalle_comprasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Detalle_compras and returns the data saved in the database.
     * @param {detalle_comprasCreateManyAndReturnArgs} args - Arguments to create many Detalle_compras.
     * @example
     * // Create many Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Detalle_compras and only return the `detalle_id`
     * const detalle_comprasWithDetalle_idOnly = await prisma.detalle_compras.createManyAndReturn({
     *   select: { detalle_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends detalle_comprasCreateManyAndReturnArgs>(args?: SelectSubset<T, detalle_comprasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Detalle_compras.
     * @param {detalle_comprasDeleteArgs} args - Arguments to delete one Detalle_compras.
     * @example
     * // Delete one Detalle_compras
     * const Detalle_compras = await prisma.detalle_compras.delete({
     *   where: {
     *     // ... filter to delete one Detalle_compras
     *   }
     * })
     * 
     */
    delete<T extends detalle_comprasDeleteArgs>(args: SelectSubset<T, detalle_comprasDeleteArgs<ExtArgs>>): Prisma__detalle_comprasClient<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Detalle_compras.
     * @param {detalle_comprasUpdateArgs} args - Arguments to update one Detalle_compras.
     * @example
     * // Update one Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends detalle_comprasUpdateArgs>(args: SelectSubset<T, detalle_comprasUpdateArgs<ExtArgs>>): Prisma__detalle_comprasClient<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Detalle_compras.
     * @param {detalle_comprasDeleteManyArgs} args - Arguments to filter Detalle_compras to delete.
     * @example
     * // Delete a few Detalle_compras
     * const { count } = await prisma.detalle_compras.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends detalle_comprasDeleteManyArgs>(args?: SelectSubset<T, detalle_comprasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_comprasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends detalle_comprasUpdateManyArgs>(args: SelectSubset<T, detalle_comprasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Detalle_compras and returns the data updated in the database.
     * @param {detalle_comprasUpdateManyAndReturnArgs} args - Arguments to update many Detalle_compras.
     * @example
     * // Update many Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Detalle_compras and only return the `detalle_id`
     * const detalle_comprasWithDetalle_idOnly = await prisma.detalle_compras.updateManyAndReturn({
     *   select: { detalle_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends detalle_comprasUpdateManyAndReturnArgs>(args: SelectSubset<T, detalle_comprasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Detalle_compras.
     * @param {detalle_comprasUpsertArgs} args - Arguments to update or create a Detalle_compras.
     * @example
     * // Update or create a Detalle_compras
     * const detalle_compras = await prisma.detalle_compras.upsert({
     *   create: {
     *     // ... data to create a Detalle_compras
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Detalle_compras we want to update
     *   }
     * })
     */
    upsert<T extends detalle_comprasUpsertArgs>(args: SelectSubset<T, detalle_comprasUpsertArgs<ExtArgs>>): Prisma__detalle_comprasClient<$Result.GetResult<Prisma.$detalle_comprasPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Detalle_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_comprasCountArgs} args - Arguments to filter Detalle_compras to count.
     * @example
     * // Count the number of Detalle_compras
     * const count = await prisma.detalle_compras.count({
     *   where: {
     *     // ... the filter for the Detalle_compras we want to count
     *   }
     * })
    **/
    count<T extends detalle_comprasCountArgs>(
      args?: Subset<T, detalle_comprasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Detalle_comprasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Detalle_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Detalle_comprasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Detalle_comprasAggregateArgs>(args: Subset<T, Detalle_comprasAggregateArgs>): Prisma.PrismaPromise<GetDetalle_comprasAggregateType<T>>

    /**
     * Group by Detalle_compras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {detalle_comprasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends detalle_comprasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: detalle_comprasGroupByArgs['orderBy'] }
        : { orderBy?: detalle_comprasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, detalle_comprasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDetalle_comprasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the detalle_compras model
   */
  readonly fields: detalle_comprasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for detalle_compras.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__detalle_comprasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    compra<T extends comprasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, comprasDefaultArgs<ExtArgs>>): Prisma__comprasClient<$Result.GetResult<Prisma.$comprasPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    insumo<T extends insumosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, insumosDefaultArgs<ExtArgs>>): Prisma__insumosClient<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the detalle_compras model
   */
  interface detalle_comprasFieldRefs {
    readonly detalle_id: FieldRef<"detalle_compras", 'Int'>
    readonly compra_id: FieldRef<"detalle_compras", 'Int'>
    readonly insumo_id: FieldRef<"detalle_compras", 'Int'>
    readonly precio: FieldRef<"detalle_compras", 'Decimal'>
    readonly cantidad: FieldRef<"detalle_compras", 'Int'>
    readonly deleted_at: FieldRef<"detalle_compras", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * detalle_compras findUnique
   */
  export type detalle_comprasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
    /**
     * Filter, which detalle_compras to fetch.
     */
    where: detalle_comprasWhereUniqueInput
  }

  /**
   * detalle_compras findUniqueOrThrow
   */
  export type detalle_comprasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
    /**
     * Filter, which detalle_compras to fetch.
     */
    where: detalle_comprasWhereUniqueInput
  }

  /**
   * detalle_compras findFirst
   */
  export type detalle_comprasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
    /**
     * Filter, which detalle_compras to fetch.
     */
    where?: detalle_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_compras to fetch.
     */
    orderBy?: detalle_comprasOrderByWithRelationInput | detalle_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_compras.
     */
    cursor?: detalle_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_compras.
     */
    distinct?: Detalle_comprasScalarFieldEnum | Detalle_comprasScalarFieldEnum[]
  }

  /**
   * detalle_compras findFirstOrThrow
   */
  export type detalle_comprasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
    /**
     * Filter, which detalle_compras to fetch.
     */
    where?: detalle_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_compras to fetch.
     */
    orderBy?: detalle_comprasOrderByWithRelationInput | detalle_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for detalle_compras.
     */
    cursor?: detalle_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_compras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of detalle_compras.
     */
    distinct?: Detalle_comprasScalarFieldEnum | Detalle_comprasScalarFieldEnum[]
  }

  /**
   * detalle_compras findMany
   */
  export type detalle_comprasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
    /**
     * Filter, which detalle_compras to fetch.
     */
    where?: detalle_comprasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of detalle_compras to fetch.
     */
    orderBy?: detalle_comprasOrderByWithRelationInput | detalle_comprasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing detalle_compras.
     */
    cursor?: detalle_comprasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` detalle_compras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` detalle_compras.
     */
    skip?: number
    distinct?: Detalle_comprasScalarFieldEnum | Detalle_comprasScalarFieldEnum[]
  }

  /**
   * detalle_compras create
   */
  export type detalle_comprasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
    /**
     * The data needed to create a detalle_compras.
     */
    data: XOR<detalle_comprasCreateInput, detalle_comprasUncheckedCreateInput>
  }

  /**
   * detalle_compras createMany
   */
  export type detalle_comprasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many detalle_compras.
     */
    data: detalle_comprasCreateManyInput | detalle_comprasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * detalle_compras createManyAndReturn
   */
  export type detalle_comprasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * The data used to create many detalle_compras.
     */
    data: detalle_comprasCreateManyInput | detalle_comprasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_compras update
   */
  export type detalle_comprasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
    /**
     * The data needed to update a detalle_compras.
     */
    data: XOR<detalle_comprasUpdateInput, detalle_comprasUncheckedUpdateInput>
    /**
     * Choose, which detalle_compras to update.
     */
    where: detalle_comprasWhereUniqueInput
  }

  /**
   * detalle_compras updateMany
   */
  export type detalle_comprasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update detalle_compras.
     */
    data: XOR<detalle_comprasUpdateManyMutationInput, detalle_comprasUncheckedUpdateManyInput>
    /**
     * Filter which detalle_compras to update
     */
    where?: detalle_comprasWhereInput
    /**
     * Limit how many detalle_compras to update.
     */
    limit?: number
  }

  /**
   * detalle_compras updateManyAndReturn
   */
  export type detalle_comprasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * The data used to update detalle_compras.
     */
    data: XOR<detalle_comprasUpdateManyMutationInput, detalle_comprasUncheckedUpdateManyInput>
    /**
     * Filter which detalle_compras to update
     */
    where?: detalle_comprasWhereInput
    /**
     * Limit how many detalle_compras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * detalle_compras upsert
   */
  export type detalle_comprasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
    /**
     * The filter to search for the detalle_compras to update in case it exists.
     */
    where: detalle_comprasWhereUniqueInput
    /**
     * In case the detalle_compras found by the `where` argument doesn't exist, create a new detalle_compras with this data.
     */
    create: XOR<detalle_comprasCreateInput, detalle_comprasUncheckedCreateInput>
    /**
     * In case the detalle_compras was found with the provided `where` argument, update it with this data.
     */
    update: XOR<detalle_comprasUpdateInput, detalle_comprasUncheckedUpdateInput>
  }

  /**
   * detalle_compras delete
   */
  export type detalle_comprasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
    /**
     * Filter which detalle_compras to delete.
     */
    where: detalle_comprasWhereUniqueInput
  }

  /**
   * detalle_compras deleteMany
   */
  export type detalle_comprasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which detalle_compras to delete
     */
    where?: detalle_comprasWhereInput
    /**
     * Limit how many detalle_compras to delete.
     */
    limit?: number
  }

  /**
   * detalle_compras without action
   */
  export type detalle_comprasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the detalle_compras
     */
    select?: detalle_comprasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the detalle_compras
     */
    omit?: detalle_comprasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: detalle_comprasInclude<ExtArgs> | null
  }


  /**
   * Model evento_sanitario
   */

  export type AggregateEvento_sanitario = {
    _count: Evento_sanitarioCountAggregateOutputType | null
    _avg: Evento_sanitarioAvgAggregateOutputType | null
    _sum: Evento_sanitarioSumAggregateOutputType | null
    _min: Evento_sanitarioMinAggregateOutputType | null
    _max: Evento_sanitarioMaxAggregateOutputType | null
  }

  export type Evento_sanitarioAvgAggregateOutputType = {
    evento_sanitario_id: number | null
    animal_id: number | null
    tipo_evento_id: number | null
    usuario_veterinario_id: number | null
    usuario_operador_id: number | null
  }

  export type Evento_sanitarioSumAggregateOutputType = {
    evento_sanitario_id: number | null
    animal_id: number | null
    tipo_evento_id: number | null
    usuario_veterinario_id: number | null
    usuario_operador_id: number | null
  }

  export type Evento_sanitarioMinAggregateOutputType = {
    evento_sanitario_id: number | null
    animal_id: number | null
    tipo_evento_id: number | null
    usuario_veterinario_id: number | null
    usuario_operador_id: number | null
    estado: string | null
    diagnostico: string | null
    tratamiento: string | null
    fecha_diagnostico: Date | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type Evento_sanitarioMaxAggregateOutputType = {
    evento_sanitario_id: number | null
    animal_id: number | null
    tipo_evento_id: number | null
    usuario_veterinario_id: number | null
    usuario_operador_id: number | null
    estado: string | null
    diagnostico: string | null
    tratamiento: string | null
    fecha_diagnostico: Date | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type Evento_sanitarioCountAggregateOutputType = {
    evento_sanitario_id: number
    animal_id: number
    tipo_evento_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    estado: number
    diagnostico: number
    tratamiento: number
    fecha_diagnostico: number
    fecha: number
    deleted_at: number
    _all: number
  }


  export type Evento_sanitarioAvgAggregateInputType = {
    evento_sanitario_id?: true
    animal_id?: true
    tipo_evento_id?: true
    usuario_veterinario_id?: true
    usuario_operador_id?: true
  }

  export type Evento_sanitarioSumAggregateInputType = {
    evento_sanitario_id?: true
    animal_id?: true
    tipo_evento_id?: true
    usuario_veterinario_id?: true
    usuario_operador_id?: true
  }

  export type Evento_sanitarioMinAggregateInputType = {
    evento_sanitario_id?: true
    animal_id?: true
    tipo_evento_id?: true
    usuario_veterinario_id?: true
    usuario_operador_id?: true
    estado?: true
    diagnostico?: true
    tratamiento?: true
    fecha_diagnostico?: true
    fecha?: true
    deleted_at?: true
  }

  export type Evento_sanitarioMaxAggregateInputType = {
    evento_sanitario_id?: true
    animal_id?: true
    tipo_evento_id?: true
    usuario_veterinario_id?: true
    usuario_operador_id?: true
    estado?: true
    diagnostico?: true
    tratamiento?: true
    fecha_diagnostico?: true
    fecha?: true
    deleted_at?: true
  }

  export type Evento_sanitarioCountAggregateInputType = {
    evento_sanitario_id?: true
    animal_id?: true
    tipo_evento_id?: true
    usuario_veterinario_id?: true
    usuario_operador_id?: true
    estado?: true
    diagnostico?: true
    tratamiento?: true
    fecha_diagnostico?: true
    fecha?: true
    deleted_at?: true
    _all?: true
  }

  export type Evento_sanitarioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which evento_sanitario to aggregate.
     */
    where?: evento_sanitarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_sanitarios to fetch.
     */
    orderBy?: evento_sanitarioOrderByWithRelationInput | evento_sanitarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: evento_sanitarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_sanitarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_sanitarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned evento_sanitarios
    **/
    _count?: true | Evento_sanitarioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Evento_sanitarioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Evento_sanitarioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Evento_sanitarioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Evento_sanitarioMaxAggregateInputType
  }

  export type GetEvento_sanitarioAggregateType<T extends Evento_sanitarioAggregateArgs> = {
        [P in keyof T & keyof AggregateEvento_sanitario]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvento_sanitario[P]>
      : GetScalarType<T[P], AggregateEvento_sanitario[P]>
  }




  export type evento_sanitarioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_sanitarioWhereInput
    orderBy?: evento_sanitarioOrderByWithAggregationInput | evento_sanitarioOrderByWithAggregationInput[]
    by: Evento_sanitarioScalarFieldEnum[] | Evento_sanitarioScalarFieldEnum
    having?: evento_sanitarioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Evento_sanitarioCountAggregateInputType | true
    _avg?: Evento_sanitarioAvgAggregateInputType
    _sum?: Evento_sanitarioSumAggregateInputType
    _min?: Evento_sanitarioMinAggregateInputType
    _max?: Evento_sanitarioMaxAggregateInputType
  }

  export type Evento_sanitarioGroupByOutputType = {
    evento_sanitario_id: number
    animal_id: number
    tipo_evento_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    estado: string | null
    diagnostico: string | null
    tratamiento: string | null
    fecha_diagnostico: Date | null
    fecha: Date
    deleted_at: Date | null
    _count: Evento_sanitarioCountAggregateOutputType | null
    _avg: Evento_sanitarioAvgAggregateOutputType | null
    _sum: Evento_sanitarioSumAggregateOutputType | null
    _min: Evento_sanitarioMinAggregateOutputType | null
    _max: Evento_sanitarioMaxAggregateOutputType | null
  }

  type GetEvento_sanitarioGroupByPayload<T extends evento_sanitarioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Evento_sanitarioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Evento_sanitarioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Evento_sanitarioGroupByOutputType[P]>
            : GetScalarType<T[P], Evento_sanitarioGroupByOutputType[P]>
        }
      >
    >


  export type evento_sanitarioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    evento_sanitario_id?: boolean
    animal_id?: boolean
    tipo_evento_id?: boolean
    usuario_veterinario_id?: boolean
    usuario_operador_id?: boolean
    estado?: boolean
    diagnostico?: boolean
    tratamiento?: boolean
    fecha_diagnostico?: boolean
    fecha?: boolean
    deleted_at?: boolean
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
    insumos_usados?: boolean | evento_sanitario$insumos_usadosArgs<ExtArgs>
    _count?: boolean | Evento_sanitarioCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_sanitario"]>

  export type evento_sanitarioSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    evento_sanitario_id?: boolean
    animal_id?: boolean
    tipo_evento_id?: boolean
    usuario_veterinario_id?: boolean
    usuario_operador_id?: boolean
    estado?: boolean
    diagnostico?: boolean
    tratamiento?: boolean
    fecha_diagnostico?: boolean
    fecha?: boolean
    deleted_at?: boolean
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_sanitario"]>

  export type evento_sanitarioSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    evento_sanitario_id?: boolean
    animal_id?: boolean
    tipo_evento_id?: boolean
    usuario_veterinario_id?: boolean
    usuario_operador_id?: boolean
    estado?: boolean
    diagnostico?: boolean
    tratamiento?: boolean
    fecha_diagnostico?: boolean
    fecha?: boolean
    deleted_at?: boolean
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_sanitario"]>

  export type evento_sanitarioSelectScalar = {
    evento_sanitario_id?: boolean
    animal_id?: boolean
    tipo_evento_id?: boolean
    usuario_veterinario_id?: boolean
    usuario_operador_id?: boolean
    estado?: boolean
    diagnostico?: boolean
    tratamiento?: boolean
    fecha_diagnostico?: boolean
    fecha?: boolean
    deleted_at?: boolean
  }

  export type evento_sanitarioOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"evento_sanitario_id" | "animal_id" | "tipo_evento_id" | "usuario_veterinario_id" | "usuario_operador_id" | "estado" | "diagnostico" | "tratamiento" | "fecha_diagnostico" | "fecha" | "deleted_at", ExtArgs["result"]["evento_sanitario"]>
  export type evento_sanitarioInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
    insumos_usados?: boolean | evento_sanitario$insumos_usadosArgs<ExtArgs>
    _count?: boolean | Evento_sanitarioCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type evento_sanitarioIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type evento_sanitarioIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $evento_sanitarioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "evento_sanitario"
    objects: {
      animal: Prisma.$animalesPayload<ExtArgs>
      tipo_evento: Prisma.$tipo_eventoPayload<ExtArgs>
      veterinario: Prisma.$usuariosPayload<ExtArgs>
      operador: Prisma.$usuariosPayload<ExtArgs>
      insumos_usados: Prisma.$evento_insumoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      evento_sanitario_id: number
      animal_id: number
      tipo_evento_id: number
      usuario_veterinario_id: number
      usuario_operador_id: number
      estado: string | null
      diagnostico: string | null
      tratamiento: string | null
      fecha_diagnostico: Date | null
      fecha: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["evento_sanitario"]>
    composites: {}
  }

  type evento_sanitarioGetPayload<S extends boolean | null | undefined | evento_sanitarioDefaultArgs> = $Result.GetResult<Prisma.$evento_sanitarioPayload, S>

  type evento_sanitarioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<evento_sanitarioFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Evento_sanitarioCountAggregateInputType | true
    }

  export interface evento_sanitarioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['evento_sanitario'], meta: { name: 'evento_sanitario' } }
    /**
     * Find zero or one Evento_sanitario that matches the filter.
     * @param {evento_sanitarioFindUniqueArgs} args - Arguments to find a Evento_sanitario
     * @example
     * // Get one Evento_sanitario
     * const evento_sanitario = await prisma.evento_sanitario.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends evento_sanitarioFindUniqueArgs>(args: SelectSubset<T, evento_sanitarioFindUniqueArgs<ExtArgs>>): Prisma__evento_sanitarioClient<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Evento_sanitario that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {evento_sanitarioFindUniqueOrThrowArgs} args - Arguments to find a Evento_sanitario
     * @example
     * // Get one Evento_sanitario
     * const evento_sanitario = await prisma.evento_sanitario.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends evento_sanitarioFindUniqueOrThrowArgs>(args: SelectSubset<T, evento_sanitarioFindUniqueOrThrowArgs<ExtArgs>>): Prisma__evento_sanitarioClient<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evento_sanitario that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_sanitarioFindFirstArgs} args - Arguments to find a Evento_sanitario
     * @example
     * // Get one Evento_sanitario
     * const evento_sanitario = await prisma.evento_sanitario.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends evento_sanitarioFindFirstArgs>(args?: SelectSubset<T, evento_sanitarioFindFirstArgs<ExtArgs>>): Prisma__evento_sanitarioClient<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evento_sanitario that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_sanitarioFindFirstOrThrowArgs} args - Arguments to find a Evento_sanitario
     * @example
     * // Get one Evento_sanitario
     * const evento_sanitario = await prisma.evento_sanitario.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends evento_sanitarioFindFirstOrThrowArgs>(args?: SelectSubset<T, evento_sanitarioFindFirstOrThrowArgs<ExtArgs>>): Prisma__evento_sanitarioClient<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Evento_sanitarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_sanitarioFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Evento_sanitarios
     * const evento_sanitarios = await prisma.evento_sanitario.findMany()
     * 
     * // Get first 10 Evento_sanitarios
     * const evento_sanitarios = await prisma.evento_sanitario.findMany({ take: 10 })
     * 
     * // Only select the `evento_sanitario_id`
     * const evento_sanitarioWithEvento_sanitario_idOnly = await prisma.evento_sanitario.findMany({ select: { evento_sanitario_id: true } })
     * 
     */
    findMany<T extends evento_sanitarioFindManyArgs>(args?: SelectSubset<T, evento_sanitarioFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Evento_sanitario.
     * @param {evento_sanitarioCreateArgs} args - Arguments to create a Evento_sanitario.
     * @example
     * // Create one Evento_sanitario
     * const Evento_sanitario = await prisma.evento_sanitario.create({
     *   data: {
     *     // ... data to create a Evento_sanitario
     *   }
     * })
     * 
     */
    create<T extends evento_sanitarioCreateArgs>(args: SelectSubset<T, evento_sanitarioCreateArgs<ExtArgs>>): Prisma__evento_sanitarioClient<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Evento_sanitarios.
     * @param {evento_sanitarioCreateManyArgs} args - Arguments to create many Evento_sanitarios.
     * @example
     * // Create many Evento_sanitarios
     * const evento_sanitario = await prisma.evento_sanitario.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends evento_sanitarioCreateManyArgs>(args?: SelectSubset<T, evento_sanitarioCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Evento_sanitarios and returns the data saved in the database.
     * @param {evento_sanitarioCreateManyAndReturnArgs} args - Arguments to create many Evento_sanitarios.
     * @example
     * // Create many Evento_sanitarios
     * const evento_sanitario = await prisma.evento_sanitario.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Evento_sanitarios and only return the `evento_sanitario_id`
     * const evento_sanitarioWithEvento_sanitario_idOnly = await prisma.evento_sanitario.createManyAndReturn({
     *   select: { evento_sanitario_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends evento_sanitarioCreateManyAndReturnArgs>(args?: SelectSubset<T, evento_sanitarioCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Evento_sanitario.
     * @param {evento_sanitarioDeleteArgs} args - Arguments to delete one Evento_sanitario.
     * @example
     * // Delete one Evento_sanitario
     * const Evento_sanitario = await prisma.evento_sanitario.delete({
     *   where: {
     *     // ... filter to delete one Evento_sanitario
     *   }
     * })
     * 
     */
    delete<T extends evento_sanitarioDeleteArgs>(args: SelectSubset<T, evento_sanitarioDeleteArgs<ExtArgs>>): Prisma__evento_sanitarioClient<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Evento_sanitario.
     * @param {evento_sanitarioUpdateArgs} args - Arguments to update one Evento_sanitario.
     * @example
     * // Update one Evento_sanitario
     * const evento_sanitario = await prisma.evento_sanitario.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends evento_sanitarioUpdateArgs>(args: SelectSubset<T, evento_sanitarioUpdateArgs<ExtArgs>>): Prisma__evento_sanitarioClient<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Evento_sanitarios.
     * @param {evento_sanitarioDeleteManyArgs} args - Arguments to filter Evento_sanitarios to delete.
     * @example
     * // Delete a few Evento_sanitarios
     * const { count } = await prisma.evento_sanitario.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends evento_sanitarioDeleteManyArgs>(args?: SelectSubset<T, evento_sanitarioDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evento_sanitarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_sanitarioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Evento_sanitarios
     * const evento_sanitario = await prisma.evento_sanitario.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends evento_sanitarioUpdateManyArgs>(args: SelectSubset<T, evento_sanitarioUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evento_sanitarios and returns the data updated in the database.
     * @param {evento_sanitarioUpdateManyAndReturnArgs} args - Arguments to update many Evento_sanitarios.
     * @example
     * // Update many Evento_sanitarios
     * const evento_sanitario = await prisma.evento_sanitario.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Evento_sanitarios and only return the `evento_sanitario_id`
     * const evento_sanitarioWithEvento_sanitario_idOnly = await prisma.evento_sanitario.updateManyAndReturn({
     *   select: { evento_sanitario_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends evento_sanitarioUpdateManyAndReturnArgs>(args: SelectSubset<T, evento_sanitarioUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Evento_sanitario.
     * @param {evento_sanitarioUpsertArgs} args - Arguments to update or create a Evento_sanitario.
     * @example
     * // Update or create a Evento_sanitario
     * const evento_sanitario = await prisma.evento_sanitario.upsert({
     *   create: {
     *     // ... data to create a Evento_sanitario
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Evento_sanitario we want to update
     *   }
     * })
     */
    upsert<T extends evento_sanitarioUpsertArgs>(args: SelectSubset<T, evento_sanitarioUpsertArgs<ExtArgs>>): Prisma__evento_sanitarioClient<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Evento_sanitarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_sanitarioCountArgs} args - Arguments to filter Evento_sanitarios to count.
     * @example
     * // Count the number of Evento_sanitarios
     * const count = await prisma.evento_sanitario.count({
     *   where: {
     *     // ... the filter for the Evento_sanitarios we want to count
     *   }
     * })
    **/
    count<T extends evento_sanitarioCountArgs>(
      args?: Subset<T, evento_sanitarioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Evento_sanitarioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Evento_sanitario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Evento_sanitarioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Evento_sanitarioAggregateArgs>(args: Subset<T, Evento_sanitarioAggregateArgs>): Prisma.PrismaPromise<GetEvento_sanitarioAggregateType<T>>

    /**
     * Group by Evento_sanitario.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_sanitarioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends evento_sanitarioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: evento_sanitarioGroupByArgs['orderBy'] }
        : { orderBy?: evento_sanitarioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, evento_sanitarioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEvento_sanitarioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the evento_sanitario model
   */
  readonly fields: evento_sanitarioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for evento_sanitario.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__evento_sanitarioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    animal<T extends animalesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, animalesDefaultArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tipo_evento<T extends tipo_eventoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tipo_eventoDefaultArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    veterinario<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    operador<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    insumos_usados<T extends evento_sanitario$insumos_usadosArgs<ExtArgs> = {}>(args?: Subset<T, evento_sanitario$insumos_usadosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the evento_sanitario model
   */
  interface evento_sanitarioFieldRefs {
    readonly evento_sanitario_id: FieldRef<"evento_sanitario", 'Int'>
    readonly animal_id: FieldRef<"evento_sanitario", 'Int'>
    readonly tipo_evento_id: FieldRef<"evento_sanitario", 'Int'>
    readonly usuario_veterinario_id: FieldRef<"evento_sanitario", 'Int'>
    readonly usuario_operador_id: FieldRef<"evento_sanitario", 'Int'>
    readonly estado: FieldRef<"evento_sanitario", 'String'>
    readonly diagnostico: FieldRef<"evento_sanitario", 'String'>
    readonly tratamiento: FieldRef<"evento_sanitario", 'String'>
    readonly fecha_diagnostico: FieldRef<"evento_sanitario", 'DateTime'>
    readonly fecha: FieldRef<"evento_sanitario", 'DateTime'>
    readonly deleted_at: FieldRef<"evento_sanitario", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * evento_sanitario findUnique
   */
  export type evento_sanitarioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    /**
     * Filter, which evento_sanitario to fetch.
     */
    where: evento_sanitarioWhereUniqueInput
  }

  /**
   * evento_sanitario findUniqueOrThrow
   */
  export type evento_sanitarioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    /**
     * Filter, which evento_sanitario to fetch.
     */
    where: evento_sanitarioWhereUniqueInput
  }

  /**
   * evento_sanitario findFirst
   */
  export type evento_sanitarioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    /**
     * Filter, which evento_sanitario to fetch.
     */
    where?: evento_sanitarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_sanitarios to fetch.
     */
    orderBy?: evento_sanitarioOrderByWithRelationInput | evento_sanitarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for evento_sanitarios.
     */
    cursor?: evento_sanitarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_sanitarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_sanitarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of evento_sanitarios.
     */
    distinct?: Evento_sanitarioScalarFieldEnum | Evento_sanitarioScalarFieldEnum[]
  }

  /**
   * evento_sanitario findFirstOrThrow
   */
  export type evento_sanitarioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    /**
     * Filter, which evento_sanitario to fetch.
     */
    where?: evento_sanitarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_sanitarios to fetch.
     */
    orderBy?: evento_sanitarioOrderByWithRelationInput | evento_sanitarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for evento_sanitarios.
     */
    cursor?: evento_sanitarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_sanitarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_sanitarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of evento_sanitarios.
     */
    distinct?: Evento_sanitarioScalarFieldEnum | Evento_sanitarioScalarFieldEnum[]
  }

  /**
   * evento_sanitario findMany
   */
  export type evento_sanitarioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    /**
     * Filter, which evento_sanitarios to fetch.
     */
    where?: evento_sanitarioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_sanitarios to fetch.
     */
    orderBy?: evento_sanitarioOrderByWithRelationInput | evento_sanitarioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing evento_sanitarios.
     */
    cursor?: evento_sanitarioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_sanitarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_sanitarios.
     */
    skip?: number
    distinct?: Evento_sanitarioScalarFieldEnum | Evento_sanitarioScalarFieldEnum[]
  }

  /**
   * evento_sanitario create
   */
  export type evento_sanitarioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    /**
     * The data needed to create a evento_sanitario.
     */
    data: XOR<evento_sanitarioCreateInput, evento_sanitarioUncheckedCreateInput>
  }

  /**
   * evento_sanitario createMany
   */
  export type evento_sanitarioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many evento_sanitarios.
     */
    data: evento_sanitarioCreateManyInput | evento_sanitarioCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * evento_sanitario createManyAndReturn
   */
  export type evento_sanitarioCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * The data used to create many evento_sanitarios.
     */
    data: evento_sanitarioCreateManyInput | evento_sanitarioCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * evento_sanitario update
   */
  export type evento_sanitarioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    /**
     * The data needed to update a evento_sanitario.
     */
    data: XOR<evento_sanitarioUpdateInput, evento_sanitarioUncheckedUpdateInput>
    /**
     * Choose, which evento_sanitario to update.
     */
    where: evento_sanitarioWhereUniqueInput
  }

  /**
   * evento_sanitario updateMany
   */
  export type evento_sanitarioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update evento_sanitarios.
     */
    data: XOR<evento_sanitarioUpdateManyMutationInput, evento_sanitarioUncheckedUpdateManyInput>
    /**
     * Filter which evento_sanitarios to update
     */
    where?: evento_sanitarioWhereInput
    /**
     * Limit how many evento_sanitarios to update.
     */
    limit?: number
  }

  /**
   * evento_sanitario updateManyAndReturn
   */
  export type evento_sanitarioUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * The data used to update evento_sanitarios.
     */
    data: XOR<evento_sanitarioUpdateManyMutationInput, evento_sanitarioUncheckedUpdateManyInput>
    /**
     * Filter which evento_sanitarios to update
     */
    where?: evento_sanitarioWhereInput
    /**
     * Limit how many evento_sanitarios to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * evento_sanitario upsert
   */
  export type evento_sanitarioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    /**
     * The filter to search for the evento_sanitario to update in case it exists.
     */
    where: evento_sanitarioWhereUniqueInput
    /**
     * In case the evento_sanitario found by the `where` argument doesn't exist, create a new evento_sanitario with this data.
     */
    create: XOR<evento_sanitarioCreateInput, evento_sanitarioUncheckedCreateInput>
    /**
     * In case the evento_sanitario was found with the provided `where` argument, update it with this data.
     */
    update: XOR<evento_sanitarioUpdateInput, evento_sanitarioUncheckedUpdateInput>
  }

  /**
   * evento_sanitario delete
   */
  export type evento_sanitarioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
    /**
     * Filter which evento_sanitario to delete.
     */
    where: evento_sanitarioWhereUniqueInput
  }

  /**
   * evento_sanitario deleteMany
   */
  export type evento_sanitarioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which evento_sanitarios to delete
     */
    where?: evento_sanitarioWhereInput
    /**
     * Limit how many evento_sanitarios to delete.
     */
    limit?: number
  }

  /**
   * evento_sanitario.insumos_usados
   */
  export type evento_sanitario$insumos_usadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
    where?: evento_insumoWhereInput
    orderBy?: evento_insumoOrderByWithRelationInput | evento_insumoOrderByWithRelationInput[]
    cursor?: evento_insumoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Evento_insumoScalarFieldEnum | Evento_insumoScalarFieldEnum[]
  }

  /**
   * evento_sanitario without action
   */
  export type evento_sanitarioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_sanitario
     */
    select?: evento_sanitarioSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_sanitario
     */
    omit?: evento_sanitarioOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_sanitarioInclude<ExtArgs> | null
  }


  /**
   * Model evento_insumo
   */

  export type AggregateEvento_insumo = {
    _count: Evento_insumoCountAggregateOutputType | null
    _avg: Evento_insumoAvgAggregateOutputType | null
    _sum: Evento_insumoSumAggregateOutputType | null
    _min: Evento_insumoMinAggregateOutputType | null
    _max: Evento_insumoMaxAggregateOutputType | null
  }

  export type Evento_insumoAvgAggregateOutputType = {
    evento_sanitario_id: number | null
    insumo_id: number | null
    cantidad: number | null
  }

  export type Evento_insumoSumAggregateOutputType = {
    evento_sanitario_id: number | null
    insumo_id: number | null
    cantidad: number | null
  }

  export type Evento_insumoMinAggregateOutputType = {
    evento_sanitario_id: number | null
    insumo_id: number | null
    cantidad: number | null
    deleted_at: Date | null
  }

  export type Evento_insumoMaxAggregateOutputType = {
    evento_sanitario_id: number | null
    insumo_id: number | null
    cantidad: number | null
    deleted_at: Date | null
  }

  export type Evento_insumoCountAggregateOutputType = {
    evento_sanitario_id: number
    insumo_id: number
    cantidad: number
    deleted_at: number
    _all: number
  }


  export type Evento_insumoAvgAggregateInputType = {
    evento_sanitario_id?: true
    insumo_id?: true
    cantidad?: true
  }

  export type Evento_insumoSumAggregateInputType = {
    evento_sanitario_id?: true
    insumo_id?: true
    cantidad?: true
  }

  export type Evento_insumoMinAggregateInputType = {
    evento_sanitario_id?: true
    insumo_id?: true
    cantidad?: true
    deleted_at?: true
  }

  export type Evento_insumoMaxAggregateInputType = {
    evento_sanitario_id?: true
    insumo_id?: true
    cantidad?: true
    deleted_at?: true
  }

  export type Evento_insumoCountAggregateInputType = {
    evento_sanitario_id?: true
    insumo_id?: true
    cantidad?: true
    deleted_at?: true
    _all?: true
  }

  export type Evento_insumoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which evento_insumo to aggregate.
     */
    where?: evento_insumoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_insumos to fetch.
     */
    orderBy?: evento_insumoOrderByWithRelationInput | evento_insumoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: evento_insumoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_insumos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned evento_insumos
    **/
    _count?: true | Evento_insumoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Evento_insumoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Evento_insumoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Evento_insumoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Evento_insumoMaxAggregateInputType
  }

  export type GetEvento_insumoAggregateType<T extends Evento_insumoAggregateArgs> = {
        [P in keyof T & keyof AggregateEvento_insumo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvento_insumo[P]>
      : GetScalarType<T[P], AggregateEvento_insumo[P]>
  }




  export type evento_insumoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_insumoWhereInput
    orderBy?: evento_insumoOrderByWithAggregationInput | evento_insumoOrderByWithAggregationInput[]
    by: Evento_insumoScalarFieldEnum[] | Evento_insumoScalarFieldEnum
    having?: evento_insumoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Evento_insumoCountAggregateInputType | true
    _avg?: Evento_insumoAvgAggregateInputType
    _sum?: Evento_insumoSumAggregateInputType
    _min?: Evento_insumoMinAggregateInputType
    _max?: Evento_insumoMaxAggregateInputType
  }

  export type Evento_insumoGroupByOutputType = {
    evento_sanitario_id: number
    insumo_id: number
    cantidad: number
    deleted_at: Date | null
    _count: Evento_insumoCountAggregateOutputType | null
    _avg: Evento_insumoAvgAggregateOutputType | null
    _sum: Evento_insumoSumAggregateOutputType | null
    _min: Evento_insumoMinAggregateOutputType | null
    _max: Evento_insumoMaxAggregateOutputType | null
  }

  type GetEvento_insumoGroupByPayload<T extends evento_insumoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Evento_insumoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Evento_insumoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Evento_insumoGroupByOutputType[P]>
            : GetScalarType<T[P], Evento_insumoGroupByOutputType[P]>
        }
      >
    >


  export type evento_insumoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    evento_sanitario_id?: boolean
    insumo_id?: boolean
    cantidad?: boolean
    deleted_at?: boolean
    evento_sanitario?: boolean | evento_sanitarioDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_insumo"]>

  export type evento_insumoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    evento_sanitario_id?: boolean
    insumo_id?: boolean
    cantidad?: boolean
    deleted_at?: boolean
    evento_sanitario?: boolean | evento_sanitarioDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_insumo"]>

  export type evento_insumoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    evento_sanitario_id?: boolean
    insumo_id?: boolean
    cantidad?: boolean
    deleted_at?: boolean
    evento_sanitario?: boolean | evento_sanitarioDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_insumo"]>

  export type evento_insumoSelectScalar = {
    evento_sanitario_id?: boolean
    insumo_id?: boolean
    cantidad?: boolean
    deleted_at?: boolean
  }

  export type evento_insumoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"evento_sanitario_id" | "insumo_id" | "cantidad" | "deleted_at", ExtArgs["result"]["evento_insumo"]>
  export type evento_insumoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evento_sanitario?: boolean | evento_sanitarioDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }
  export type evento_insumoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evento_sanitario?: boolean | evento_sanitarioDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }
  export type evento_insumoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    evento_sanitario?: boolean | evento_sanitarioDefaultArgs<ExtArgs>
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
  }

  export type $evento_insumoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "evento_insumo"
    objects: {
      evento_sanitario: Prisma.$evento_sanitarioPayload<ExtArgs>
      insumo: Prisma.$insumosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      evento_sanitario_id: number
      insumo_id: number
      cantidad: number
      deleted_at: Date | null
    }, ExtArgs["result"]["evento_insumo"]>
    composites: {}
  }

  type evento_insumoGetPayload<S extends boolean | null | undefined | evento_insumoDefaultArgs> = $Result.GetResult<Prisma.$evento_insumoPayload, S>

  type evento_insumoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<evento_insumoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Evento_insumoCountAggregateInputType | true
    }

  export interface evento_insumoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['evento_insumo'], meta: { name: 'evento_insumo' } }
    /**
     * Find zero or one Evento_insumo that matches the filter.
     * @param {evento_insumoFindUniqueArgs} args - Arguments to find a Evento_insumo
     * @example
     * // Get one Evento_insumo
     * const evento_insumo = await prisma.evento_insumo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends evento_insumoFindUniqueArgs>(args: SelectSubset<T, evento_insumoFindUniqueArgs<ExtArgs>>): Prisma__evento_insumoClient<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Evento_insumo that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {evento_insumoFindUniqueOrThrowArgs} args - Arguments to find a Evento_insumo
     * @example
     * // Get one Evento_insumo
     * const evento_insumo = await prisma.evento_insumo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends evento_insumoFindUniqueOrThrowArgs>(args: SelectSubset<T, evento_insumoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__evento_insumoClient<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evento_insumo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_insumoFindFirstArgs} args - Arguments to find a Evento_insumo
     * @example
     * // Get one Evento_insumo
     * const evento_insumo = await prisma.evento_insumo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends evento_insumoFindFirstArgs>(args?: SelectSubset<T, evento_insumoFindFirstArgs<ExtArgs>>): Prisma__evento_insumoClient<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evento_insumo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_insumoFindFirstOrThrowArgs} args - Arguments to find a Evento_insumo
     * @example
     * // Get one Evento_insumo
     * const evento_insumo = await prisma.evento_insumo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends evento_insumoFindFirstOrThrowArgs>(args?: SelectSubset<T, evento_insumoFindFirstOrThrowArgs<ExtArgs>>): Prisma__evento_insumoClient<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Evento_insumos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_insumoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Evento_insumos
     * const evento_insumos = await prisma.evento_insumo.findMany()
     * 
     * // Get first 10 Evento_insumos
     * const evento_insumos = await prisma.evento_insumo.findMany({ take: 10 })
     * 
     * // Only select the `evento_sanitario_id`
     * const evento_insumoWithEvento_sanitario_idOnly = await prisma.evento_insumo.findMany({ select: { evento_sanitario_id: true } })
     * 
     */
    findMany<T extends evento_insumoFindManyArgs>(args?: SelectSubset<T, evento_insumoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Evento_insumo.
     * @param {evento_insumoCreateArgs} args - Arguments to create a Evento_insumo.
     * @example
     * // Create one Evento_insumo
     * const Evento_insumo = await prisma.evento_insumo.create({
     *   data: {
     *     // ... data to create a Evento_insumo
     *   }
     * })
     * 
     */
    create<T extends evento_insumoCreateArgs>(args: SelectSubset<T, evento_insumoCreateArgs<ExtArgs>>): Prisma__evento_insumoClient<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Evento_insumos.
     * @param {evento_insumoCreateManyArgs} args - Arguments to create many Evento_insumos.
     * @example
     * // Create many Evento_insumos
     * const evento_insumo = await prisma.evento_insumo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends evento_insumoCreateManyArgs>(args?: SelectSubset<T, evento_insumoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Evento_insumos and returns the data saved in the database.
     * @param {evento_insumoCreateManyAndReturnArgs} args - Arguments to create many Evento_insumos.
     * @example
     * // Create many Evento_insumos
     * const evento_insumo = await prisma.evento_insumo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Evento_insumos and only return the `evento_sanitario_id`
     * const evento_insumoWithEvento_sanitario_idOnly = await prisma.evento_insumo.createManyAndReturn({
     *   select: { evento_sanitario_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends evento_insumoCreateManyAndReturnArgs>(args?: SelectSubset<T, evento_insumoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Evento_insumo.
     * @param {evento_insumoDeleteArgs} args - Arguments to delete one Evento_insumo.
     * @example
     * // Delete one Evento_insumo
     * const Evento_insumo = await prisma.evento_insumo.delete({
     *   where: {
     *     // ... filter to delete one Evento_insumo
     *   }
     * })
     * 
     */
    delete<T extends evento_insumoDeleteArgs>(args: SelectSubset<T, evento_insumoDeleteArgs<ExtArgs>>): Prisma__evento_insumoClient<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Evento_insumo.
     * @param {evento_insumoUpdateArgs} args - Arguments to update one Evento_insumo.
     * @example
     * // Update one Evento_insumo
     * const evento_insumo = await prisma.evento_insumo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends evento_insumoUpdateArgs>(args: SelectSubset<T, evento_insumoUpdateArgs<ExtArgs>>): Prisma__evento_insumoClient<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Evento_insumos.
     * @param {evento_insumoDeleteManyArgs} args - Arguments to filter Evento_insumos to delete.
     * @example
     * // Delete a few Evento_insumos
     * const { count } = await prisma.evento_insumo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends evento_insumoDeleteManyArgs>(args?: SelectSubset<T, evento_insumoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evento_insumos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_insumoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Evento_insumos
     * const evento_insumo = await prisma.evento_insumo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends evento_insumoUpdateManyArgs>(args: SelectSubset<T, evento_insumoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evento_insumos and returns the data updated in the database.
     * @param {evento_insumoUpdateManyAndReturnArgs} args - Arguments to update many Evento_insumos.
     * @example
     * // Update many Evento_insumos
     * const evento_insumo = await prisma.evento_insumo.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Evento_insumos and only return the `evento_sanitario_id`
     * const evento_insumoWithEvento_sanitario_idOnly = await prisma.evento_insumo.updateManyAndReturn({
     *   select: { evento_sanitario_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends evento_insumoUpdateManyAndReturnArgs>(args: SelectSubset<T, evento_insumoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Evento_insumo.
     * @param {evento_insumoUpsertArgs} args - Arguments to update or create a Evento_insumo.
     * @example
     * // Update or create a Evento_insumo
     * const evento_insumo = await prisma.evento_insumo.upsert({
     *   create: {
     *     // ... data to create a Evento_insumo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Evento_insumo we want to update
     *   }
     * })
     */
    upsert<T extends evento_insumoUpsertArgs>(args: SelectSubset<T, evento_insumoUpsertArgs<ExtArgs>>): Prisma__evento_insumoClient<$Result.GetResult<Prisma.$evento_insumoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Evento_insumos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_insumoCountArgs} args - Arguments to filter Evento_insumos to count.
     * @example
     * // Count the number of Evento_insumos
     * const count = await prisma.evento_insumo.count({
     *   where: {
     *     // ... the filter for the Evento_insumos we want to count
     *   }
     * })
    **/
    count<T extends evento_insumoCountArgs>(
      args?: Subset<T, evento_insumoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Evento_insumoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Evento_insumo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Evento_insumoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Evento_insumoAggregateArgs>(args: Subset<T, Evento_insumoAggregateArgs>): Prisma.PrismaPromise<GetEvento_insumoAggregateType<T>>

    /**
     * Group by Evento_insumo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_insumoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends evento_insumoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: evento_insumoGroupByArgs['orderBy'] }
        : { orderBy?: evento_insumoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, evento_insumoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEvento_insumoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the evento_insumo model
   */
  readonly fields: evento_insumoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for evento_insumo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__evento_insumoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    evento_sanitario<T extends evento_sanitarioDefaultArgs<ExtArgs> = {}>(args?: Subset<T, evento_sanitarioDefaultArgs<ExtArgs>>): Prisma__evento_sanitarioClient<$Result.GetResult<Prisma.$evento_sanitarioPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    insumo<T extends insumosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, insumosDefaultArgs<ExtArgs>>): Prisma__insumosClient<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the evento_insumo model
   */
  interface evento_insumoFieldRefs {
    readonly evento_sanitario_id: FieldRef<"evento_insumo", 'Int'>
    readonly insumo_id: FieldRef<"evento_insumo", 'Int'>
    readonly cantidad: FieldRef<"evento_insumo", 'Int'>
    readonly deleted_at: FieldRef<"evento_insumo", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * evento_insumo findUnique
   */
  export type evento_insumoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
    /**
     * Filter, which evento_insumo to fetch.
     */
    where: evento_insumoWhereUniqueInput
  }

  /**
   * evento_insumo findUniqueOrThrow
   */
  export type evento_insumoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
    /**
     * Filter, which evento_insumo to fetch.
     */
    where: evento_insumoWhereUniqueInput
  }

  /**
   * evento_insumo findFirst
   */
  export type evento_insumoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
    /**
     * Filter, which evento_insumo to fetch.
     */
    where?: evento_insumoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_insumos to fetch.
     */
    orderBy?: evento_insumoOrderByWithRelationInput | evento_insumoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for evento_insumos.
     */
    cursor?: evento_insumoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_insumos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of evento_insumos.
     */
    distinct?: Evento_insumoScalarFieldEnum | Evento_insumoScalarFieldEnum[]
  }

  /**
   * evento_insumo findFirstOrThrow
   */
  export type evento_insumoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
    /**
     * Filter, which evento_insumo to fetch.
     */
    where?: evento_insumoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_insumos to fetch.
     */
    orderBy?: evento_insumoOrderByWithRelationInput | evento_insumoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for evento_insumos.
     */
    cursor?: evento_insumoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_insumos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of evento_insumos.
     */
    distinct?: Evento_insumoScalarFieldEnum | Evento_insumoScalarFieldEnum[]
  }

  /**
   * evento_insumo findMany
   */
  export type evento_insumoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
    /**
     * Filter, which evento_insumos to fetch.
     */
    where?: evento_insumoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_insumos to fetch.
     */
    orderBy?: evento_insumoOrderByWithRelationInput | evento_insumoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing evento_insumos.
     */
    cursor?: evento_insumoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_insumos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_insumos.
     */
    skip?: number
    distinct?: Evento_insumoScalarFieldEnum | Evento_insumoScalarFieldEnum[]
  }

  /**
   * evento_insumo create
   */
  export type evento_insumoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
    /**
     * The data needed to create a evento_insumo.
     */
    data: XOR<evento_insumoCreateInput, evento_insumoUncheckedCreateInput>
  }

  /**
   * evento_insumo createMany
   */
  export type evento_insumoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many evento_insumos.
     */
    data: evento_insumoCreateManyInput | evento_insumoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * evento_insumo createManyAndReturn
   */
  export type evento_insumoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * The data used to create many evento_insumos.
     */
    data: evento_insumoCreateManyInput | evento_insumoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * evento_insumo update
   */
  export type evento_insumoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
    /**
     * The data needed to update a evento_insumo.
     */
    data: XOR<evento_insumoUpdateInput, evento_insumoUncheckedUpdateInput>
    /**
     * Choose, which evento_insumo to update.
     */
    where: evento_insumoWhereUniqueInput
  }

  /**
   * evento_insumo updateMany
   */
  export type evento_insumoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update evento_insumos.
     */
    data: XOR<evento_insumoUpdateManyMutationInput, evento_insumoUncheckedUpdateManyInput>
    /**
     * Filter which evento_insumos to update
     */
    where?: evento_insumoWhereInput
    /**
     * Limit how many evento_insumos to update.
     */
    limit?: number
  }

  /**
   * evento_insumo updateManyAndReturn
   */
  export type evento_insumoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * The data used to update evento_insumos.
     */
    data: XOR<evento_insumoUpdateManyMutationInput, evento_insumoUncheckedUpdateManyInput>
    /**
     * Filter which evento_insumos to update
     */
    where?: evento_insumoWhereInput
    /**
     * Limit how many evento_insumos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * evento_insumo upsert
   */
  export type evento_insumoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
    /**
     * The filter to search for the evento_insumo to update in case it exists.
     */
    where: evento_insumoWhereUniqueInput
    /**
     * In case the evento_insumo found by the `where` argument doesn't exist, create a new evento_insumo with this data.
     */
    create: XOR<evento_insumoCreateInput, evento_insumoUncheckedCreateInput>
    /**
     * In case the evento_insumo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<evento_insumoUpdateInput, evento_insumoUncheckedUpdateInput>
  }

  /**
   * evento_insumo delete
   */
  export type evento_insumoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
    /**
     * Filter which evento_insumo to delete.
     */
    where: evento_insumoWhereUniqueInput
  }

  /**
   * evento_insumo deleteMany
   */
  export type evento_insumoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which evento_insumos to delete
     */
    where?: evento_insumoWhereInput
    /**
     * Limit how many evento_insumos to delete.
     */
    limit?: number
  }

  /**
   * evento_insumo without action
   */
  export type evento_insumoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_insumo
     */
    select?: evento_insumoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_insumo
     */
    omit?: evento_insumoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_insumoInclude<ExtArgs> | null
  }


  /**
   * Model alimentacion
   */

  export type AggregateAlimentacion = {
    _count: AlimentacionCountAggregateOutputType | null
    _avg: AlimentacionAvgAggregateOutputType | null
    _sum: AlimentacionSumAggregateOutputType | null
    _min: AlimentacionMinAggregateOutputType | null
    _max: AlimentacionMaxAggregateOutputType | null
  }

  export type AlimentacionAvgAggregateOutputType = {
    alimentacion_id: number | null
    insumo_id: number | null
    usuario_operador_id: number | null
    animal_id: number | null
    cantidad: number | null
  }

  export type AlimentacionSumAggregateOutputType = {
    alimentacion_id: number | null
    insumo_id: number | null
    usuario_operador_id: number | null
    animal_id: number | null
    cantidad: number | null
  }

  export type AlimentacionMinAggregateOutputType = {
    alimentacion_id: number | null
    insumo_id: number | null
    usuario_operador_id: number | null
    animal_id: number | null
    cantidad: number | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type AlimentacionMaxAggregateOutputType = {
    alimentacion_id: number | null
    insumo_id: number | null
    usuario_operador_id: number | null
    animal_id: number | null
    cantidad: number | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type AlimentacionCountAggregateOutputType = {
    alimentacion_id: number
    insumo_id: number
    usuario_operador_id: number
    animal_id: number
    cantidad: number
    fecha: number
    deleted_at: number
    _all: number
  }


  export type AlimentacionAvgAggregateInputType = {
    alimentacion_id?: true
    insumo_id?: true
    usuario_operador_id?: true
    animal_id?: true
    cantidad?: true
  }

  export type AlimentacionSumAggregateInputType = {
    alimentacion_id?: true
    insumo_id?: true
    usuario_operador_id?: true
    animal_id?: true
    cantidad?: true
  }

  export type AlimentacionMinAggregateInputType = {
    alimentacion_id?: true
    insumo_id?: true
    usuario_operador_id?: true
    animal_id?: true
    cantidad?: true
    fecha?: true
    deleted_at?: true
  }

  export type AlimentacionMaxAggregateInputType = {
    alimentacion_id?: true
    insumo_id?: true
    usuario_operador_id?: true
    animal_id?: true
    cantidad?: true
    fecha?: true
    deleted_at?: true
  }

  export type AlimentacionCountAggregateInputType = {
    alimentacion_id?: true
    insumo_id?: true
    usuario_operador_id?: true
    animal_id?: true
    cantidad?: true
    fecha?: true
    deleted_at?: true
    _all?: true
  }

  export type AlimentacionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alimentacion to aggregate.
     */
    where?: alimentacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alimentacions to fetch.
     */
    orderBy?: alimentacionOrderByWithRelationInput | alimentacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: alimentacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alimentacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alimentacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned alimentacions
    **/
    _count?: true | AlimentacionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlimentacionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlimentacionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlimentacionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlimentacionMaxAggregateInputType
  }

  export type GetAlimentacionAggregateType<T extends AlimentacionAggregateArgs> = {
        [P in keyof T & keyof AggregateAlimentacion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlimentacion[P]>
      : GetScalarType<T[P], AggregateAlimentacion[P]>
  }




  export type alimentacionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: alimentacionWhereInput
    orderBy?: alimentacionOrderByWithAggregationInput | alimentacionOrderByWithAggregationInput[]
    by: AlimentacionScalarFieldEnum[] | AlimentacionScalarFieldEnum
    having?: alimentacionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlimentacionCountAggregateInputType | true
    _avg?: AlimentacionAvgAggregateInputType
    _sum?: AlimentacionSumAggregateInputType
    _min?: AlimentacionMinAggregateInputType
    _max?: AlimentacionMaxAggregateInputType
  }

  export type AlimentacionGroupByOutputType = {
    alimentacion_id: number
    insumo_id: number
    usuario_operador_id: number
    animal_id: number
    cantidad: number
    fecha: Date
    deleted_at: Date | null
    _count: AlimentacionCountAggregateOutputType | null
    _avg: AlimentacionAvgAggregateOutputType | null
    _sum: AlimentacionSumAggregateOutputType | null
    _min: AlimentacionMinAggregateOutputType | null
    _max: AlimentacionMaxAggregateOutputType | null
  }

  type GetAlimentacionGroupByPayload<T extends alimentacionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlimentacionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlimentacionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlimentacionGroupByOutputType[P]>
            : GetScalarType<T[P], AlimentacionGroupByOutputType[P]>
        }
      >
    >


  export type alimentacionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    alimentacion_id?: boolean
    insumo_id?: boolean
    usuario_operador_id?: boolean
    animal_id?: boolean
    cantidad?: boolean
    fecha?: boolean
    deleted_at?: boolean
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alimentacion"]>

  export type alimentacionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    alimentacion_id?: boolean
    insumo_id?: boolean
    usuario_operador_id?: boolean
    animal_id?: boolean
    cantidad?: boolean
    fecha?: boolean
    deleted_at?: boolean
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alimentacion"]>

  export type alimentacionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    alimentacion_id?: boolean
    insumo_id?: boolean
    usuario_operador_id?: boolean
    animal_id?: boolean
    cantidad?: boolean
    fecha?: boolean
    deleted_at?: boolean
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alimentacion"]>

  export type alimentacionSelectScalar = {
    alimentacion_id?: boolean
    insumo_id?: boolean
    usuario_operador_id?: boolean
    animal_id?: boolean
    cantidad?: boolean
    fecha?: boolean
    deleted_at?: boolean
  }

  export type alimentacionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"alimentacion_id" | "insumo_id" | "usuario_operador_id" | "animal_id" | "cantidad" | "fecha" | "deleted_at", ExtArgs["result"]["alimentacion"]>
  export type alimentacionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
  }
  export type alimentacionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
  }
  export type alimentacionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    insumo?: boolean | insumosDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
  }

  export type $alimentacionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "alimentacion"
    objects: {
      insumo: Prisma.$insumosPayload<ExtArgs>
      usuario: Prisma.$usuariosPayload<ExtArgs>
      animal: Prisma.$animalesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      alimentacion_id: number
      insumo_id: number
      usuario_operador_id: number
      animal_id: number
      cantidad: number
      fecha: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["alimentacion"]>
    composites: {}
  }

  type alimentacionGetPayload<S extends boolean | null | undefined | alimentacionDefaultArgs> = $Result.GetResult<Prisma.$alimentacionPayload, S>

  type alimentacionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<alimentacionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AlimentacionCountAggregateInputType | true
    }

  export interface alimentacionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['alimentacion'], meta: { name: 'alimentacion' } }
    /**
     * Find zero or one Alimentacion that matches the filter.
     * @param {alimentacionFindUniqueArgs} args - Arguments to find a Alimentacion
     * @example
     * // Get one Alimentacion
     * const alimentacion = await prisma.alimentacion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends alimentacionFindUniqueArgs>(args: SelectSubset<T, alimentacionFindUniqueArgs<ExtArgs>>): Prisma__alimentacionClient<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Alimentacion that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {alimentacionFindUniqueOrThrowArgs} args - Arguments to find a Alimentacion
     * @example
     * // Get one Alimentacion
     * const alimentacion = await prisma.alimentacion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends alimentacionFindUniqueOrThrowArgs>(args: SelectSubset<T, alimentacionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__alimentacionClient<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alimentacion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alimentacionFindFirstArgs} args - Arguments to find a Alimentacion
     * @example
     * // Get one Alimentacion
     * const alimentacion = await prisma.alimentacion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends alimentacionFindFirstArgs>(args?: SelectSubset<T, alimentacionFindFirstArgs<ExtArgs>>): Prisma__alimentacionClient<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Alimentacion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alimentacionFindFirstOrThrowArgs} args - Arguments to find a Alimentacion
     * @example
     * // Get one Alimentacion
     * const alimentacion = await prisma.alimentacion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends alimentacionFindFirstOrThrowArgs>(args?: SelectSubset<T, alimentacionFindFirstOrThrowArgs<ExtArgs>>): Prisma__alimentacionClient<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Alimentacions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alimentacionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alimentacions
     * const alimentacions = await prisma.alimentacion.findMany()
     * 
     * // Get first 10 Alimentacions
     * const alimentacions = await prisma.alimentacion.findMany({ take: 10 })
     * 
     * // Only select the `alimentacion_id`
     * const alimentacionWithAlimentacion_idOnly = await prisma.alimentacion.findMany({ select: { alimentacion_id: true } })
     * 
     */
    findMany<T extends alimentacionFindManyArgs>(args?: SelectSubset<T, alimentacionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Alimentacion.
     * @param {alimentacionCreateArgs} args - Arguments to create a Alimentacion.
     * @example
     * // Create one Alimentacion
     * const Alimentacion = await prisma.alimentacion.create({
     *   data: {
     *     // ... data to create a Alimentacion
     *   }
     * })
     * 
     */
    create<T extends alimentacionCreateArgs>(args: SelectSubset<T, alimentacionCreateArgs<ExtArgs>>): Prisma__alimentacionClient<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Alimentacions.
     * @param {alimentacionCreateManyArgs} args - Arguments to create many Alimentacions.
     * @example
     * // Create many Alimentacions
     * const alimentacion = await prisma.alimentacion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends alimentacionCreateManyArgs>(args?: SelectSubset<T, alimentacionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Alimentacions and returns the data saved in the database.
     * @param {alimentacionCreateManyAndReturnArgs} args - Arguments to create many Alimentacions.
     * @example
     * // Create many Alimentacions
     * const alimentacion = await prisma.alimentacion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Alimentacions and only return the `alimentacion_id`
     * const alimentacionWithAlimentacion_idOnly = await prisma.alimentacion.createManyAndReturn({
     *   select: { alimentacion_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends alimentacionCreateManyAndReturnArgs>(args?: SelectSubset<T, alimentacionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Alimentacion.
     * @param {alimentacionDeleteArgs} args - Arguments to delete one Alimentacion.
     * @example
     * // Delete one Alimentacion
     * const Alimentacion = await prisma.alimentacion.delete({
     *   where: {
     *     // ... filter to delete one Alimentacion
     *   }
     * })
     * 
     */
    delete<T extends alimentacionDeleteArgs>(args: SelectSubset<T, alimentacionDeleteArgs<ExtArgs>>): Prisma__alimentacionClient<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Alimentacion.
     * @param {alimentacionUpdateArgs} args - Arguments to update one Alimentacion.
     * @example
     * // Update one Alimentacion
     * const alimentacion = await prisma.alimentacion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends alimentacionUpdateArgs>(args: SelectSubset<T, alimentacionUpdateArgs<ExtArgs>>): Prisma__alimentacionClient<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Alimentacions.
     * @param {alimentacionDeleteManyArgs} args - Arguments to filter Alimentacions to delete.
     * @example
     * // Delete a few Alimentacions
     * const { count } = await prisma.alimentacion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends alimentacionDeleteManyArgs>(args?: SelectSubset<T, alimentacionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alimentacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alimentacionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alimentacions
     * const alimentacion = await prisma.alimentacion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends alimentacionUpdateManyArgs>(args: SelectSubset<T, alimentacionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alimentacions and returns the data updated in the database.
     * @param {alimentacionUpdateManyAndReturnArgs} args - Arguments to update many Alimentacions.
     * @example
     * // Update many Alimentacions
     * const alimentacion = await prisma.alimentacion.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Alimentacions and only return the `alimentacion_id`
     * const alimentacionWithAlimentacion_idOnly = await prisma.alimentacion.updateManyAndReturn({
     *   select: { alimentacion_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends alimentacionUpdateManyAndReturnArgs>(args: SelectSubset<T, alimentacionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Alimentacion.
     * @param {alimentacionUpsertArgs} args - Arguments to update or create a Alimentacion.
     * @example
     * // Update or create a Alimentacion
     * const alimentacion = await prisma.alimentacion.upsert({
     *   create: {
     *     // ... data to create a Alimentacion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Alimentacion we want to update
     *   }
     * })
     */
    upsert<T extends alimentacionUpsertArgs>(args: SelectSubset<T, alimentacionUpsertArgs<ExtArgs>>): Prisma__alimentacionClient<$Result.GetResult<Prisma.$alimentacionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Alimentacions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alimentacionCountArgs} args - Arguments to filter Alimentacions to count.
     * @example
     * // Count the number of Alimentacions
     * const count = await prisma.alimentacion.count({
     *   where: {
     *     // ... the filter for the Alimentacions we want to count
     *   }
     * })
    **/
    count<T extends alimentacionCountArgs>(
      args?: Subset<T, alimentacionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlimentacionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Alimentacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlimentacionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlimentacionAggregateArgs>(args: Subset<T, AlimentacionAggregateArgs>): Prisma.PrismaPromise<GetAlimentacionAggregateType<T>>

    /**
     * Group by Alimentacion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {alimentacionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends alimentacionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: alimentacionGroupByArgs['orderBy'] }
        : { orderBy?: alimentacionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, alimentacionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlimentacionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the alimentacion model
   */
  readonly fields: alimentacionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for alimentacion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__alimentacionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    insumo<T extends insumosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, insumosDefaultArgs<ExtArgs>>): Prisma__insumosClient<$Result.GetResult<Prisma.$insumosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    animal<T extends animalesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, animalesDefaultArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the alimentacion model
   */
  interface alimentacionFieldRefs {
    readonly alimentacion_id: FieldRef<"alimentacion", 'Int'>
    readonly insumo_id: FieldRef<"alimentacion", 'Int'>
    readonly usuario_operador_id: FieldRef<"alimentacion", 'Int'>
    readonly animal_id: FieldRef<"alimentacion", 'Int'>
    readonly cantidad: FieldRef<"alimentacion", 'Int'>
    readonly fecha: FieldRef<"alimentacion", 'DateTime'>
    readonly deleted_at: FieldRef<"alimentacion", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * alimentacion findUnique
   */
  export type alimentacionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    /**
     * Filter, which alimentacion to fetch.
     */
    where: alimentacionWhereUniqueInput
  }

  /**
   * alimentacion findUniqueOrThrow
   */
  export type alimentacionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    /**
     * Filter, which alimentacion to fetch.
     */
    where: alimentacionWhereUniqueInput
  }

  /**
   * alimentacion findFirst
   */
  export type alimentacionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    /**
     * Filter, which alimentacion to fetch.
     */
    where?: alimentacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alimentacions to fetch.
     */
    orderBy?: alimentacionOrderByWithRelationInput | alimentacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alimentacions.
     */
    cursor?: alimentacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alimentacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alimentacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alimentacions.
     */
    distinct?: AlimentacionScalarFieldEnum | AlimentacionScalarFieldEnum[]
  }

  /**
   * alimentacion findFirstOrThrow
   */
  export type alimentacionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    /**
     * Filter, which alimentacion to fetch.
     */
    where?: alimentacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alimentacions to fetch.
     */
    orderBy?: alimentacionOrderByWithRelationInput | alimentacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for alimentacions.
     */
    cursor?: alimentacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alimentacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alimentacions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of alimentacions.
     */
    distinct?: AlimentacionScalarFieldEnum | AlimentacionScalarFieldEnum[]
  }

  /**
   * alimentacion findMany
   */
  export type alimentacionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    /**
     * Filter, which alimentacions to fetch.
     */
    where?: alimentacionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of alimentacions to fetch.
     */
    orderBy?: alimentacionOrderByWithRelationInput | alimentacionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing alimentacions.
     */
    cursor?: alimentacionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` alimentacions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` alimentacions.
     */
    skip?: number
    distinct?: AlimentacionScalarFieldEnum | AlimentacionScalarFieldEnum[]
  }

  /**
   * alimentacion create
   */
  export type alimentacionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    /**
     * The data needed to create a alimentacion.
     */
    data: XOR<alimentacionCreateInput, alimentacionUncheckedCreateInput>
  }

  /**
   * alimentacion createMany
   */
  export type alimentacionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many alimentacions.
     */
    data: alimentacionCreateManyInput | alimentacionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * alimentacion createManyAndReturn
   */
  export type alimentacionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * The data used to create many alimentacions.
     */
    data: alimentacionCreateManyInput | alimentacionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * alimentacion update
   */
  export type alimentacionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    /**
     * The data needed to update a alimentacion.
     */
    data: XOR<alimentacionUpdateInput, alimentacionUncheckedUpdateInput>
    /**
     * Choose, which alimentacion to update.
     */
    where: alimentacionWhereUniqueInput
  }

  /**
   * alimentacion updateMany
   */
  export type alimentacionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update alimentacions.
     */
    data: XOR<alimentacionUpdateManyMutationInput, alimentacionUncheckedUpdateManyInput>
    /**
     * Filter which alimentacions to update
     */
    where?: alimentacionWhereInput
    /**
     * Limit how many alimentacions to update.
     */
    limit?: number
  }

  /**
   * alimentacion updateManyAndReturn
   */
  export type alimentacionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * The data used to update alimentacions.
     */
    data: XOR<alimentacionUpdateManyMutationInput, alimentacionUncheckedUpdateManyInput>
    /**
     * Filter which alimentacions to update
     */
    where?: alimentacionWhereInput
    /**
     * Limit how many alimentacions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * alimentacion upsert
   */
  export type alimentacionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    /**
     * The filter to search for the alimentacion to update in case it exists.
     */
    where: alimentacionWhereUniqueInput
    /**
     * In case the alimentacion found by the `where` argument doesn't exist, create a new alimentacion with this data.
     */
    create: XOR<alimentacionCreateInput, alimentacionUncheckedCreateInput>
    /**
     * In case the alimentacion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<alimentacionUpdateInput, alimentacionUncheckedUpdateInput>
  }

  /**
   * alimentacion delete
   */
  export type alimentacionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
    /**
     * Filter which alimentacion to delete.
     */
    where: alimentacionWhereUniqueInput
  }

  /**
   * alimentacion deleteMany
   */
  export type alimentacionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which alimentacions to delete
     */
    where?: alimentacionWhereInput
    /**
     * Limit how many alimentacions to delete.
     */
    limit?: number
  }

  /**
   * alimentacion without action
   */
  export type alimentacionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the alimentacion
     */
    select?: alimentacionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the alimentacion
     */
    omit?: alimentacionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: alimentacionInclude<ExtArgs> | null
  }


  /**
   * Model pesajes
   */

  export type AggregatePesajes = {
    _count: PesajesCountAggregateOutputType | null
    _avg: PesajesAvgAggregateOutputType | null
    _sum: PesajesSumAggregateOutputType | null
    _min: PesajesMinAggregateOutputType | null
    _max: PesajesMaxAggregateOutputType | null
  }

  export type PesajesAvgAggregateOutputType = {
    pesaje_id: number | null
    usuario_operador_id: number | null
    animal_id: number | null
    unidad_id: number | null
    peso: Decimal | null
  }

  export type PesajesSumAggregateOutputType = {
    pesaje_id: number | null
    usuario_operador_id: number | null
    animal_id: number | null
    unidad_id: number | null
    peso: Decimal | null
  }

  export type PesajesMinAggregateOutputType = {
    pesaje_id: number | null
    usuario_operador_id: number | null
    animal_id: number | null
    unidad_id: number | null
    peso: Decimal | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type PesajesMaxAggregateOutputType = {
    pesaje_id: number | null
    usuario_operador_id: number | null
    animal_id: number | null
    unidad_id: number | null
    peso: Decimal | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type PesajesCountAggregateOutputType = {
    pesaje_id: number
    usuario_operador_id: number
    animal_id: number
    unidad_id: number
    peso: number
    fecha: number
    deleted_at: number
    _all: number
  }


  export type PesajesAvgAggregateInputType = {
    pesaje_id?: true
    usuario_operador_id?: true
    animal_id?: true
    unidad_id?: true
    peso?: true
  }

  export type PesajesSumAggregateInputType = {
    pesaje_id?: true
    usuario_operador_id?: true
    animal_id?: true
    unidad_id?: true
    peso?: true
  }

  export type PesajesMinAggregateInputType = {
    pesaje_id?: true
    usuario_operador_id?: true
    animal_id?: true
    unidad_id?: true
    peso?: true
    fecha?: true
    deleted_at?: true
  }

  export type PesajesMaxAggregateInputType = {
    pesaje_id?: true
    usuario_operador_id?: true
    animal_id?: true
    unidad_id?: true
    peso?: true
    fecha?: true
    deleted_at?: true
  }

  export type PesajesCountAggregateInputType = {
    pesaje_id?: true
    usuario_operador_id?: true
    animal_id?: true
    unidad_id?: true
    peso?: true
    fecha?: true
    deleted_at?: true
    _all?: true
  }

  export type PesajesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pesajes to aggregate.
     */
    where?: pesajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pesajes to fetch.
     */
    orderBy?: pesajesOrderByWithRelationInput | pesajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pesajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pesajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pesajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pesajes
    **/
    _count?: true | PesajesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PesajesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PesajesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PesajesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PesajesMaxAggregateInputType
  }

  export type GetPesajesAggregateType<T extends PesajesAggregateArgs> = {
        [P in keyof T & keyof AggregatePesajes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePesajes[P]>
      : GetScalarType<T[P], AggregatePesajes[P]>
  }




  export type pesajesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pesajesWhereInput
    orderBy?: pesajesOrderByWithAggregationInput | pesajesOrderByWithAggregationInput[]
    by: PesajesScalarFieldEnum[] | PesajesScalarFieldEnum
    having?: pesajesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PesajesCountAggregateInputType | true
    _avg?: PesajesAvgAggregateInputType
    _sum?: PesajesSumAggregateInputType
    _min?: PesajesMinAggregateInputType
    _max?: PesajesMaxAggregateInputType
  }

  export type PesajesGroupByOutputType = {
    pesaje_id: number
    usuario_operador_id: number
    animal_id: number
    unidad_id: number
    peso: Decimal
    fecha: Date
    deleted_at: Date | null
    _count: PesajesCountAggregateOutputType | null
    _avg: PesajesAvgAggregateOutputType | null
    _sum: PesajesSumAggregateOutputType | null
    _min: PesajesMinAggregateOutputType | null
    _max: PesajesMaxAggregateOutputType | null
  }

  type GetPesajesGroupByPayload<T extends pesajesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PesajesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PesajesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PesajesGroupByOutputType[P]>
            : GetScalarType<T[P], PesajesGroupByOutputType[P]>
        }
      >
    >


  export type pesajesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    pesaje_id?: boolean
    usuario_operador_id?: boolean
    animal_id?: boolean
    unidad_id?: boolean
    peso?: boolean
    fecha?: boolean
    deleted_at?: boolean
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pesajes"]>

  export type pesajesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    pesaje_id?: boolean
    usuario_operador_id?: boolean
    animal_id?: boolean
    unidad_id?: boolean
    peso?: boolean
    fecha?: boolean
    deleted_at?: boolean
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pesajes"]>

  export type pesajesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    pesaje_id?: boolean
    usuario_operador_id?: boolean
    animal_id?: boolean
    unidad_id?: boolean
    peso?: boolean
    fecha?: boolean
    deleted_at?: boolean
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pesajes"]>

  export type pesajesSelectScalar = {
    pesaje_id?: boolean
    usuario_operador_id?: boolean
    animal_id?: boolean
    unidad_id?: boolean
    peso?: boolean
    fecha?: boolean
    deleted_at?: boolean
  }

  export type pesajesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"pesaje_id" | "usuario_operador_id" | "animal_id" | "unidad_id" | "peso" | "fecha" | "deleted_at", ExtArgs["result"]["pesajes"]>
  export type pesajesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }
  export type pesajesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }
  export type pesajesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }

  export type $pesajesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pesajes"
    objects: {
      usuario: Prisma.$usuariosPayload<ExtArgs>
      animal: Prisma.$animalesPayload<ExtArgs>
      unidad: Prisma.$unidadesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      pesaje_id: number
      usuario_operador_id: number
      animal_id: number
      unidad_id: number
      peso: Prisma.Decimal
      fecha: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["pesajes"]>
    composites: {}
  }

  type pesajesGetPayload<S extends boolean | null | undefined | pesajesDefaultArgs> = $Result.GetResult<Prisma.$pesajesPayload, S>

  type pesajesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pesajesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PesajesCountAggregateInputType | true
    }

  export interface pesajesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pesajes'], meta: { name: 'pesajes' } }
    /**
     * Find zero or one Pesajes that matches the filter.
     * @param {pesajesFindUniqueArgs} args - Arguments to find a Pesajes
     * @example
     * // Get one Pesajes
     * const pesajes = await prisma.pesajes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pesajesFindUniqueArgs>(args: SelectSubset<T, pesajesFindUniqueArgs<ExtArgs>>): Prisma__pesajesClient<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pesajes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pesajesFindUniqueOrThrowArgs} args - Arguments to find a Pesajes
     * @example
     * // Get one Pesajes
     * const pesajes = await prisma.pesajes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pesajesFindUniqueOrThrowArgs>(args: SelectSubset<T, pesajesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pesajesClient<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pesajes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesajesFindFirstArgs} args - Arguments to find a Pesajes
     * @example
     * // Get one Pesajes
     * const pesajes = await prisma.pesajes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pesajesFindFirstArgs>(args?: SelectSubset<T, pesajesFindFirstArgs<ExtArgs>>): Prisma__pesajesClient<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pesajes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesajesFindFirstOrThrowArgs} args - Arguments to find a Pesajes
     * @example
     * // Get one Pesajes
     * const pesajes = await prisma.pesajes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pesajesFindFirstOrThrowArgs>(args?: SelectSubset<T, pesajesFindFirstOrThrowArgs<ExtArgs>>): Prisma__pesajesClient<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pesajes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesajesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pesajes
     * const pesajes = await prisma.pesajes.findMany()
     * 
     * // Get first 10 Pesajes
     * const pesajes = await prisma.pesajes.findMany({ take: 10 })
     * 
     * // Only select the `pesaje_id`
     * const pesajesWithPesaje_idOnly = await prisma.pesajes.findMany({ select: { pesaje_id: true } })
     * 
     */
    findMany<T extends pesajesFindManyArgs>(args?: SelectSubset<T, pesajesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pesajes.
     * @param {pesajesCreateArgs} args - Arguments to create a Pesajes.
     * @example
     * // Create one Pesajes
     * const Pesajes = await prisma.pesajes.create({
     *   data: {
     *     // ... data to create a Pesajes
     *   }
     * })
     * 
     */
    create<T extends pesajesCreateArgs>(args: SelectSubset<T, pesajesCreateArgs<ExtArgs>>): Prisma__pesajesClient<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pesajes.
     * @param {pesajesCreateManyArgs} args - Arguments to create many Pesajes.
     * @example
     * // Create many Pesajes
     * const pesajes = await prisma.pesajes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pesajesCreateManyArgs>(args?: SelectSubset<T, pesajesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pesajes and returns the data saved in the database.
     * @param {pesajesCreateManyAndReturnArgs} args - Arguments to create many Pesajes.
     * @example
     * // Create many Pesajes
     * const pesajes = await prisma.pesajes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pesajes and only return the `pesaje_id`
     * const pesajesWithPesaje_idOnly = await prisma.pesajes.createManyAndReturn({
     *   select: { pesaje_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pesajesCreateManyAndReturnArgs>(args?: SelectSubset<T, pesajesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pesajes.
     * @param {pesajesDeleteArgs} args - Arguments to delete one Pesajes.
     * @example
     * // Delete one Pesajes
     * const Pesajes = await prisma.pesajes.delete({
     *   where: {
     *     // ... filter to delete one Pesajes
     *   }
     * })
     * 
     */
    delete<T extends pesajesDeleteArgs>(args: SelectSubset<T, pesajesDeleteArgs<ExtArgs>>): Prisma__pesajesClient<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pesajes.
     * @param {pesajesUpdateArgs} args - Arguments to update one Pesajes.
     * @example
     * // Update one Pesajes
     * const pesajes = await prisma.pesajes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pesajesUpdateArgs>(args: SelectSubset<T, pesajesUpdateArgs<ExtArgs>>): Prisma__pesajesClient<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pesajes.
     * @param {pesajesDeleteManyArgs} args - Arguments to filter Pesajes to delete.
     * @example
     * // Delete a few Pesajes
     * const { count } = await prisma.pesajes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pesajesDeleteManyArgs>(args?: SelectSubset<T, pesajesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pesajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesajesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pesajes
     * const pesajes = await prisma.pesajes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pesajesUpdateManyArgs>(args: SelectSubset<T, pesajesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pesajes and returns the data updated in the database.
     * @param {pesajesUpdateManyAndReturnArgs} args - Arguments to update many Pesajes.
     * @example
     * // Update many Pesajes
     * const pesajes = await prisma.pesajes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pesajes and only return the `pesaje_id`
     * const pesajesWithPesaje_idOnly = await prisma.pesajes.updateManyAndReturn({
     *   select: { pesaje_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pesajesUpdateManyAndReturnArgs>(args: SelectSubset<T, pesajesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pesajes.
     * @param {pesajesUpsertArgs} args - Arguments to update or create a Pesajes.
     * @example
     * // Update or create a Pesajes
     * const pesajes = await prisma.pesajes.upsert({
     *   create: {
     *     // ... data to create a Pesajes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pesajes we want to update
     *   }
     * })
     */
    upsert<T extends pesajesUpsertArgs>(args: SelectSubset<T, pesajesUpsertArgs<ExtArgs>>): Prisma__pesajesClient<$Result.GetResult<Prisma.$pesajesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pesajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesajesCountArgs} args - Arguments to filter Pesajes to count.
     * @example
     * // Count the number of Pesajes
     * const count = await prisma.pesajes.count({
     *   where: {
     *     // ... the filter for the Pesajes we want to count
     *   }
     * })
    **/
    count<T extends pesajesCountArgs>(
      args?: Subset<T, pesajesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PesajesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pesajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PesajesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PesajesAggregateArgs>(args: Subset<T, PesajesAggregateArgs>): Prisma.PrismaPromise<GetPesajesAggregateType<T>>

    /**
     * Group by Pesajes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pesajesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pesajesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pesajesGroupByArgs['orderBy'] }
        : { orderBy?: pesajesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pesajesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPesajesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pesajes model
   */
  readonly fields: pesajesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pesajes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pesajesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    animal<T extends animalesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, animalesDefaultArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    unidad<T extends unidadesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, unidadesDefaultArgs<ExtArgs>>): Prisma__unidadesClient<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pesajes model
   */
  interface pesajesFieldRefs {
    readonly pesaje_id: FieldRef<"pesajes", 'Int'>
    readonly usuario_operador_id: FieldRef<"pesajes", 'Int'>
    readonly animal_id: FieldRef<"pesajes", 'Int'>
    readonly unidad_id: FieldRef<"pesajes", 'Int'>
    readonly peso: FieldRef<"pesajes", 'Decimal'>
    readonly fecha: FieldRef<"pesajes", 'DateTime'>
    readonly deleted_at: FieldRef<"pesajes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * pesajes findUnique
   */
  export type pesajesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    /**
     * Filter, which pesajes to fetch.
     */
    where: pesajesWhereUniqueInput
  }

  /**
   * pesajes findUniqueOrThrow
   */
  export type pesajesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    /**
     * Filter, which pesajes to fetch.
     */
    where: pesajesWhereUniqueInput
  }

  /**
   * pesajes findFirst
   */
  export type pesajesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    /**
     * Filter, which pesajes to fetch.
     */
    where?: pesajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pesajes to fetch.
     */
    orderBy?: pesajesOrderByWithRelationInput | pesajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pesajes.
     */
    cursor?: pesajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pesajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pesajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pesajes.
     */
    distinct?: PesajesScalarFieldEnum | PesajesScalarFieldEnum[]
  }

  /**
   * pesajes findFirstOrThrow
   */
  export type pesajesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    /**
     * Filter, which pesajes to fetch.
     */
    where?: pesajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pesajes to fetch.
     */
    orderBy?: pesajesOrderByWithRelationInput | pesajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pesajes.
     */
    cursor?: pesajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pesajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pesajes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pesajes.
     */
    distinct?: PesajesScalarFieldEnum | PesajesScalarFieldEnum[]
  }

  /**
   * pesajes findMany
   */
  export type pesajesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    /**
     * Filter, which pesajes to fetch.
     */
    where?: pesajesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pesajes to fetch.
     */
    orderBy?: pesajesOrderByWithRelationInput | pesajesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pesajes.
     */
    cursor?: pesajesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pesajes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pesajes.
     */
    skip?: number
    distinct?: PesajesScalarFieldEnum | PesajesScalarFieldEnum[]
  }

  /**
   * pesajes create
   */
  export type pesajesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    /**
     * The data needed to create a pesajes.
     */
    data: XOR<pesajesCreateInput, pesajesUncheckedCreateInput>
  }

  /**
   * pesajes createMany
   */
  export type pesajesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pesajes.
     */
    data: pesajesCreateManyInput | pesajesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pesajes createManyAndReturn
   */
  export type pesajesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * The data used to create many pesajes.
     */
    data: pesajesCreateManyInput | pesajesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * pesajes update
   */
  export type pesajesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    /**
     * The data needed to update a pesajes.
     */
    data: XOR<pesajesUpdateInput, pesajesUncheckedUpdateInput>
    /**
     * Choose, which pesajes to update.
     */
    where: pesajesWhereUniqueInput
  }

  /**
   * pesajes updateMany
   */
  export type pesajesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pesajes.
     */
    data: XOR<pesajesUpdateManyMutationInput, pesajesUncheckedUpdateManyInput>
    /**
     * Filter which pesajes to update
     */
    where?: pesajesWhereInput
    /**
     * Limit how many pesajes to update.
     */
    limit?: number
  }

  /**
   * pesajes updateManyAndReturn
   */
  export type pesajesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * The data used to update pesajes.
     */
    data: XOR<pesajesUpdateManyMutationInput, pesajesUncheckedUpdateManyInput>
    /**
     * Filter which pesajes to update
     */
    where?: pesajesWhereInput
    /**
     * Limit how many pesajes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * pesajes upsert
   */
  export type pesajesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    /**
     * The filter to search for the pesajes to update in case it exists.
     */
    where: pesajesWhereUniqueInput
    /**
     * In case the pesajes found by the `where` argument doesn't exist, create a new pesajes with this data.
     */
    create: XOR<pesajesCreateInput, pesajesUncheckedCreateInput>
    /**
     * In case the pesajes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pesajesUpdateInput, pesajesUncheckedUpdateInput>
  }

  /**
   * pesajes delete
   */
  export type pesajesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
    /**
     * Filter which pesajes to delete.
     */
    where: pesajesWhereUniqueInput
  }

  /**
   * pesajes deleteMany
   */
  export type pesajesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pesajes to delete
     */
    where?: pesajesWhereInput
    /**
     * Limit how many pesajes to delete.
     */
    limit?: number
  }

  /**
   * pesajes without action
   */
  export type pesajesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pesajes
     */
    select?: pesajesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pesajes
     */
    omit?: pesajesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: pesajesInclude<ExtArgs> | null
  }


  /**
   * Model produccion_carne
   */

  export type AggregateProduccion_carne = {
    _count: Produccion_carneCountAggregateOutputType | null
    _avg: Produccion_carneAvgAggregateOutputType | null
    _sum: Produccion_carneSumAggregateOutputType | null
    _min: Produccion_carneMinAggregateOutputType | null
    _max: Produccion_carneMaxAggregateOutputType | null
  }

  export type Produccion_carneAvgAggregateOutputType = {
    produccion_id: number | null
    animal_id: number | null
    usuario_operador_id: number | null
  }

  export type Produccion_carneSumAggregateOutputType = {
    produccion_id: number | null
    animal_id: number | null
    usuario_operador_id: number | null
  }

  export type Produccion_carneMinAggregateOutputType = {
    produccion_id: number | null
    animal_id: number | null
    usuario_operador_id: number | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type Produccion_carneMaxAggregateOutputType = {
    produccion_id: number | null
    animal_id: number | null
    usuario_operador_id: number | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type Produccion_carneCountAggregateOutputType = {
    produccion_id: number
    animal_id: number
    usuario_operador_id: number
    fecha: number
    deleted_at: number
    _all: number
  }


  export type Produccion_carneAvgAggregateInputType = {
    produccion_id?: true
    animal_id?: true
    usuario_operador_id?: true
  }

  export type Produccion_carneSumAggregateInputType = {
    produccion_id?: true
    animal_id?: true
    usuario_operador_id?: true
  }

  export type Produccion_carneMinAggregateInputType = {
    produccion_id?: true
    animal_id?: true
    usuario_operador_id?: true
    fecha?: true
    deleted_at?: true
  }

  export type Produccion_carneMaxAggregateInputType = {
    produccion_id?: true
    animal_id?: true
    usuario_operador_id?: true
    fecha?: true
    deleted_at?: true
  }

  export type Produccion_carneCountAggregateInputType = {
    produccion_id?: true
    animal_id?: true
    usuario_operador_id?: true
    fecha?: true
    deleted_at?: true
    _all?: true
  }

  export type Produccion_carneAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which produccion_carne to aggregate.
     */
    where?: produccion_carneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produccion_carnes to fetch.
     */
    orderBy?: produccion_carneOrderByWithRelationInput | produccion_carneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: produccion_carneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produccion_carnes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produccion_carnes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned produccion_carnes
    **/
    _count?: true | Produccion_carneCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Produccion_carneAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Produccion_carneSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Produccion_carneMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Produccion_carneMaxAggregateInputType
  }

  export type GetProduccion_carneAggregateType<T extends Produccion_carneAggregateArgs> = {
        [P in keyof T & keyof AggregateProduccion_carne]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduccion_carne[P]>
      : GetScalarType<T[P], AggregateProduccion_carne[P]>
  }




  export type produccion_carneGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produccion_carneWhereInput
    orderBy?: produccion_carneOrderByWithAggregationInput | produccion_carneOrderByWithAggregationInput[]
    by: Produccion_carneScalarFieldEnum[] | Produccion_carneScalarFieldEnum
    having?: produccion_carneScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Produccion_carneCountAggregateInputType | true
    _avg?: Produccion_carneAvgAggregateInputType
    _sum?: Produccion_carneSumAggregateInputType
    _min?: Produccion_carneMinAggregateInputType
    _max?: Produccion_carneMaxAggregateInputType
  }

  export type Produccion_carneGroupByOutputType = {
    produccion_id: number
    animal_id: number
    usuario_operador_id: number
    fecha: Date
    deleted_at: Date | null
    _count: Produccion_carneCountAggregateOutputType | null
    _avg: Produccion_carneAvgAggregateOutputType | null
    _sum: Produccion_carneSumAggregateOutputType | null
    _min: Produccion_carneMinAggregateOutputType | null
    _max: Produccion_carneMaxAggregateOutputType | null
  }

  type GetProduccion_carneGroupByPayload<T extends produccion_carneGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Produccion_carneGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Produccion_carneGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Produccion_carneGroupByOutputType[P]>
            : GetScalarType<T[P], Produccion_carneGroupByOutputType[P]>
        }
      >
    >


  export type produccion_carneSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    produccion_id?: boolean
    animal_id?: boolean
    usuario_operador_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["produccion_carne"]>

  export type produccion_carneSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    produccion_id?: boolean
    animal_id?: boolean
    usuario_operador_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["produccion_carne"]>

  export type produccion_carneSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    produccion_id?: boolean
    animal_id?: boolean
    usuario_operador_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["produccion_carne"]>

  export type produccion_carneSelectScalar = {
    produccion_id?: boolean
    animal_id?: boolean
    usuario_operador_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
  }

  export type produccion_carneOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"produccion_id" | "animal_id" | "usuario_operador_id" | "fecha" | "deleted_at", ExtArgs["result"]["produccion_carne"]>
  export type produccion_carneInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type produccion_carneIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type produccion_carneIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $produccion_carnePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "produccion_carne"
    objects: {
      animal: Prisma.$animalesPayload<ExtArgs>
      usuario: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      produccion_id: number
      animal_id: number
      usuario_operador_id: number
      fecha: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["produccion_carne"]>
    composites: {}
  }

  type produccion_carneGetPayload<S extends boolean | null | undefined | produccion_carneDefaultArgs> = $Result.GetResult<Prisma.$produccion_carnePayload, S>

  type produccion_carneCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<produccion_carneFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Produccion_carneCountAggregateInputType | true
    }

  export interface produccion_carneDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['produccion_carne'], meta: { name: 'produccion_carne' } }
    /**
     * Find zero or one Produccion_carne that matches the filter.
     * @param {produccion_carneFindUniqueArgs} args - Arguments to find a Produccion_carne
     * @example
     * // Get one Produccion_carne
     * const produccion_carne = await prisma.produccion_carne.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends produccion_carneFindUniqueArgs>(args: SelectSubset<T, produccion_carneFindUniqueArgs<ExtArgs>>): Prisma__produccion_carneClient<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Produccion_carne that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {produccion_carneFindUniqueOrThrowArgs} args - Arguments to find a Produccion_carne
     * @example
     * // Get one Produccion_carne
     * const produccion_carne = await prisma.produccion_carne.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends produccion_carneFindUniqueOrThrowArgs>(args: SelectSubset<T, produccion_carneFindUniqueOrThrowArgs<ExtArgs>>): Prisma__produccion_carneClient<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Produccion_carne that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_carneFindFirstArgs} args - Arguments to find a Produccion_carne
     * @example
     * // Get one Produccion_carne
     * const produccion_carne = await prisma.produccion_carne.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends produccion_carneFindFirstArgs>(args?: SelectSubset<T, produccion_carneFindFirstArgs<ExtArgs>>): Prisma__produccion_carneClient<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Produccion_carne that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_carneFindFirstOrThrowArgs} args - Arguments to find a Produccion_carne
     * @example
     * // Get one Produccion_carne
     * const produccion_carne = await prisma.produccion_carne.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends produccion_carneFindFirstOrThrowArgs>(args?: SelectSubset<T, produccion_carneFindFirstOrThrowArgs<ExtArgs>>): Prisma__produccion_carneClient<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Produccion_carnes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_carneFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Produccion_carnes
     * const produccion_carnes = await prisma.produccion_carne.findMany()
     * 
     * // Get first 10 Produccion_carnes
     * const produccion_carnes = await prisma.produccion_carne.findMany({ take: 10 })
     * 
     * // Only select the `produccion_id`
     * const produccion_carneWithProduccion_idOnly = await prisma.produccion_carne.findMany({ select: { produccion_id: true } })
     * 
     */
    findMany<T extends produccion_carneFindManyArgs>(args?: SelectSubset<T, produccion_carneFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Produccion_carne.
     * @param {produccion_carneCreateArgs} args - Arguments to create a Produccion_carne.
     * @example
     * // Create one Produccion_carne
     * const Produccion_carne = await prisma.produccion_carne.create({
     *   data: {
     *     // ... data to create a Produccion_carne
     *   }
     * })
     * 
     */
    create<T extends produccion_carneCreateArgs>(args: SelectSubset<T, produccion_carneCreateArgs<ExtArgs>>): Prisma__produccion_carneClient<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Produccion_carnes.
     * @param {produccion_carneCreateManyArgs} args - Arguments to create many Produccion_carnes.
     * @example
     * // Create many Produccion_carnes
     * const produccion_carne = await prisma.produccion_carne.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends produccion_carneCreateManyArgs>(args?: SelectSubset<T, produccion_carneCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Produccion_carnes and returns the data saved in the database.
     * @param {produccion_carneCreateManyAndReturnArgs} args - Arguments to create many Produccion_carnes.
     * @example
     * // Create many Produccion_carnes
     * const produccion_carne = await prisma.produccion_carne.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Produccion_carnes and only return the `produccion_id`
     * const produccion_carneWithProduccion_idOnly = await prisma.produccion_carne.createManyAndReturn({
     *   select: { produccion_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends produccion_carneCreateManyAndReturnArgs>(args?: SelectSubset<T, produccion_carneCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Produccion_carne.
     * @param {produccion_carneDeleteArgs} args - Arguments to delete one Produccion_carne.
     * @example
     * // Delete one Produccion_carne
     * const Produccion_carne = await prisma.produccion_carne.delete({
     *   where: {
     *     // ... filter to delete one Produccion_carne
     *   }
     * })
     * 
     */
    delete<T extends produccion_carneDeleteArgs>(args: SelectSubset<T, produccion_carneDeleteArgs<ExtArgs>>): Prisma__produccion_carneClient<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Produccion_carne.
     * @param {produccion_carneUpdateArgs} args - Arguments to update one Produccion_carne.
     * @example
     * // Update one Produccion_carne
     * const produccion_carne = await prisma.produccion_carne.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends produccion_carneUpdateArgs>(args: SelectSubset<T, produccion_carneUpdateArgs<ExtArgs>>): Prisma__produccion_carneClient<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Produccion_carnes.
     * @param {produccion_carneDeleteManyArgs} args - Arguments to filter Produccion_carnes to delete.
     * @example
     * // Delete a few Produccion_carnes
     * const { count } = await prisma.produccion_carne.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends produccion_carneDeleteManyArgs>(args?: SelectSubset<T, produccion_carneDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Produccion_carnes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_carneUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Produccion_carnes
     * const produccion_carne = await prisma.produccion_carne.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends produccion_carneUpdateManyArgs>(args: SelectSubset<T, produccion_carneUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Produccion_carnes and returns the data updated in the database.
     * @param {produccion_carneUpdateManyAndReturnArgs} args - Arguments to update many Produccion_carnes.
     * @example
     * // Update many Produccion_carnes
     * const produccion_carne = await prisma.produccion_carne.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Produccion_carnes and only return the `produccion_id`
     * const produccion_carneWithProduccion_idOnly = await prisma.produccion_carne.updateManyAndReturn({
     *   select: { produccion_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends produccion_carneUpdateManyAndReturnArgs>(args: SelectSubset<T, produccion_carneUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Produccion_carne.
     * @param {produccion_carneUpsertArgs} args - Arguments to update or create a Produccion_carne.
     * @example
     * // Update or create a Produccion_carne
     * const produccion_carne = await prisma.produccion_carne.upsert({
     *   create: {
     *     // ... data to create a Produccion_carne
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Produccion_carne we want to update
     *   }
     * })
     */
    upsert<T extends produccion_carneUpsertArgs>(args: SelectSubset<T, produccion_carneUpsertArgs<ExtArgs>>): Prisma__produccion_carneClient<$Result.GetResult<Prisma.$produccion_carnePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Produccion_carnes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_carneCountArgs} args - Arguments to filter Produccion_carnes to count.
     * @example
     * // Count the number of Produccion_carnes
     * const count = await prisma.produccion_carne.count({
     *   where: {
     *     // ... the filter for the Produccion_carnes we want to count
     *   }
     * })
    **/
    count<T extends produccion_carneCountArgs>(
      args?: Subset<T, produccion_carneCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Produccion_carneCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Produccion_carne.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Produccion_carneAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Produccion_carneAggregateArgs>(args: Subset<T, Produccion_carneAggregateArgs>): Prisma.PrismaPromise<GetProduccion_carneAggregateType<T>>

    /**
     * Group by Produccion_carne.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_carneGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends produccion_carneGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: produccion_carneGroupByArgs['orderBy'] }
        : { orderBy?: produccion_carneGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, produccion_carneGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduccion_carneGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the produccion_carne model
   */
  readonly fields: produccion_carneFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for produccion_carne.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__produccion_carneClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    animal<T extends animalesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, animalesDefaultArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    usuario<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the produccion_carne model
   */
  interface produccion_carneFieldRefs {
    readonly produccion_id: FieldRef<"produccion_carne", 'Int'>
    readonly animal_id: FieldRef<"produccion_carne", 'Int'>
    readonly usuario_operador_id: FieldRef<"produccion_carne", 'Int'>
    readonly fecha: FieldRef<"produccion_carne", 'DateTime'>
    readonly deleted_at: FieldRef<"produccion_carne", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * produccion_carne findUnique
   */
  export type produccion_carneFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
    /**
     * Filter, which produccion_carne to fetch.
     */
    where: produccion_carneWhereUniqueInput
  }

  /**
   * produccion_carne findUniqueOrThrow
   */
  export type produccion_carneFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
    /**
     * Filter, which produccion_carne to fetch.
     */
    where: produccion_carneWhereUniqueInput
  }

  /**
   * produccion_carne findFirst
   */
  export type produccion_carneFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
    /**
     * Filter, which produccion_carne to fetch.
     */
    where?: produccion_carneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produccion_carnes to fetch.
     */
    orderBy?: produccion_carneOrderByWithRelationInput | produccion_carneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for produccion_carnes.
     */
    cursor?: produccion_carneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produccion_carnes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produccion_carnes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of produccion_carnes.
     */
    distinct?: Produccion_carneScalarFieldEnum | Produccion_carneScalarFieldEnum[]
  }

  /**
   * produccion_carne findFirstOrThrow
   */
  export type produccion_carneFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
    /**
     * Filter, which produccion_carne to fetch.
     */
    where?: produccion_carneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produccion_carnes to fetch.
     */
    orderBy?: produccion_carneOrderByWithRelationInput | produccion_carneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for produccion_carnes.
     */
    cursor?: produccion_carneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produccion_carnes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produccion_carnes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of produccion_carnes.
     */
    distinct?: Produccion_carneScalarFieldEnum | Produccion_carneScalarFieldEnum[]
  }

  /**
   * produccion_carne findMany
   */
  export type produccion_carneFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
    /**
     * Filter, which produccion_carnes to fetch.
     */
    where?: produccion_carneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produccion_carnes to fetch.
     */
    orderBy?: produccion_carneOrderByWithRelationInput | produccion_carneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing produccion_carnes.
     */
    cursor?: produccion_carneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produccion_carnes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produccion_carnes.
     */
    skip?: number
    distinct?: Produccion_carneScalarFieldEnum | Produccion_carneScalarFieldEnum[]
  }

  /**
   * produccion_carne create
   */
  export type produccion_carneCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
    /**
     * The data needed to create a produccion_carne.
     */
    data: XOR<produccion_carneCreateInput, produccion_carneUncheckedCreateInput>
  }

  /**
   * produccion_carne createMany
   */
  export type produccion_carneCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many produccion_carnes.
     */
    data: produccion_carneCreateManyInput | produccion_carneCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * produccion_carne createManyAndReturn
   */
  export type produccion_carneCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * The data used to create many produccion_carnes.
     */
    data: produccion_carneCreateManyInput | produccion_carneCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * produccion_carne update
   */
  export type produccion_carneUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
    /**
     * The data needed to update a produccion_carne.
     */
    data: XOR<produccion_carneUpdateInput, produccion_carneUncheckedUpdateInput>
    /**
     * Choose, which produccion_carne to update.
     */
    where: produccion_carneWhereUniqueInput
  }

  /**
   * produccion_carne updateMany
   */
  export type produccion_carneUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update produccion_carnes.
     */
    data: XOR<produccion_carneUpdateManyMutationInput, produccion_carneUncheckedUpdateManyInput>
    /**
     * Filter which produccion_carnes to update
     */
    where?: produccion_carneWhereInput
    /**
     * Limit how many produccion_carnes to update.
     */
    limit?: number
  }

  /**
   * produccion_carne updateManyAndReturn
   */
  export type produccion_carneUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * The data used to update produccion_carnes.
     */
    data: XOR<produccion_carneUpdateManyMutationInput, produccion_carneUncheckedUpdateManyInput>
    /**
     * Filter which produccion_carnes to update
     */
    where?: produccion_carneWhereInput
    /**
     * Limit how many produccion_carnes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * produccion_carne upsert
   */
  export type produccion_carneUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
    /**
     * The filter to search for the produccion_carne to update in case it exists.
     */
    where: produccion_carneWhereUniqueInput
    /**
     * In case the produccion_carne found by the `where` argument doesn't exist, create a new produccion_carne with this data.
     */
    create: XOR<produccion_carneCreateInput, produccion_carneUncheckedCreateInput>
    /**
     * In case the produccion_carne was found with the provided `where` argument, update it with this data.
     */
    update: XOR<produccion_carneUpdateInput, produccion_carneUncheckedUpdateInput>
  }

  /**
   * produccion_carne delete
   */
  export type produccion_carneDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
    /**
     * Filter which produccion_carne to delete.
     */
    where: produccion_carneWhereUniqueInput
  }

  /**
   * produccion_carne deleteMany
   */
  export type produccion_carneDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which produccion_carnes to delete
     */
    where?: produccion_carneWhereInput
    /**
     * Limit how many produccion_carnes to delete.
     */
    limit?: number
  }

  /**
   * produccion_carne without action
   */
  export type produccion_carneDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_carne
     */
    select?: produccion_carneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_carne
     */
    omit?: produccion_carneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_carneInclude<ExtArgs> | null
  }


  /**
   * Model produccion_lechera
   */

  export type AggregateProduccion_lechera = {
    _count: Produccion_lecheraCountAggregateOutputType | null
    _avg: Produccion_lecheraAvgAggregateOutputType | null
    _sum: Produccion_lecheraSumAggregateOutputType | null
    _min: Produccion_lecheraMinAggregateOutputType | null
    _max: Produccion_lecheraMaxAggregateOutputType | null
  }

  export type Produccion_lecheraAvgAggregateOutputType = {
    produccion_id: number | null
    usuario_ordeño_id: number | null
    animal_id: number | null
    cantidad: number | null
    unidad_id: number | null
  }

  export type Produccion_lecheraSumAggregateOutputType = {
    produccion_id: number | null
    usuario_ordeño_id: number | null
    animal_id: number | null
    cantidad: number | null
    unidad_id: number | null
  }

  export type Produccion_lecheraMinAggregateOutputType = {
    produccion_id: number | null
    usuario_ordeño_id: number | null
    animal_id: number | null
    cantidad: number | null
    unidad_id: number | null
    fecha: Date | null
    descripcion: string | null
    deleted_at: Date | null
  }

  export type Produccion_lecheraMaxAggregateOutputType = {
    produccion_id: number | null
    usuario_ordeño_id: number | null
    animal_id: number | null
    cantidad: number | null
    unidad_id: number | null
    fecha: Date | null
    descripcion: string | null
    deleted_at: Date | null
  }

  export type Produccion_lecheraCountAggregateOutputType = {
    produccion_id: number
    usuario_ordeño_id: number
    animal_id: number
    cantidad: number
    unidad_id: number
    fecha: number
    descripcion: number
    deleted_at: number
    _all: number
  }


  export type Produccion_lecheraAvgAggregateInputType = {
    produccion_id?: true
    usuario_ordeño_id?: true
    animal_id?: true
    cantidad?: true
    unidad_id?: true
  }

  export type Produccion_lecheraSumAggregateInputType = {
    produccion_id?: true
    usuario_ordeño_id?: true
    animal_id?: true
    cantidad?: true
    unidad_id?: true
  }

  export type Produccion_lecheraMinAggregateInputType = {
    produccion_id?: true
    usuario_ordeño_id?: true
    animal_id?: true
    cantidad?: true
    unidad_id?: true
    fecha?: true
    descripcion?: true
    deleted_at?: true
  }

  export type Produccion_lecheraMaxAggregateInputType = {
    produccion_id?: true
    usuario_ordeño_id?: true
    animal_id?: true
    cantidad?: true
    unidad_id?: true
    fecha?: true
    descripcion?: true
    deleted_at?: true
  }

  export type Produccion_lecheraCountAggregateInputType = {
    produccion_id?: true
    usuario_ordeño_id?: true
    animal_id?: true
    cantidad?: true
    unidad_id?: true
    fecha?: true
    descripcion?: true
    deleted_at?: true
    _all?: true
  }

  export type Produccion_lecheraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which produccion_lechera to aggregate.
     */
    where?: produccion_lecheraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produccion_lecheras to fetch.
     */
    orderBy?: produccion_lecheraOrderByWithRelationInput | produccion_lecheraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: produccion_lecheraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produccion_lecheras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produccion_lecheras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned produccion_lecheras
    **/
    _count?: true | Produccion_lecheraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Produccion_lecheraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Produccion_lecheraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Produccion_lecheraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Produccion_lecheraMaxAggregateInputType
  }

  export type GetProduccion_lecheraAggregateType<T extends Produccion_lecheraAggregateArgs> = {
        [P in keyof T & keyof AggregateProduccion_lechera]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduccion_lechera[P]>
      : GetScalarType<T[P], AggregateProduccion_lechera[P]>
  }




  export type produccion_lecheraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: produccion_lecheraWhereInput
    orderBy?: produccion_lecheraOrderByWithAggregationInput | produccion_lecheraOrderByWithAggregationInput[]
    by: Produccion_lecheraScalarFieldEnum[] | Produccion_lecheraScalarFieldEnum
    having?: produccion_lecheraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Produccion_lecheraCountAggregateInputType | true
    _avg?: Produccion_lecheraAvgAggregateInputType
    _sum?: Produccion_lecheraSumAggregateInputType
    _min?: Produccion_lecheraMinAggregateInputType
    _max?: Produccion_lecheraMaxAggregateInputType
  }

  export type Produccion_lecheraGroupByOutputType = {
    produccion_id: number
    usuario_ordeño_id: number
    animal_id: number
    cantidad: number
    unidad_id: number
    fecha: Date
    descripcion: string | null
    deleted_at: Date | null
    _count: Produccion_lecheraCountAggregateOutputType | null
    _avg: Produccion_lecheraAvgAggregateOutputType | null
    _sum: Produccion_lecheraSumAggregateOutputType | null
    _min: Produccion_lecheraMinAggregateOutputType | null
    _max: Produccion_lecheraMaxAggregateOutputType | null
  }

  type GetProduccion_lecheraGroupByPayload<T extends produccion_lecheraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Produccion_lecheraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Produccion_lecheraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Produccion_lecheraGroupByOutputType[P]>
            : GetScalarType<T[P], Produccion_lecheraGroupByOutputType[P]>
        }
      >
    >


  export type produccion_lecheraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    produccion_id?: boolean
    usuario_ordeño_id?: boolean
    animal_id?: boolean
    cantidad?: boolean
    unidad_id?: boolean
    fecha?: boolean
    descripcion?: boolean
    deleted_at?: boolean
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["produccion_lechera"]>

  export type produccion_lecheraSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    produccion_id?: boolean
    usuario_ordeño_id?: boolean
    animal_id?: boolean
    cantidad?: boolean
    unidad_id?: boolean
    fecha?: boolean
    descripcion?: boolean
    deleted_at?: boolean
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["produccion_lechera"]>

  export type produccion_lecheraSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    produccion_id?: boolean
    usuario_ordeño_id?: boolean
    animal_id?: boolean
    cantidad?: boolean
    unidad_id?: boolean
    fecha?: boolean
    descripcion?: boolean
    deleted_at?: boolean
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["produccion_lechera"]>

  export type produccion_lecheraSelectScalar = {
    produccion_id?: boolean
    usuario_ordeño_id?: boolean
    animal_id?: boolean
    cantidad?: boolean
    unidad_id?: boolean
    fecha?: boolean
    descripcion?: boolean
    deleted_at?: boolean
  }

  export type produccion_lecheraOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"produccion_id" | "usuario_ordeño_id" | "animal_id" | "cantidad" | "unidad_id" | "fecha" | "descripcion" | "deleted_at", ExtArgs["result"]["produccion_lechera"]>
  export type produccion_lecheraInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }
  export type produccion_lecheraIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }
  export type produccion_lecheraIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | usuariosDefaultArgs<ExtArgs>
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    unidad?: boolean | unidadesDefaultArgs<ExtArgs>
  }

  export type $produccion_lecheraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "produccion_lechera"
    objects: {
      usuario: Prisma.$usuariosPayload<ExtArgs>
      animal: Prisma.$animalesPayload<ExtArgs>
      unidad: Prisma.$unidadesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      produccion_id: number
      usuario_ordeño_id: number
      animal_id: number
      cantidad: number
      unidad_id: number
      fecha: Date
      descripcion: string | null
      deleted_at: Date | null
    }, ExtArgs["result"]["produccion_lechera"]>
    composites: {}
  }

  type produccion_lecheraGetPayload<S extends boolean | null | undefined | produccion_lecheraDefaultArgs> = $Result.GetResult<Prisma.$produccion_lecheraPayload, S>

  type produccion_lecheraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<produccion_lecheraFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Produccion_lecheraCountAggregateInputType | true
    }

  export interface produccion_lecheraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['produccion_lechera'], meta: { name: 'produccion_lechera' } }
    /**
     * Find zero or one Produccion_lechera that matches the filter.
     * @param {produccion_lecheraFindUniqueArgs} args - Arguments to find a Produccion_lechera
     * @example
     * // Get one Produccion_lechera
     * const produccion_lechera = await prisma.produccion_lechera.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends produccion_lecheraFindUniqueArgs>(args: SelectSubset<T, produccion_lecheraFindUniqueArgs<ExtArgs>>): Prisma__produccion_lecheraClient<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Produccion_lechera that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {produccion_lecheraFindUniqueOrThrowArgs} args - Arguments to find a Produccion_lechera
     * @example
     * // Get one Produccion_lechera
     * const produccion_lechera = await prisma.produccion_lechera.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends produccion_lecheraFindUniqueOrThrowArgs>(args: SelectSubset<T, produccion_lecheraFindUniqueOrThrowArgs<ExtArgs>>): Prisma__produccion_lecheraClient<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Produccion_lechera that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_lecheraFindFirstArgs} args - Arguments to find a Produccion_lechera
     * @example
     * // Get one Produccion_lechera
     * const produccion_lechera = await prisma.produccion_lechera.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends produccion_lecheraFindFirstArgs>(args?: SelectSubset<T, produccion_lecheraFindFirstArgs<ExtArgs>>): Prisma__produccion_lecheraClient<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Produccion_lechera that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_lecheraFindFirstOrThrowArgs} args - Arguments to find a Produccion_lechera
     * @example
     * // Get one Produccion_lechera
     * const produccion_lechera = await prisma.produccion_lechera.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends produccion_lecheraFindFirstOrThrowArgs>(args?: SelectSubset<T, produccion_lecheraFindFirstOrThrowArgs<ExtArgs>>): Prisma__produccion_lecheraClient<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Produccion_lecheras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_lecheraFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Produccion_lecheras
     * const produccion_lecheras = await prisma.produccion_lechera.findMany()
     * 
     * // Get first 10 Produccion_lecheras
     * const produccion_lecheras = await prisma.produccion_lechera.findMany({ take: 10 })
     * 
     * // Only select the `produccion_id`
     * const produccion_lecheraWithProduccion_idOnly = await prisma.produccion_lechera.findMany({ select: { produccion_id: true } })
     * 
     */
    findMany<T extends produccion_lecheraFindManyArgs>(args?: SelectSubset<T, produccion_lecheraFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Produccion_lechera.
     * @param {produccion_lecheraCreateArgs} args - Arguments to create a Produccion_lechera.
     * @example
     * // Create one Produccion_lechera
     * const Produccion_lechera = await prisma.produccion_lechera.create({
     *   data: {
     *     // ... data to create a Produccion_lechera
     *   }
     * })
     * 
     */
    create<T extends produccion_lecheraCreateArgs>(args: SelectSubset<T, produccion_lecheraCreateArgs<ExtArgs>>): Prisma__produccion_lecheraClient<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Produccion_lecheras.
     * @param {produccion_lecheraCreateManyArgs} args - Arguments to create many Produccion_lecheras.
     * @example
     * // Create many Produccion_lecheras
     * const produccion_lechera = await prisma.produccion_lechera.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends produccion_lecheraCreateManyArgs>(args?: SelectSubset<T, produccion_lecheraCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Produccion_lecheras and returns the data saved in the database.
     * @param {produccion_lecheraCreateManyAndReturnArgs} args - Arguments to create many Produccion_lecheras.
     * @example
     * // Create many Produccion_lecheras
     * const produccion_lechera = await prisma.produccion_lechera.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Produccion_lecheras and only return the `produccion_id`
     * const produccion_lecheraWithProduccion_idOnly = await prisma.produccion_lechera.createManyAndReturn({
     *   select: { produccion_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends produccion_lecheraCreateManyAndReturnArgs>(args?: SelectSubset<T, produccion_lecheraCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Produccion_lechera.
     * @param {produccion_lecheraDeleteArgs} args - Arguments to delete one Produccion_lechera.
     * @example
     * // Delete one Produccion_lechera
     * const Produccion_lechera = await prisma.produccion_lechera.delete({
     *   where: {
     *     // ... filter to delete one Produccion_lechera
     *   }
     * })
     * 
     */
    delete<T extends produccion_lecheraDeleteArgs>(args: SelectSubset<T, produccion_lecheraDeleteArgs<ExtArgs>>): Prisma__produccion_lecheraClient<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Produccion_lechera.
     * @param {produccion_lecheraUpdateArgs} args - Arguments to update one Produccion_lechera.
     * @example
     * // Update one Produccion_lechera
     * const produccion_lechera = await prisma.produccion_lechera.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends produccion_lecheraUpdateArgs>(args: SelectSubset<T, produccion_lecheraUpdateArgs<ExtArgs>>): Prisma__produccion_lecheraClient<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Produccion_lecheras.
     * @param {produccion_lecheraDeleteManyArgs} args - Arguments to filter Produccion_lecheras to delete.
     * @example
     * // Delete a few Produccion_lecheras
     * const { count } = await prisma.produccion_lechera.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends produccion_lecheraDeleteManyArgs>(args?: SelectSubset<T, produccion_lecheraDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Produccion_lecheras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_lecheraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Produccion_lecheras
     * const produccion_lechera = await prisma.produccion_lechera.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends produccion_lecheraUpdateManyArgs>(args: SelectSubset<T, produccion_lecheraUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Produccion_lecheras and returns the data updated in the database.
     * @param {produccion_lecheraUpdateManyAndReturnArgs} args - Arguments to update many Produccion_lecheras.
     * @example
     * // Update many Produccion_lecheras
     * const produccion_lechera = await prisma.produccion_lechera.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Produccion_lecheras and only return the `produccion_id`
     * const produccion_lecheraWithProduccion_idOnly = await prisma.produccion_lechera.updateManyAndReturn({
     *   select: { produccion_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends produccion_lecheraUpdateManyAndReturnArgs>(args: SelectSubset<T, produccion_lecheraUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Produccion_lechera.
     * @param {produccion_lecheraUpsertArgs} args - Arguments to update or create a Produccion_lechera.
     * @example
     * // Update or create a Produccion_lechera
     * const produccion_lechera = await prisma.produccion_lechera.upsert({
     *   create: {
     *     // ... data to create a Produccion_lechera
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Produccion_lechera we want to update
     *   }
     * })
     */
    upsert<T extends produccion_lecheraUpsertArgs>(args: SelectSubset<T, produccion_lecheraUpsertArgs<ExtArgs>>): Prisma__produccion_lecheraClient<$Result.GetResult<Prisma.$produccion_lecheraPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Produccion_lecheras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_lecheraCountArgs} args - Arguments to filter Produccion_lecheras to count.
     * @example
     * // Count the number of Produccion_lecheras
     * const count = await prisma.produccion_lechera.count({
     *   where: {
     *     // ... the filter for the Produccion_lecheras we want to count
     *   }
     * })
    **/
    count<T extends produccion_lecheraCountArgs>(
      args?: Subset<T, produccion_lecheraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Produccion_lecheraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Produccion_lechera.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Produccion_lecheraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Produccion_lecheraAggregateArgs>(args: Subset<T, Produccion_lecheraAggregateArgs>): Prisma.PrismaPromise<GetProduccion_lecheraAggregateType<T>>

    /**
     * Group by Produccion_lechera.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {produccion_lecheraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends produccion_lecheraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: produccion_lecheraGroupByArgs['orderBy'] }
        : { orderBy?: produccion_lecheraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, produccion_lecheraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduccion_lecheraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the produccion_lechera model
   */
  readonly fields: produccion_lecheraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for produccion_lechera.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__produccion_lecheraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuario<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    animal<T extends animalesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, animalesDefaultArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    unidad<T extends unidadesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, unidadesDefaultArgs<ExtArgs>>): Prisma__unidadesClient<$Result.GetResult<Prisma.$unidadesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the produccion_lechera model
   */
  interface produccion_lecheraFieldRefs {
    readonly produccion_id: FieldRef<"produccion_lechera", 'Int'>
    readonly usuario_ordeño_id: FieldRef<"produccion_lechera", 'Int'>
    readonly animal_id: FieldRef<"produccion_lechera", 'Int'>
    readonly cantidad: FieldRef<"produccion_lechera", 'Int'>
    readonly unidad_id: FieldRef<"produccion_lechera", 'Int'>
    readonly fecha: FieldRef<"produccion_lechera", 'DateTime'>
    readonly descripcion: FieldRef<"produccion_lechera", 'String'>
    readonly deleted_at: FieldRef<"produccion_lechera", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * produccion_lechera findUnique
   */
  export type produccion_lecheraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    /**
     * Filter, which produccion_lechera to fetch.
     */
    where: produccion_lecheraWhereUniqueInput
  }

  /**
   * produccion_lechera findUniqueOrThrow
   */
  export type produccion_lecheraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    /**
     * Filter, which produccion_lechera to fetch.
     */
    where: produccion_lecheraWhereUniqueInput
  }

  /**
   * produccion_lechera findFirst
   */
  export type produccion_lecheraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    /**
     * Filter, which produccion_lechera to fetch.
     */
    where?: produccion_lecheraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produccion_lecheras to fetch.
     */
    orderBy?: produccion_lecheraOrderByWithRelationInput | produccion_lecheraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for produccion_lecheras.
     */
    cursor?: produccion_lecheraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produccion_lecheras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produccion_lecheras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of produccion_lecheras.
     */
    distinct?: Produccion_lecheraScalarFieldEnum | Produccion_lecheraScalarFieldEnum[]
  }

  /**
   * produccion_lechera findFirstOrThrow
   */
  export type produccion_lecheraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    /**
     * Filter, which produccion_lechera to fetch.
     */
    where?: produccion_lecheraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produccion_lecheras to fetch.
     */
    orderBy?: produccion_lecheraOrderByWithRelationInput | produccion_lecheraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for produccion_lecheras.
     */
    cursor?: produccion_lecheraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produccion_lecheras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produccion_lecheras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of produccion_lecheras.
     */
    distinct?: Produccion_lecheraScalarFieldEnum | Produccion_lecheraScalarFieldEnum[]
  }

  /**
   * produccion_lechera findMany
   */
  export type produccion_lecheraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    /**
     * Filter, which produccion_lecheras to fetch.
     */
    where?: produccion_lecheraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of produccion_lecheras to fetch.
     */
    orderBy?: produccion_lecheraOrderByWithRelationInput | produccion_lecheraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing produccion_lecheras.
     */
    cursor?: produccion_lecheraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` produccion_lecheras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` produccion_lecheras.
     */
    skip?: number
    distinct?: Produccion_lecheraScalarFieldEnum | Produccion_lecheraScalarFieldEnum[]
  }

  /**
   * produccion_lechera create
   */
  export type produccion_lecheraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    /**
     * The data needed to create a produccion_lechera.
     */
    data: XOR<produccion_lecheraCreateInput, produccion_lecheraUncheckedCreateInput>
  }

  /**
   * produccion_lechera createMany
   */
  export type produccion_lecheraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many produccion_lecheras.
     */
    data: produccion_lecheraCreateManyInput | produccion_lecheraCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * produccion_lechera createManyAndReturn
   */
  export type produccion_lecheraCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * The data used to create many produccion_lecheras.
     */
    data: produccion_lecheraCreateManyInput | produccion_lecheraCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * produccion_lechera update
   */
  export type produccion_lecheraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    /**
     * The data needed to update a produccion_lechera.
     */
    data: XOR<produccion_lecheraUpdateInput, produccion_lecheraUncheckedUpdateInput>
    /**
     * Choose, which produccion_lechera to update.
     */
    where: produccion_lecheraWhereUniqueInput
  }

  /**
   * produccion_lechera updateMany
   */
  export type produccion_lecheraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update produccion_lecheras.
     */
    data: XOR<produccion_lecheraUpdateManyMutationInput, produccion_lecheraUncheckedUpdateManyInput>
    /**
     * Filter which produccion_lecheras to update
     */
    where?: produccion_lecheraWhereInput
    /**
     * Limit how many produccion_lecheras to update.
     */
    limit?: number
  }

  /**
   * produccion_lechera updateManyAndReturn
   */
  export type produccion_lecheraUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * The data used to update produccion_lecheras.
     */
    data: XOR<produccion_lecheraUpdateManyMutationInput, produccion_lecheraUncheckedUpdateManyInput>
    /**
     * Filter which produccion_lecheras to update
     */
    where?: produccion_lecheraWhereInput
    /**
     * Limit how many produccion_lecheras to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * produccion_lechera upsert
   */
  export type produccion_lecheraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    /**
     * The filter to search for the produccion_lechera to update in case it exists.
     */
    where: produccion_lecheraWhereUniqueInput
    /**
     * In case the produccion_lechera found by the `where` argument doesn't exist, create a new produccion_lechera with this data.
     */
    create: XOR<produccion_lecheraCreateInput, produccion_lecheraUncheckedCreateInput>
    /**
     * In case the produccion_lechera was found with the provided `where` argument, update it with this data.
     */
    update: XOR<produccion_lecheraUpdateInput, produccion_lecheraUncheckedUpdateInput>
  }

  /**
   * produccion_lechera delete
   */
  export type produccion_lecheraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
    /**
     * Filter which produccion_lechera to delete.
     */
    where: produccion_lecheraWhereUniqueInput
  }

  /**
   * produccion_lechera deleteMany
   */
  export type produccion_lecheraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which produccion_lecheras to delete
     */
    where?: produccion_lecheraWhereInput
    /**
     * Limit how many produccion_lecheras to delete.
     */
    limit?: number
  }

  /**
   * produccion_lechera without action
   */
  export type produccion_lecheraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the produccion_lechera
     */
    select?: produccion_lecheraSelect<ExtArgs> | null
    /**
     * Omit specific fields from the produccion_lechera
     */
    omit?: produccion_lecheraOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: produccion_lecheraInclude<ExtArgs> | null
  }


  /**
   * Model evento_monta
   */

  export type AggregateEvento_monta = {
    _count: Evento_montaCountAggregateOutputType | null
    _avg: Evento_montaAvgAggregateOutputType | null
    _sum: Evento_montaSumAggregateOutputType | null
    _min: Evento_montaMinAggregateOutputType | null
    _max: Evento_montaMaxAggregateOutputType | null
  }

  export type Evento_montaAvgAggregateOutputType = {
    monta_id: number | null
    usuario_veterinario_id: number | null
    animal_hembra_id: number | null
    animal_macho_id: number | null
    tipo_evento_id: number | null
  }

  export type Evento_montaSumAggregateOutputType = {
    monta_id: number | null
    usuario_veterinario_id: number | null
    animal_hembra_id: number | null
    animal_macho_id: number | null
    tipo_evento_id: number | null
  }

  export type Evento_montaMinAggregateOutputType = {
    monta_id: number | null
    usuario_veterinario_id: number | null
    animal_hembra_id: number | null
    animal_macho_id: number | null
    tipo_evento_id: number | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type Evento_montaMaxAggregateOutputType = {
    monta_id: number | null
    usuario_veterinario_id: number | null
    animal_hembra_id: number | null
    animal_macho_id: number | null
    tipo_evento_id: number | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type Evento_montaCountAggregateOutputType = {
    monta_id: number
    usuario_veterinario_id: number
    animal_hembra_id: number
    animal_macho_id: number
    tipo_evento_id: number
    fecha: number
    deleted_at: number
    _all: number
  }


  export type Evento_montaAvgAggregateInputType = {
    monta_id?: true
    usuario_veterinario_id?: true
    animal_hembra_id?: true
    animal_macho_id?: true
    tipo_evento_id?: true
  }

  export type Evento_montaSumAggregateInputType = {
    monta_id?: true
    usuario_veterinario_id?: true
    animal_hembra_id?: true
    animal_macho_id?: true
    tipo_evento_id?: true
  }

  export type Evento_montaMinAggregateInputType = {
    monta_id?: true
    usuario_veterinario_id?: true
    animal_hembra_id?: true
    animal_macho_id?: true
    tipo_evento_id?: true
    fecha?: true
    deleted_at?: true
  }

  export type Evento_montaMaxAggregateInputType = {
    monta_id?: true
    usuario_veterinario_id?: true
    animal_hembra_id?: true
    animal_macho_id?: true
    tipo_evento_id?: true
    fecha?: true
    deleted_at?: true
  }

  export type Evento_montaCountAggregateInputType = {
    monta_id?: true
    usuario_veterinario_id?: true
    animal_hembra_id?: true
    animal_macho_id?: true
    tipo_evento_id?: true
    fecha?: true
    deleted_at?: true
    _all?: true
  }

  export type Evento_montaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which evento_monta to aggregate.
     */
    where?: evento_montaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_montas to fetch.
     */
    orderBy?: evento_montaOrderByWithRelationInput | evento_montaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: evento_montaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_montas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_montas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned evento_montas
    **/
    _count?: true | Evento_montaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Evento_montaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Evento_montaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Evento_montaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Evento_montaMaxAggregateInputType
  }

  export type GetEvento_montaAggregateType<T extends Evento_montaAggregateArgs> = {
        [P in keyof T & keyof AggregateEvento_monta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvento_monta[P]>
      : GetScalarType<T[P], AggregateEvento_monta[P]>
  }




  export type evento_montaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_montaWhereInput
    orderBy?: evento_montaOrderByWithAggregationInput | evento_montaOrderByWithAggregationInput[]
    by: Evento_montaScalarFieldEnum[] | Evento_montaScalarFieldEnum
    having?: evento_montaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Evento_montaCountAggregateInputType | true
    _avg?: Evento_montaAvgAggregateInputType
    _sum?: Evento_montaSumAggregateInputType
    _min?: Evento_montaMinAggregateInputType
    _max?: Evento_montaMaxAggregateInputType
  }

  export type Evento_montaGroupByOutputType = {
    monta_id: number
    usuario_veterinario_id: number
    animal_hembra_id: number
    animal_macho_id: number
    tipo_evento_id: number
    fecha: Date
    deleted_at: Date | null
    _count: Evento_montaCountAggregateOutputType | null
    _avg: Evento_montaAvgAggregateOutputType | null
    _sum: Evento_montaSumAggregateOutputType | null
    _min: Evento_montaMinAggregateOutputType | null
    _max: Evento_montaMaxAggregateOutputType | null
  }

  type GetEvento_montaGroupByPayload<T extends evento_montaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Evento_montaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Evento_montaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Evento_montaGroupByOutputType[P]>
            : GetScalarType<T[P], Evento_montaGroupByOutputType[P]>
        }
      >
    >


  export type evento_montaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    monta_id?: boolean
    usuario_veterinario_id?: boolean
    animal_hembra_id?: boolean
    animal_macho_id?: boolean
    tipo_evento_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    hembra?: boolean | animalesDefaultArgs<ExtArgs>
    macho?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
    diagnosticos?: boolean | evento_monta$diagnosticosArgs<ExtArgs>
    _count?: boolean | Evento_montaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_monta"]>

  export type evento_montaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    monta_id?: boolean
    usuario_veterinario_id?: boolean
    animal_hembra_id?: boolean
    animal_macho_id?: boolean
    tipo_evento_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    hembra?: boolean | animalesDefaultArgs<ExtArgs>
    macho?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_monta"]>

  export type evento_montaSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    monta_id?: boolean
    usuario_veterinario_id?: boolean
    animal_hembra_id?: boolean
    animal_macho_id?: boolean
    tipo_evento_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    hembra?: boolean | animalesDefaultArgs<ExtArgs>
    macho?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_monta"]>

  export type evento_montaSelectScalar = {
    monta_id?: boolean
    usuario_veterinario_id?: boolean
    animal_hembra_id?: boolean
    animal_macho_id?: boolean
    tipo_evento_id?: boolean
    fecha?: boolean
    deleted_at?: boolean
  }

  export type evento_montaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"monta_id" | "usuario_veterinario_id" | "animal_hembra_id" | "animal_macho_id" | "tipo_evento_id" | "fecha" | "deleted_at", ExtArgs["result"]["evento_monta"]>
  export type evento_montaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    hembra?: boolean | animalesDefaultArgs<ExtArgs>
    macho?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
    diagnosticos?: boolean | evento_monta$diagnosticosArgs<ExtArgs>
    _count?: boolean | Evento_montaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type evento_montaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    hembra?: boolean | animalesDefaultArgs<ExtArgs>
    macho?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
  }
  export type evento_montaIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    hembra?: boolean | animalesDefaultArgs<ExtArgs>
    macho?: boolean | animalesDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
  }

  export type $evento_montaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "evento_monta"
    objects: {
      veterinario: Prisma.$usuariosPayload<ExtArgs>
      hembra: Prisma.$animalesPayload<ExtArgs>
      macho: Prisma.$animalesPayload<ExtArgs>
      tipo_evento: Prisma.$tipo_eventoPayload<ExtArgs>
      diagnosticos: Prisma.$diagnostico_preñezPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      monta_id: number
      usuario_veterinario_id: number
      animal_hembra_id: number
      animal_macho_id: number
      tipo_evento_id: number
      fecha: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["evento_monta"]>
    composites: {}
  }

  type evento_montaGetPayload<S extends boolean | null | undefined | evento_montaDefaultArgs> = $Result.GetResult<Prisma.$evento_montaPayload, S>

  type evento_montaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<evento_montaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Evento_montaCountAggregateInputType | true
    }

  export interface evento_montaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['evento_monta'], meta: { name: 'evento_monta' } }
    /**
     * Find zero or one Evento_monta that matches the filter.
     * @param {evento_montaFindUniqueArgs} args - Arguments to find a Evento_monta
     * @example
     * // Get one Evento_monta
     * const evento_monta = await prisma.evento_monta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends evento_montaFindUniqueArgs>(args: SelectSubset<T, evento_montaFindUniqueArgs<ExtArgs>>): Prisma__evento_montaClient<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Evento_monta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {evento_montaFindUniqueOrThrowArgs} args - Arguments to find a Evento_monta
     * @example
     * // Get one Evento_monta
     * const evento_monta = await prisma.evento_monta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends evento_montaFindUniqueOrThrowArgs>(args: SelectSubset<T, evento_montaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__evento_montaClient<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evento_monta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_montaFindFirstArgs} args - Arguments to find a Evento_monta
     * @example
     * // Get one Evento_monta
     * const evento_monta = await prisma.evento_monta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends evento_montaFindFirstArgs>(args?: SelectSubset<T, evento_montaFindFirstArgs<ExtArgs>>): Prisma__evento_montaClient<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evento_monta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_montaFindFirstOrThrowArgs} args - Arguments to find a Evento_monta
     * @example
     * // Get one Evento_monta
     * const evento_monta = await prisma.evento_monta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends evento_montaFindFirstOrThrowArgs>(args?: SelectSubset<T, evento_montaFindFirstOrThrowArgs<ExtArgs>>): Prisma__evento_montaClient<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Evento_montas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_montaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Evento_montas
     * const evento_montas = await prisma.evento_monta.findMany()
     * 
     * // Get first 10 Evento_montas
     * const evento_montas = await prisma.evento_monta.findMany({ take: 10 })
     * 
     * // Only select the `monta_id`
     * const evento_montaWithMonta_idOnly = await prisma.evento_monta.findMany({ select: { monta_id: true } })
     * 
     */
    findMany<T extends evento_montaFindManyArgs>(args?: SelectSubset<T, evento_montaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Evento_monta.
     * @param {evento_montaCreateArgs} args - Arguments to create a Evento_monta.
     * @example
     * // Create one Evento_monta
     * const Evento_monta = await prisma.evento_monta.create({
     *   data: {
     *     // ... data to create a Evento_monta
     *   }
     * })
     * 
     */
    create<T extends evento_montaCreateArgs>(args: SelectSubset<T, evento_montaCreateArgs<ExtArgs>>): Prisma__evento_montaClient<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Evento_montas.
     * @param {evento_montaCreateManyArgs} args - Arguments to create many Evento_montas.
     * @example
     * // Create many Evento_montas
     * const evento_monta = await prisma.evento_monta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends evento_montaCreateManyArgs>(args?: SelectSubset<T, evento_montaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Evento_montas and returns the data saved in the database.
     * @param {evento_montaCreateManyAndReturnArgs} args - Arguments to create many Evento_montas.
     * @example
     * // Create many Evento_montas
     * const evento_monta = await prisma.evento_monta.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Evento_montas and only return the `monta_id`
     * const evento_montaWithMonta_idOnly = await prisma.evento_monta.createManyAndReturn({
     *   select: { monta_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends evento_montaCreateManyAndReturnArgs>(args?: SelectSubset<T, evento_montaCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Evento_monta.
     * @param {evento_montaDeleteArgs} args - Arguments to delete one Evento_monta.
     * @example
     * // Delete one Evento_monta
     * const Evento_monta = await prisma.evento_monta.delete({
     *   where: {
     *     // ... filter to delete one Evento_monta
     *   }
     * })
     * 
     */
    delete<T extends evento_montaDeleteArgs>(args: SelectSubset<T, evento_montaDeleteArgs<ExtArgs>>): Prisma__evento_montaClient<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Evento_monta.
     * @param {evento_montaUpdateArgs} args - Arguments to update one Evento_monta.
     * @example
     * // Update one Evento_monta
     * const evento_monta = await prisma.evento_monta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends evento_montaUpdateArgs>(args: SelectSubset<T, evento_montaUpdateArgs<ExtArgs>>): Prisma__evento_montaClient<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Evento_montas.
     * @param {evento_montaDeleteManyArgs} args - Arguments to filter Evento_montas to delete.
     * @example
     * // Delete a few Evento_montas
     * const { count } = await prisma.evento_monta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends evento_montaDeleteManyArgs>(args?: SelectSubset<T, evento_montaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evento_montas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_montaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Evento_montas
     * const evento_monta = await prisma.evento_monta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends evento_montaUpdateManyArgs>(args: SelectSubset<T, evento_montaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evento_montas and returns the data updated in the database.
     * @param {evento_montaUpdateManyAndReturnArgs} args - Arguments to update many Evento_montas.
     * @example
     * // Update many Evento_montas
     * const evento_monta = await prisma.evento_monta.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Evento_montas and only return the `monta_id`
     * const evento_montaWithMonta_idOnly = await prisma.evento_monta.updateManyAndReturn({
     *   select: { monta_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends evento_montaUpdateManyAndReturnArgs>(args: SelectSubset<T, evento_montaUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Evento_monta.
     * @param {evento_montaUpsertArgs} args - Arguments to update or create a Evento_monta.
     * @example
     * // Update or create a Evento_monta
     * const evento_monta = await prisma.evento_monta.upsert({
     *   create: {
     *     // ... data to create a Evento_monta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Evento_monta we want to update
     *   }
     * })
     */
    upsert<T extends evento_montaUpsertArgs>(args: SelectSubset<T, evento_montaUpsertArgs<ExtArgs>>): Prisma__evento_montaClient<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Evento_montas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_montaCountArgs} args - Arguments to filter Evento_montas to count.
     * @example
     * // Count the number of Evento_montas
     * const count = await prisma.evento_monta.count({
     *   where: {
     *     // ... the filter for the Evento_montas we want to count
     *   }
     * })
    **/
    count<T extends evento_montaCountArgs>(
      args?: Subset<T, evento_montaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Evento_montaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Evento_monta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Evento_montaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Evento_montaAggregateArgs>(args: Subset<T, Evento_montaAggregateArgs>): Prisma.PrismaPromise<GetEvento_montaAggregateType<T>>

    /**
     * Group by Evento_monta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_montaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends evento_montaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: evento_montaGroupByArgs['orderBy'] }
        : { orderBy?: evento_montaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, evento_montaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEvento_montaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the evento_monta model
   */
  readonly fields: evento_montaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for evento_monta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__evento_montaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    veterinario<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    hembra<T extends animalesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, animalesDefaultArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    macho<T extends animalesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, animalesDefaultArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tipo_evento<T extends tipo_eventoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tipo_eventoDefaultArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    diagnosticos<T extends evento_monta$diagnosticosArgs<ExtArgs> = {}>(args?: Subset<T, evento_monta$diagnosticosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the evento_monta model
   */
  interface evento_montaFieldRefs {
    readonly monta_id: FieldRef<"evento_monta", 'Int'>
    readonly usuario_veterinario_id: FieldRef<"evento_monta", 'Int'>
    readonly animal_hembra_id: FieldRef<"evento_monta", 'Int'>
    readonly animal_macho_id: FieldRef<"evento_monta", 'Int'>
    readonly tipo_evento_id: FieldRef<"evento_monta", 'Int'>
    readonly fecha: FieldRef<"evento_monta", 'DateTime'>
    readonly deleted_at: FieldRef<"evento_monta", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * evento_monta findUnique
   */
  export type evento_montaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    /**
     * Filter, which evento_monta to fetch.
     */
    where: evento_montaWhereUniqueInput
  }

  /**
   * evento_monta findUniqueOrThrow
   */
  export type evento_montaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    /**
     * Filter, which evento_monta to fetch.
     */
    where: evento_montaWhereUniqueInput
  }

  /**
   * evento_monta findFirst
   */
  export type evento_montaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    /**
     * Filter, which evento_monta to fetch.
     */
    where?: evento_montaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_montas to fetch.
     */
    orderBy?: evento_montaOrderByWithRelationInput | evento_montaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for evento_montas.
     */
    cursor?: evento_montaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_montas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_montas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of evento_montas.
     */
    distinct?: Evento_montaScalarFieldEnum | Evento_montaScalarFieldEnum[]
  }

  /**
   * evento_monta findFirstOrThrow
   */
  export type evento_montaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    /**
     * Filter, which evento_monta to fetch.
     */
    where?: evento_montaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_montas to fetch.
     */
    orderBy?: evento_montaOrderByWithRelationInput | evento_montaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for evento_montas.
     */
    cursor?: evento_montaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_montas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_montas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of evento_montas.
     */
    distinct?: Evento_montaScalarFieldEnum | Evento_montaScalarFieldEnum[]
  }

  /**
   * evento_monta findMany
   */
  export type evento_montaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    /**
     * Filter, which evento_montas to fetch.
     */
    where?: evento_montaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_montas to fetch.
     */
    orderBy?: evento_montaOrderByWithRelationInput | evento_montaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing evento_montas.
     */
    cursor?: evento_montaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_montas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_montas.
     */
    skip?: number
    distinct?: Evento_montaScalarFieldEnum | Evento_montaScalarFieldEnum[]
  }

  /**
   * evento_monta create
   */
  export type evento_montaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    /**
     * The data needed to create a evento_monta.
     */
    data: XOR<evento_montaCreateInput, evento_montaUncheckedCreateInput>
  }

  /**
   * evento_monta createMany
   */
  export type evento_montaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many evento_montas.
     */
    data: evento_montaCreateManyInput | evento_montaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * evento_monta createManyAndReturn
   */
  export type evento_montaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * The data used to create many evento_montas.
     */
    data: evento_montaCreateManyInput | evento_montaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * evento_monta update
   */
  export type evento_montaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    /**
     * The data needed to update a evento_monta.
     */
    data: XOR<evento_montaUpdateInput, evento_montaUncheckedUpdateInput>
    /**
     * Choose, which evento_monta to update.
     */
    where: evento_montaWhereUniqueInput
  }

  /**
   * evento_monta updateMany
   */
  export type evento_montaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update evento_montas.
     */
    data: XOR<evento_montaUpdateManyMutationInput, evento_montaUncheckedUpdateManyInput>
    /**
     * Filter which evento_montas to update
     */
    where?: evento_montaWhereInput
    /**
     * Limit how many evento_montas to update.
     */
    limit?: number
  }

  /**
   * evento_monta updateManyAndReturn
   */
  export type evento_montaUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * The data used to update evento_montas.
     */
    data: XOR<evento_montaUpdateManyMutationInput, evento_montaUncheckedUpdateManyInput>
    /**
     * Filter which evento_montas to update
     */
    where?: evento_montaWhereInput
    /**
     * Limit how many evento_montas to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * evento_monta upsert
   */
  export type evento_montaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    /**
     * The filter to search for the evento_monta to update in case it exists.
     */
    where: evento_montaWhereUniqueInput
    /**
     * In case the evento_monta found by the `where` argument doesn't exist, create a new evento_monta with this data.
     */
    create: XOR<evento_montaCreateInput, evento_montaUncheckedCreateInput>
    /**
     * In case the evento_monta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<evento_montaUpdateInput, evento_montaUncheckedUpdateInput>
  }

  /**
   * evento_monta delete
   */
  export type evento_montaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
    /**
     * Filter which evento_monta to delete.
     */
    where: evento_montaWhereUniqueInput
  }

  /**
   * evento_monta deleteMany
   */
  export type evento_montaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which evento_montas to delete
     */
    where?: evento_montaWhereInput
    /**
     * Limit how many evento_montas to delete.
     */
    limit?: number
  }

  /**
   * evento_monta.diagnosticos
   */
  export type evento_monta$diagnosticosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
    where?: diagnostico_preñezWhereInput
    orderBy?: diagnostico_preñezOrderByWithRelationInput | diagnostico_preñezOrderByWithRelationInput[]
    cursor?: diagnostico_preñezWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Diagnostico_preñezScalarFieldEnum | Diagnostico_preñezScalarFieldEnum[]
  }

  /**
   * evento_monta without action
   */
  export type evento_montaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_monta
     */
    select?: evento_montaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_monta
     */
    omit?: evento_montaOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_montaInclude<ExtArgs> | null
  }


  /**
   * Model diagnostico_preñez
   */

  export type AggregateDiagnostico_preñez = {
    _count: Diagnostico_preñezCountAggregateOutputType | null
    _avg: Diagnostico_preñezAvgAggregateOutputType | null
    _sum: Diagnostico_preñezSumAggregateOutputType | null
    _min: Diagnostico_preñezMinAggregateOutputType | null
    _max: Diagnostico_preñezMaxAggregateOutputType | null
  }

  export type Diagnostico_preñezAvgAggregateOutputType = {
    preñez_id: number | null
    monta_id: number | null
    usuario_veterinario_id: number | null
  }

  export type Diagnostico_preñezSumAggregateOutputType = {
    preñez_id: number | null
    monta_id: number | null
    usuario_veterinario_id: number | null
  }

  export type Diagnostico_preñezMinAggregateOutputType = {
    preñez_id: number | null
    monta_id: number | null
    usuario_veterinario_id: number | null
    metodo: string | null
    resultado: boolean | null
    fecha_probable_parto: Date | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type Diagnostico_preñezMaxAggregateOutputType = {
    preñez_id: number | null
    monta_id: number | null
    usuario_veterinario_id: number | null
    metodo: string | null
    resultado: boolean | null
    fecha_probable_parto: Date | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type Diagnostico_preñezCountAggregateOutputType = {
    preñez_id: number
    monta_id: number
    usuario_veterinario_id: number
    metodo: number
    resultado: number
    fecha_probable_parto: number
    fecha: number
    deleted_at: number
    _all: number
  }


  export type Diagnostico_preñezAvgAggregateInputType = {
    preñez_id?: true
    monta_id?: true
    usuario_veterinario_id?: true
  }

  export type Diagnostico_preñezSumAggregateInputType = {
    preñez_id?: true
    monta_id?: true
    usuario_veterinario_id?: true
  }

  export type Diagnostico_preñezMinAggregateInputType = {
    preñez_id?: true
    monta_id?: true
    usuario_veterinario_id?: true
    metodo?: true
    resultado?: true
    fecha_probable_parto?: true
    fecha?: true
    deleted_at?: true
  }

  export type Diagnostico_preñezMaxAggregateInputType = {
    preñez_id?: true
    monta_id?: true
    usuario_veterinario_id?: true
    metodo?: true
    resultado?: true
    fecha_probable_parto?: true
    fecha?: true
    deleted_at?: true
  }

  export type Diagnostico_preñezCountAggregateInputType = {
    preñez_id?: true
    monta_id?: true
    usuario_veterinario_id?: true
    metodo?: true
    resultado?: true
    fecha_probable_parto?: true
    fecha?: true
    deleted_at?: true
    _all?: true
  }

  export type Diagnostico_preñezAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which diagnostico_preñez to aggregate.
     */
    where?: diagnostico_preñezWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of diagnostico_preñezs to fetch.
     */
    orderBy?: diagnostico_preñezOrderByWithRelationInput | diagnostico_preñezOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: diagnostico_preñezWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` diagnostico_preñezs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` diagnostico_preñezs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned diagnostico_preñezs
    **/
    _count?: true | Diagnostico_preñezCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Diagnostico_preñezAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Diagnostico_preñezSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Diagnostico_preñezMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Diagnostico_preñezMaxAggregateInputType
  }

  export type GetDiagnostico_preñezAggregateType<T extends Diagnostico_preñezAggregateArgs> = {
        [P in keyof T & keyof AggregateDiagnostico_preñez]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiagnostico_preñez[P]>
      : GetScalarType<T[P], AggregateDiagnostico_preñez[P]>
  }




  export type diagnostico_preñezGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: diagnostico_preñezWhereInput
    orderBy?: diagnostico_preñezOrderByWithAggregationInput | diagnostico_preñezOrderByWithAggregationInput[]
    by: Diagnostico_preñezScalarFieldEnum[] | Diagnostico_preñezScalarFieldEnum
    having?: diagnostico_preñezScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Diagnostico_preñezCountAggregateInputType | true
    _avg?: Diagnostico_preñezAvgAggregateInputType
    _sum?: Diagnostico_preñezSumAggregateInputType
    _min?: Diagnostico_preñezMinAggregateInputType
    _max?: Diagnostico_preñezMaxAggregateInputType
  }

  export type Diagnostico_preñezGroupByOutputType = {
    preñez_id: number
    monta_id: number
    usuario_veterinario_id: number
    metodo: string | null
    resultado: boolean | null
    fecha_probable_parto: Date | null
    fecha: Date
    deleted_at: Date | null
    _count: Diagnostico_preñezCountAggregateOutputType | null
    _avg: Diagnostico_preñezAvgAggregateOutputType | null
    _sum: Diagnostico_preñezSumAggregateOutputType | null
    _min: Diagnostico_preñezMinAggregateOutputType | null
    _max: Diagnostico_preñezMaxAggregateOutputType | null
  }

  type GetDiagnostico_preñezGroupByPayload<T extends diagnostico_preñezGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Diagnostico_preñezGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Diagnostico_preñezGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Diagnostico_preñezGroupByOutputType[P]>
            : GetScalarType<T[P], Diagnostico_preñezGroupByOutputType[P]>
        }
      >
    >


  export type diagnostico_preñezSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    preñez_id?: boolean
    monta_id?: boolean
    usuario_veterinario_id?: boolean
    metodo?: boolean
    resultado?: boolean
    fecha_probable_parto?: boolean
    fecha?: boolean
    deleted_at?: boolean
    monta?: boolean | evento_montaDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["diagnostico_preñez"]>

  export type diagnostico_preñezSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    preñez_id?: boolean
    monta_id?: boolean
    usuario_veterinario_id?: boolean
    metodo?: boolean
    resultado?: boolean
    fecha_probable_parto?: boolean
    fecha?: boolean
    deleted_at?: boolean
    monta?: boolean | evento_montaDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["diagnostico_preñez"]>

  export type diagnostico_preñezSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    preñez_id?: boolean
    monta_id?: boolean
    usuario_veterinario_id?: boolean
    metodo?: boolean
    resultado?: boolean
    fecha_probable_parto?: boolean
    fecha?: boolean
    deleted_at?: boolean
    monta?: boolean | evento_montaDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["diagnostico_preñez"]>

  export type diagnostico_preñezSelectScalar = {
    preñez_id?: boolean
    monta_id?: boolean
    usuario_veterinario_id?: boolean
    metodo?: boolean
    resultado?: boolean
    fecha_probable_parto?: boolean
    fecha?: boolean
    deleted_at?: boolean
  }

  export type diagnostico_preñezOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"preñez_id" | "monta_id" | "usuario_veterinario_id" | "metodo" | "resultado" | "fecha_probable_parto" | "fecha" | "deleted_at", ExtArgs["result"]["diagnostico_preñez"]>
  export type diagnostico_preñezInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    monta?: boolean | evento_montaDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type diagnostico_preñezIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    monta?: boolean | evento_montaDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
  }
  export type diagnostico_preñezIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    monta?: boolean | evento_montaDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
  }

  export type $diagnostico_preñezPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "diagnostico_preñez"
    objects: {
      monta: Prisma.$evento_montaPayload<ExtArgs>
      veterinario: Prisma.$usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      preñez_id: number
      monta_id: number
      usuario_veterinario_id: number
      metodo: string | null
      resultado: boolean | null
      fecha_probable_parto: Date | null
      fecha: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["diagnostico_preñez"]>
    composites: {}
  }

  type diagnostico_preñezGetPayload<S extends boolean | null | undefined | diagnostico_preñezDefaultArgs> = $Result.GetResult<Prisma.$diagnostico_preñezPayload, S>

  type diagnostico_preñezCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<diagnostico_preñezFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Diagnostico_preñezCountAggregateInputType | true
    }

  export interface diagnostico_preñezDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['diagnostico_preñez'], meta: { name: 'diagnostico_preñez' } }
    /**
     * Find zero or one Diagnostico_preñez that matches the filter.
     * @param {diagnostico_preñezFindUniqueArgs} args - Arguments to find a Diagnostico_preñez
     * @example
     * // Get one Diagnostico_preñez
     * const diagnostico_preñez = await prisma.diagnostico_preñez.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends diagnostico_preñezFindUniqueArgs>(args: SelectSubset<T, diagnostico_preñezFindUniqueArgs<ExtArgs>>): Prisma__diagnostico_preñezClient<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Diagnostico_preñez that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {diagnostico_preñezFindUniqueOrThrowArgs} args - Arguments to find a Diagnostico_preñez
     * @example
     * // Get one Diagnostico_preñez
     * const diagnostico_preñez = await prisma.diagnostico_preñez.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends diagnostico_preñezFindUniqueOrThrowArgs>(args: SelectSubset<T, diagnostico_preñezFindUniqueOrThrowArgs<ExtArgs>>): Prisma__diagnostico_preñezClient<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Diagnostico_preñez that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {diagnostico_preñezFindFirstArgs} args - Arguments to find a Diagnostico_preñez
     * @example
     * // Get one Diagnostico_preñez
     * const diagnostico_preñez = await prisma.diagnostico_preñez.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends diagnostico_preñezFindFirstArgs>(args?: SelectSubset<T, diagnostico_preñezFindFirstArgs<ExtArgs>>): Prisma__diagnostico_preñezClient<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Diagnostico_preñez that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {diagnostico_preñezFindFirstOrThrowArgs} args - Arguments to find a Diagnostico_preñez
     * @example
     * // Get one Diagnostico_preñez
     * const diagnostico_preñez = await prisma.diagnostico_preñez.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends diagnostico_preñezFindFirstOrThrowArgs>(args?: SelectSubset<T, diagnostico_preñezFindFirstOrThrowArgs<ExtArgs>>): Prisma__diagnostico_preñezClient<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Diagnostico_preñezs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {diagnostico_preñezFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Diagnostico_preñezs
     * const diagnostico_preñezs = await prisma.diagnostico_preñez.findMany()
     * 
     * // Get first 10 Diagnostico_preñezs
     * const diagnostico_preñezs = await prisma.diagnostico_preñez.findMany({ take: 10 })
     * 
     * // Only select the `preñez_id`
     * const diagnostico_preñezWithPreñez_idOnly = await prisma.diagnostico_preñez.findMany({ select: { preñez_id: true } })
     * 
     */
    findMany<T extends diagnostico_preñezFindManyArgs>(args?: SelectSubset<T, diagnostico_preñezFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Diagnostico_preñez.
     * @param {diagnostico_preñezCreateArgs} args - Arguments to create a Diagnostico_preñez.
     * @example
     * // Create one Diagnostico_preñez
     * const Diagnostico_preñez = await prisma.diagnostico_preñez.create({
     *   data: {
     *     // ... data to create a Diagnostico_preñez
     *   }
     * })
     * 
     */
    create<T extends diagnostico_preñezCreateArgs>(args: SelectSubset<T, diagnostico_preñezCreateArgs<ExtArgs>>): Prisma__diagnostico_preñezClient<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Diagnostico_preñezs.
     * @param {diagnostico_preñezCreateManyArgs} args - Arguments to create many Diagnostico_preñezs.
     * @example
     * // Create many Diagnostico_preñezs
     * const diagnostico_preñez = await prisma.diagnostico_preñez.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends diagnostico_preñezCreateManyArgs>(args?: SelectSubset<T, diagnostico_preñezCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Diagnostico_preñezs and returns the data saved in the database.
     * @param {diagnostico_preñezCreateManyAndReturnArgs} args - Arguments to create many Diagnostico_preñezs.
     * @example
     * // Create many Diagnostico_preñezs
     * const diagnostico_preñez = await prisma.diagnostico_preñez.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Diagnostico_preñezs and only return the `preñez_id`
     * const diagnostico_preñezWithPreñez_idOnly = await prisma.diagnostico_preñez.createManyAndReturn({
     *   select: { preñez_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends diagnostico_preñezCreateManyAndReturnArgs>(args?: SelectSubset<T, diagnostico_preñezCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Diagnostico_preñez.
     * @param {diagnostico_preñezDeleteArgs} args - Arguments to delete one Diagnostico_preñez.
     * @example
     * // Delete one Diagnostico_preñez
     * const Diagnostico_preñez = await prisma.diagnostico_preñez.delete({
     *   where: {
     *     // ... filter to delete one Diagnostico_preñez
     *   }
     * })
     * 
     */
    delete<T extends diagnostico_preñezDeleteArgs>(args: SelectSubset<T, diagnostico_preñezDeleteArgs<ExtArgs>>): Prisma__diagnostico_preñezClient<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Diagnostico_preñez.
     * @param {diagnostico_preñezUpdateArgs} args - Arguments to update one Diagnostico_preñez.
     * @example
     * // Update one Diagnostico_preñez
     * const diagnostico_preñez = await prisma.diagnostico_preñez.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends diagnostico_preñezUpdateArgs>(args: SelectSubset<T, diagnostico_preñezUpdateArgs<ExtArgs>>): Prisma__diagnostico_preñezClient<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Diagnostico_preñezs.
     * @param {diagnostico_preñezDeleteManyArgs} args - Arguments to filter Diagnostico_preñezs to delete.
     * @example
     * // Delete a few Diagnostico_preñezs
     * const { count } = await prisma.diagnostico_preñez.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends diagnostico_preñezDeleteManyArgs>(args?: SelectSubset<T, diagnostico_preñezDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Diagnostico_preñezs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {diagnostico_preñezUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Diagnostico_preñezs
     * const diagnostico_preñez = await prisma.diagnostico_preñez.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends diagnostico_preñezUpdateManyArgs>(args: SelectSubset<T, diagnostico_preñezUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Diagnostico_preñezs and returns the data updated in the database.
     * @param {diagnostico_preñezUpdateManyAndReturnArgs} args - Arguments to update many Diagnostico_preñezs.
     * @example
     * // Update many Diagnostico_preñezs
     * const diagnostico_preñez = await prisma.diagnostico_preñez.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Diagnostico_preñezs and only return the `preñez_id`
     * const diagnostico_preñezWithPreñez_idOnly = await prisma.diagnostico_preñez.updateManyAndReturn({
     *   select: { preñez_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends diagnostico_preñezUpdateManyAndReturnArgs>(args: SelectSubset<T, diagnostico_preñezUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Diagnostico_preñez.
     * @param {diagnostico_preñezUpsertArgs} args - Arguments to update or create a Diagnostico_preñez.
     * @example
     * // Update or create a Diagnostico_preñez
     * const diagnostico_preñez = await prisma.diagnostico_preñez.upsert({
     *   create: {
     *     // ... data to create a Diagnostico_preñez
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Diagnostico_preñez we want to update
     *   }
     * })
     */
    upsert<T extends diagnostico_preñezUpsertArgs>(args: SelectSubset<T, diagnostico_preñezUpsertArgs<ExtArgs>>): Prisma__diagnostico_preñezClient<$Result.GetResult<Prisma.$diagnostico_preñezPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Diagnostico_preñezs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {diagnostico_preñezCountArgs} args - Arguments to filter Diagnostico_preñezs to count.
     * @example
     * // Count the number of Diagnostico_preñezs
     * const count = await prisma.diagnostico_preñez.count({
     *   where: {
     *     // ... the filter for the Diagnostico_preñezs we want to count
     *   }
     * })
    **/
    count<T extends diagnostico_preñezCountArgs>(
      args?: Subset<T, diagnostico_preñezCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Diagnostico_preñezCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Diagnostico_preñez.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Diagnostico_preñezAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Diagnostico_preñezAggregateArgs>(args: Subset<T, Diagnostico_preñezAggregateArgs>): Prisma.PrismaPromise<GetDiagnostico_preñezAggregateType<T>>

    /**
     * Group by Diagnostico_preñez.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {diagnostico_preñezGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends diagnostico_preñezGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: diagnostico_preñezGroupByArgs['orderBy'] }
        : { orderBy?: diagnostico_preñezGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, diagnostico_preñezGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiagnostico_preñezGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the diagnostico_preñez model
   */
  readonly fields: diagnostico_preñezFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for diagnostico_preñez.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__diagnostico_preñezClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    monta<T extends evento_montaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, evento_montaDefaultArgs<ExtArgs>>): Prisma__evento_montaClient<$Result.GetResult<Prisma.$evento_montaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    veterinario<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the diagnostico_preñez model
   */
  interface diagnostico_preñezFieldRefs {
    readonly preñez_id: FieldRef<"diagnostico_preñez", 'Int'>
    readonly monta_id: FieldRef<"diagnostico_preñez", 'Int'>
    readonly usuario_veterinario_id: FieldRef<"diagnostico_preñez", 'Int'>
    readonly metodo: FieldRef<"diagnostico_preñez", 'String'>
    readonly resultado: FieldRef<"diagnostico_preñez", 'Boolean'>
    readonly fecha_probable_parto: FieldRef<"diagnostico_preñez", 'DateTime'>
    readonly fecha: FieldRef<"diagnostico_preñez", 'DateTime'>
    readonly deleted_at: FieldRef<"diagnostico_preñez", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * diagnostico_preñez findUnique
   */
  export type diagnostico_preñezFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
    /**
     * Filter, which diagnostico_preñez to fetch.
     */
    where: diagnostico_preñezWhereUniqueInput
  }

  /**
   * diagnostico_preñez findUniqueOrThrow
   */
  export type diagnostico_preñezFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
    /**
     * Filter, which diagnostico_preñez to fetch.
     */
    where: diagnostico_preñezWhereUniqueInput
  }

  /**
   * diagnostico_preñez findFirst
   */
  export type diagnostico_preñezFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
    /**
     * Filter, which diagnostico_preñez to fetch.
     */
    where?: diagnostico_preñezWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of diagnostico_preñezs to fetch.
     */
    orderBy?: diagnostico_preñezOrderByWithRelationInput | diagnostico_preñezOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for diagnostico_preñezs.
     */
    cursor?: diagnostico_preñezWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` diagnostico_preñezs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` diagnostico_preñezs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of diagnostico_preñezs.
     */
    distinct?: Diagnostico_preñezScalarFieldEnum | Diagnostico_preñezScalarFieldEnum[]
  }

  /**
   * diagnostico_preñez findFirstOrThrow
   */
  export type diagnostico_preñezFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
    /**
     * Filter, which diagnostico_preñez to fetch.
     */
    where?: diagnostico_preñezWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of diagnostico_preñezs to fetch.
     */
    orderBy?: diagnostico_preñezOrderByWithRelationInput | diagnostico_preñezOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for diagnostico_preñezs.
     */
    cursor?: diagnostico_preñezWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` diagnostico_preñezs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` diagnostico_preñezs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of diagnostico_preñezs.
     */
    distinct?: Diagnostico_preñezScalarFieldEnum | Diagnostico_preñezScalarFieldEnum[]
  }

  /**
   * diagnostico_preñez findMany
   */
  export type diagnostico_preñezFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
    /**
     * Filter, which diagnostico_preñezs to fetch.
     */
    where?: diagnostico_preñezWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of diagnostico_preñezs to fetch.
     */
    orderBy?: diagnostico_preñezOrderByWithRelationInput | diagnostico_preñezOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing diagnostico_preñezs.
     */
    cursor?: diagnostico_preñezWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` diagnostico_preñezs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` diagnostico_preñezs.
     */
    skip?: number
    distinct?: Diagnostico_preñezScalarFieldEnum | Diagnostico_preñezScalarFieldEnum[]
  }

  /**
   * diagnostico_preñez create
   */
  export type diagnostico_preñezCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
    /**
     * The data needed to create a diagnostico_preñez.
     */
    data: XOR<diagnostico_preñezCreateInput, diagnostico_preñezUncheckedCreateInput>
  }

  /**
   * diagnostico_preñez createMany
   */
  export type diagnostico_preñezCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many diagnostico_preñezs.
     */
    data: diagnostico_preñezCreateManyInput | diagnostico_preñezCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * diagnostico_preñez createManyAndReturn
   */
  export type diagnostico_preñezCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * The data used to create many diagnostico_preñezs.
     */
    data: diagnostico_preñezCreateManyInput | diagnostico_preñezCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * diagnostico_preñez update
   */
  export type diagnostico_preñezUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
    /**
     * The data needed to update a diagnostico_preñez.
     */
    data: XOR<diagnostico_preñezUpdateInput, diagnostico_preñezUncheckedUpdateInput>
    /**
     * Choose, which diagnostico_preñez to update.
     */
    where: diagnostico_preñezWhereUniqueInput
  }

  /**
   * diagnostico_preñez updateMany
   */
  export type diagnostico_preñezUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update diagnostico_preñezs.
     */
    data: XOR<diagnostico_preñezUpdateManyMutationInput, diagnostico_preñezUncheckedUpdateManyInput>
    /**
     * Filter which diagnostico_preñezs to update
     */
    where?: diagnostico_preñezWhereInput
    /**
     * Limit how many diagnostico_preñezs to update.
     */
    limit?: number
  }

  /**
   * diagnostico_preñez updateManyAndReturn
   */
  export type diagnostico_preñezUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * The data used to update diagnostico_preñezs.
     */
    data: XOR<diagnostico_preñezUpdateManyMutationInput, diagnostico_preñezUncheckedUpdateManyInput>
    /**
     * Filter which diagnostico_preñezs to update
     */
    where?: diagnostico_preñezWhereInput
    /**
     * Limit how many diagnostico_preñezs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * diagnostico_preñez upsert
   */
  export type diagnostico_preñezUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
    /**
     * The filter to search for the diagnostico_preñez to update in case it exists.
     */
    where: diagnostico_preñezWhereUniqueInput
    /**
     * In case the diagnostico_preñez found by the `where` argument doesn't exist, create a new diagnostico_preñez with this data.
     */
    create: XOR<diagnostico_preñezCreateInput, diagnostico_preñezUncheckedCreateInput>
    /**
     * In case the diagnostico_preñez was found with the provided `where` argument, update it with this data.
     */
    update: XOR<diagnostico_preñezUpdateInput, diagnostico_preñezUncheckedUpdateInput>
  }

  /**
   * diagnostico_preñez delete
   */
  export type diagnostico_preñezDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
    /**
     * Filter which diagnostico_preñez to delete.
     */
    where: diagnostico_preñezWhereUniqueInput
  }

  /**
   * diagnostico_preñez deleteMany
   */
  export type diagnostico_preñezDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which diagnostico_preñezs to delete
     */
    where?: diagnostico_preñezWhereInput
    /**
     * Limit how many diagnostico_preñezs to delete.
     */
    limit?: number
  }

  /**
   * diagnostico_preñez without action
   */
  export type diagnostico_preñezDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the diagnostico_preñez
     */
    select?: diagnostico_preñezSelect<ExtArgs> | null
    /**
     * Omit specific fields from the diagnostico_preñez
     */
    omit?: diagnostico_preñezOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: diagnostico_preñezInclude<ExtArgs> | null
  }


  /**
   * Model evento_parto
   */

  export type AggregateEvento_parto = {
    _count: Evento_partoCountAggregateOutputType | null
    _avg: Evento_partoAvgAggregateOutputType | null
    _sum: Evento_partoSumAggregateOutputType | null
    _min: Evento_partoMinAggregateOutputType | null
    _max: Evento_partoMaxAggregateOutputType | null
  }

  export type Evento_partoAvgAggregateOutputType = {
    evento_id: number | null
    animal_id: number | null
    usuario_veterinario_id: number | null
    usuario_operador_id: number | null
    tipo_evento_id: number | null
  }

  export type Evento_partoSumAggregateOutputType = {
    evento_id: number | null
    animal_id: number | null
    usuario_veterinario_id: number | null
    usuario_operador_id: number | null
    tipo_evento_id: number | null
  }

  export type Evento_partoMinAggregateOutputType = {
    evento_id: number | null
    animal_id: number | null
    usuario_veterinario_id: number | null
    usuario_operador_id: number | null
    tipo_evento_id: number | null
    descripcion: string | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type Evento_partoMaxAggregateOutputType = {
    evento_id: number | null
    animal_id: number | null
    usuario_veterinario_id: number | null
    usuario_operador_id: number | null
    tipo_evento_id: number | null
    descripcion: string | null
    fecha: Date | null
    deleted_at: Date | null
  }

  export type Evento_partoCountAggregateOutputType = {
    evento_id: number
    animal_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    tipo_evento_id: number
    descripcion: number
    fecha: number
    deleted_at: number
    _all: number
  }


  export type Evento_partoAvgAggregateInputType = {
    evento_id?: true
    animal_id?: true
    usuario_veterinario_id?: true
    usuario_operador_id?: true
    tipo_evento_id?: true
  }

  export type Evento_partoSumAggregateInputType = {
    evento_id?: true
    animal_id?: true
    usuario_veterinario_id?: true
    usuario_operador_id?: true
    tipo_evento_id?: true
  }

  export type Evento_partoMinAggregateInputType = {
    evento_id?: true
    animal_id?: true
    usuario_veterinario_id?: true
    usuario_operador_id?: true
    tipo_evento_id?: true
    descripcion?: true
    fecha?: true
    deleted_at?: true
  }

  export type Evento_partoMaxAggregateInputType = {
    evento_id?: true
    animal_id?: true
    usuario_veterinario_id?: true
    usuario_operador_id?: true
    tipo_evento_id?: true
    descripcion?: true
    fecha?: true
    deleted_at?: true
  }

  export type Evento_partoCountAggregateInputType = {
    evento_id?: true
    animal_id?: true
    usuario_veterinario_id?: true
    usuario_operador_id?: true
    tipo_evento_id?: true
    descripcion?: true
    fecha?: true
    deleted_at?: true
    _all?: true
  }

  export type Evento_partoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which evento_parto to aggregate.
     */
    where?: evento_partoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_partos to fetch.
     */
    orderBy?: evento_partoOrderByWithRelationInput | evento_partoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: evento_partoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_partos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_partos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned evento_partos
    **/
    _count?: true | Evento_partoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Evento_partoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Evento_partoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Evento_partoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Evento_partoMaxAggregateInputType
  }

  export type GetEvento_partoAggregateType<T extends Evento_partoAggregateArgs> = {
        [P in keyof T & keyof AggregateEvento_parto]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvento_parto[P]>
      : GetScalarType<T[P], AggregateEvento_parto[P]>
  }




  export type evento_partoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: evento_partoWhereInput
    orderBy?: evento_partoOrderByWithAggregationInput | evento_partoOrderByWithAggregationInput[]
    by: Evento_partoScalarFieldEnum[] | Evento_partoScalarFieldEnum
    having?: evento_partoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Evento_partoCountAggregateInputType | true
    _avg?: Evento_partoAvgAggregateInputType
    _sum?: Evento_partoSumAggregateInputType
    _min?: Evento_partoMinAggregateInputType
    _max?: Evento_partoMaxAggregateInputType
  }

  export type Evento_partoGroupByOutputType = {
    evento_id: number
    animal_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    tipo_evento_id: number
    descripcion: string | null
    fecha: Date
    deleted_at: Date | null
    _count: Evento_partoCountAggregateOutputType | null
    _avg: Evento_partoAvgAggregateOutputType | null
    _sum: Evento_partoSumAggregateOutputType | null
    _min: Evento_partoMinAggregateOutputType | null
    _max: Evento_partoMaxAggregateOutputType | null
  }

  type GetEvento_partoGroupByPayload<T extends evento_partoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Evento_partoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Evento_partoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Evento_partoGroupByOutputType[P]>
            : GetScalarType<T[P], Evento_partoGroupByOutputType[P]>
        }
      >
    >


  export type evento_partoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    evento_id?: boolean
    animal_id?: boolean
    usuario_veterinario_id?: boolean
    usuario_operador_id?: boolean
    tipo_evento_id?: boolean
    descripcion?: boolean
    fecha?: boolean
    deleted_at?: boolean
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_parto"]>

  export type evento_partoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    evento_id?: boolean
    animal_id?: boolean
    usuario_veterinario_id?: boolean
    usuario_operador_id?: boolean
    tipo_evento_id?: boolean
    descripcion?: boolean
    fecha?: boolean
    deleted_at?: boolean
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_parto"]>

  export type evento_partoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    evento_id?: boolean
    animal_id?: boolean
    usuario_veterinario_id?: boolean
    usuario_operador_id?: boolean
    tipo_evento_id?: boolean
    descripcion?: boolean
    fecha?: boolean
    deleted_at?: boolean
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["evento_parto"]>

  export type evento_partoSelectScalar = {
    evento_id?: boolean
    animal_id?: boolean
    usuario_veterinario_id?: boolean
    usuario_operador_id?: boolean
    tipo_evento_id?: boolean
    descripcion?: boolean
    fecha?: boolean
    deleted_at?: boolean
  }

  export type evento_partoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"evento_id" | "animal_id" | "usuario_veterinario_id" | "usuario_operador_id" | "tipo_evento_id" | "descripcion" | "fecha" | "deleted_at", ExtArgs["result"]["evento_parto"]>
  export type evento_partoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
  }
  export type evento_partoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
  }
  export type evento_partoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    animal?: boolean | animalesDefaultArgs<ExtArgs>
    veterinario?: boolean | usuariosDefaultArgs<ExtArgs>
    operador?: boolean | usuariosDefaultArgs<ExtArgs>
    tipo_evento?: boolean | tipo_eventoDefaultArgs<ExtArgs>
  }

  export type $evento_partoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "evento_parto"
    objects: {
      animal: Prisma.$animalesPayload<ExtArgs>
      veterinario: Prisma.$usuariosPayload<ExtArgs>
      operador: Prisma.$usuariosPayload<ExtArgs>
      tipo_evento: Prisma.$tipo_eventoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      evento_id: number
      animal_id: number
      usuario_veterinario_id: number
      usuario_operador_id: number
      tipo_evento_id: number
      descripcion: string | null
      fecha: Date
      deleted_at: Date | null
    }, ExtArgs["result"]["evento_parto"]>
    composites: {}
  }

  type evento_partoGetPayload<S extends boolean | null | undefined | evento_partoDefaultArgs> = $Result.GetResult<Prisma.$evento_partoPayload, S>

  type evento_partoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<evento_partoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Evento_partoCountAggregateInputType | true
    }

  export interface evento_partoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['evento_parto'], meta: { name: 'evento_parto' } }
    /**
     * Find zero or one Evento_parto that matches the filter.
     * @param {evento_partoFindUniqueArgs} args - Arguments to find a Evento_parto
     * @example
     * // Get one Evento_parto
     * const evento_parto = await prisma.evento_parto.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends evento_partoFindUniqueArgs>(args: SelectSubset<T, evento_partoFindUniqueArgs<ExtArgs>>): Prisma__evento_partoClient<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Evento_parto that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {evento_partoFindUniqueOrThrowArgs} args - Arguments to find a Evento_parto
     * @example
     * // Get one Evento_parto
     * const evento_parto = await prisma.evento_parto.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends evento_partoFindUniqueOrThrowArgs>(args: SelectSubset<T, evento_partoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__evento_partoClient<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evento_parto that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_partoFindFirstArgs} args - Arguments to find a Evento_parto
     * @example
     * // Get one Evento_parto
     * const evento_parto = await prisma.evento_parto.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends evento_partoFindFirstArgs>(args?: SelectSubset<T, evento_partoFindFirstArgs<ExtArgs>>): Prisma__evento_partoClient<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Evento_parto that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_partoFindFirstOrThrowArgs} args - Arguments to find a Evento_parto
     * @example
     * // Get one Evento_parto
     * const evento_parto = await prisma.evento_parto.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends evento_partoFindFirstOrThrowArgs>(args?: SelectSubset<T, evento_partoFindFirstOrThrowArgs<ExtArgs>>): Prisma__evento_partoClient<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Evento_partos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_partoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Evento_partos
     * const evento_partos = await prisma.evento_parto.findMany()
     * 
     * // Get first 10 Evento_partos
     * const evento_partos = await prisma.evento_parto.findMany({ take: 10 })
     * 
     * // Only select the `evento_id`
     * const evento_partoWithEvento_idOnly = await prisma.evento_parto.findMany({ select: { evento_id: true } })
     * 
     */
    findMany<T extends evento_partoFindManyArgs>(args?: SelectSubset<T, evento_partoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Evento_parto.
     * @param {evento_partoCreateArgs} args - Arguments to create a Evento_parto.
     * @example
     * // Create one Evento_parto
     * const Evento_parto = await prisma.evento_parto.create({
     *   data: {
     *     // ... data to create a Evento_parto
     *   }
     * })
     * 
     */
    create<T extends evento_partoCreateArgs>(args: SelectSubset<T, evento_partoCreateArgs<ExtArgs>>): Prisma__evento_partoClient<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Evento_partos.
     * @param {evento_partoCreateManyArgs} args - Arguments to create many Evento_partos.
     * @example
     * // Create many Evento_partos
     * const evento_parto = await prisma.evento_parto.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends evento_partoCreateManyArgs>(args?: SelectSubset<T, evento_partoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Evento_partos and returns the data saved in the database.
     * @param {evento_partoCreateManyAndReturnArgs} args - Arguments to create many Evento_partos.
     * @example
     * // Create many Evento_partos
     * const evento_parto = await prisma.evento_parto.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Evento_partos and only return the `evento_id`
     * const evento_partoWithEvento_idOnly = await prisma.evento_parto.createManyAndReturn({
     *   select: { evento_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends evento_partoCreateManyAndReturnArgs>(args?: SelectSubset<T, evento_partoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Evento_parto.
     * @param {evento_partoDeleteArgs} args - Arguments to delete one Evento_parto.
     * @example
     * // Delete one Evento_parto
     * const Evento_parto = await prisma.evento_parto.delete({
     *   where: {
     *     // ... filter to delete one Evento_parto
     *   }
     * })
     * 
     */
    delete<T extends evento_partoDeleteArgs>(args: SelectSubset<T, evento_partoDeleteArgs<ExtArgs>>): Prisma__evento_partoClient<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Evento_parto.
     * @param {evento_partoUpdateArgs} args - Arguments to update one Evento_parto.
     * @example
     * // Update one Evento_parto
     * const evento_parto = await prisma.evento_parto.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends evento_partoUpdateArgs>(args: SelectSubset<T, evento_partoUpdateArgs<ExtArgs>>): Prisma__evento_partoClient<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Evento_partos.
     * @param {evento_partoDeleteManyArgs} args - Arguments to filter Evento_partos to delete.
     * @example
     * // Delete a few Evento_partos
     * const { count } = await prisma.evento_parto.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends evento_partoDeleteManyArgs>(args?: SelectSubset<T, evento_partoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evento_partos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_partoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Evento_partos
     * const evento_parto = await prisma.evento_parto.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends evento_partoUpdateManyArgs>(args: SelectSubset<T, evento_partoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Evento_partos and returns the data updated in the database.
     * @param {evento_partoUpdateManyAndReturnArgs} args - Arguments to update many Evento_partos.
     * @example
     * // Update many Evento_partos
     * const evento_parto = await prisma.evento_parto.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Evento_partos and only return the `evento_id`
     * const evento_partoWithEvento_idOnly = await prisma.evento_parto.updateManyAndReturn({
     *   select: { evento_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends evento_partoUpdateManyAndReturnArgs>(args: SelectSubset<T, evento_partoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Evento_parto.
     * @param {evento_partoUpsertArgs} args - Arguments to update or create a Evento_parto.
     * @example
     * // Update or create a Evento_parto
     * const evento_parto = await prisma.evento_parto.upsert({
     *   create: {
     *     // ... data to create a Evento_parto
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Evento_parto we want to update
     *   }
     * })
     */
    upsert<T extends evento_partoUpsertArgs>(args: SelectSubset<T, evento_partoUpsertArgs<ExtArgs>>): Prisma__evento_partoClient<$Result.GetResult<Prisma.$evento_partoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Evento_partos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_partoCountArgs} args - Arguments to filter Evento_partos to count.
     * @example
     * // Count the number of Evento_partos
     * const count = await prisma.evento_parto.count({
     *   where: {
     *     // ... the filter for the Evento_partos we want to count
     *   }
     * })
    **/
    count<T extends evento_partoCountArgs>(
      args?: Subset<T, evento_partoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Evento_partoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Evento_parto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Evento_partoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Evento_partoAggregateArgs>(args: Subset<T, Evento_partoAggregateArgs>): Prisma.PrismaPromise<GetEvento_partoAggregateType<T>>

    /**
     * Group by Evento_parto.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {evento_partoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends evento_partoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: evento_partoGroupByArgs['orderBy'] }
        : { orderBy?: evento_partoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, evento_partoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEvento_partoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the evento_parto model
   */
  readonly fields: evento_partoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for evento_parto.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__evento_partoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    animal<T extends animalesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, animalesDefaultArgs<ExtArgs>>): Prisma__animalesClient<$Result.GetResult<Prisma.$animalesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    veterinario<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    operador<T extends usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usuariosDefaultArgs<ExtArgs>>): Prisma__usuariosClient<$Result.GetResult<Prisma.$usuariosPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tipo_evento<T extends tipo_eventoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tipo_eventoDefaultArgs<ExtArgs>>): Prisma__tipo_eventoClient<$Result.GetResult<Prisma.$tipo_eventoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the evento_parto model
   */
  interface evento_partoFieldRefs {
    readonly evento_id: FieldRef<"evento_parto", 'Int'>
    readonly animal_id: FieldRef<"evento_parto", 'Int'>
    readonly usuario_veterinario_id: FieldRef<"evento_parto", 'Int'>
    readonly usuario_operador_id: FieldRef<"evento_parto", 'Int'>
    readonly tipo_evento_id: FieldRef<"evento_parto", 'Int'>
    readonly descripcion: FieldRef<"evento_parto", 'String'>
    readonly fecha: FieldRef<"evento_parto", 'DateTime'>
    readonly deleted_at: FieldRef<"evento_parto", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * evento_parto findUnique
   */
  export type evento_partoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    /**
     * Filter, which evento_parto to fetch.
     */
    where: evento_partoWhereUniqueInput
  }

  /**
   * evento_parto findUniqueOrThrow
   */
  export type evento_partoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    /**
     * Filter, which evento_parto to fetch.
     */
    where: evento_partoWhereUniqueInput
  }

  /**
   * evento_parto findFirst
   */
  export type evento_partoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    /**
     * Filter, which evento_parto to fetch.
     */
    where?: evento_partoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_partos to fetch.
     */
    orderBy?: evento_partoOrderByWithRelationInput | evento_partoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for evento_partos.
     */
    cursor?: evento_partoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_partos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_partos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of evento_partos.
     */
    distinct?: Evento_partoScalarFieldEnum | Evento_partoScalarFieldEnum[]
  }

  /**
   * evento_parto findFirstOrThrow
   */
  export type evento_partoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    /**
     * Filter, which evento_parto to fetch.
     */
    where?: evento_partoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_partos to fetch.
     */
    orderBy?: evento_partoOrderByWithRelationInput | evento_partoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for evento_partos.
     */
    cursor?: evento_partoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_partos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_partos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of evento_partos.
     */
    distinct?: Evento_partoScalarFieldEnum | Evento_partoScalarFieldEnum[]
  }

  /**
   * evento_parto findMany
   */
  export type evento_partoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    /**
     * Filter, which evento_partos to fetch.
     */
    where?: evento_partoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of evento_partos to fetch.
     */
    orderBy?: evento_partoOrderByWithRelationInput | evento_partoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing evento_partos.
     */
    cursor?: evento_partoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` evento_partos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` evento_partos.
     */
    skip?: number
    distinct?: Evento_partoScalarFieldEnum | Evento_partoScalarFieldEnum[]
  }

  /**
   * evento_parto create
   */
  export type evento_partoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    /**
     * The data needed to create a evento_parto.
     */
    data: XOR<evento_partoCreateInput, evento_partoUncheckedCreateInput>
  }

  /**
   * evento_parto createMany
   */
  export type evento_partoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many evento_partos.
     */
    data: evento_partoCreateManyInput | evento_partoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * evento_parto createManyAndReturn
   */
  export type evento_partoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * The data used to create many evento_partos.
     */
    data: evento_partoCreateManyInput | evento_partoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * evento_parto update
   */
  export type evento_partoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    /**
     * The data needed to update a evento_parto.
     */
    data: XOR<evento_partoUpdateInput, evento_partoUncheckedUpdateInput>
    /**
     * Choose, which evento_parto to update.
     */
    where: evento_partoWhereUniqueInput
  }

  /**
   * evento_parto updateMany
   */
  export type evento_partoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update evento_partos.
     */
    data: XOR<evento_partoUpdateManyMutationInput, evento_partoUncheckedUpdateManyInput>
    /**
     * Filter which evento_partos to update
     */
    where?: evento_partoWhereInput
    /**
     * Limit how many evento_partos to update.
     */
    limit?: number
  }

  /**
   * evento_parto updateManyAndReturn
   */
  export type evento_partoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * The data used to update evento_partos.
     */
    data: XOR<evento_partoUpdateManyMutationInput, evento_partoUncheckedUpdateManyInput>
    /**
     * Filter which evento_partos to update
     */
    where?: evento_partoWhereInput
    /**
     * Limit how many evento_partos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * evento_parto upsert
   */
  export type evento_partoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    /**
     * The filter to search for the evento_parto to update in case it exists.
     */
    where: evento_partoWhereUniqueInput
    /**
     * In case the evento_parto found by the `where` argument doesn't exist, create a new evento_parto with this data.
     */
    create: XOR<evento_partoCreateInput, evento_partoUncheckedCreateInput>
    /**
     * In case the evento_parto was found with the provided `where` argument, update it with this data.
     */
    update: XOR<evento_partoUpdateInput, evento_partoUncheckedUpdateInput>
  }

  /**
   * evento_parto delete
   */
  export type evento_partoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
    /**
     * Filter which evento_parto to delete.
     */
    where: evento_partoWhereUniqueInput
  }

  /**
   * evento_parto deleteMany
   */
  export type evento_partoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which evento_partos to delete
     */
    where?: evento_partoWhereInput
    /**
     * Limit how many evento_partos to delete.
     */
    limit?: number
  }

  /**
   * evento_parto without action
   */
  export type evento_partoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the evento_parto
     */
    select?: evento_partoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the evento_parto
     */
    omit?: evento_partoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: evento_partoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const RolesScalarFieldEnum: {
    rol_id: 'rol_id',
    nombre: 'nombre',
    deleted_at: 'deleted_at'
  };

  export type RolesScalarFieldEnum = (typeof RolesScalarFieldEnum)[keyof typeof RolesScalarFieldEnum]


  export const FincaScalarFieldEnum: {
    finca_id: 'finca_id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    ubicacion: 'ubicacion',
    deleted_at: 'deleted_at'
  };

  export type FincaScalarFieldEnum = (typeof FincaScalarFieldEnum)[keyof typeof FincaScalarFieldEnum]


  export const UsuariosScalarFieldEnum: {
    usuario_id: 'usuario_id',
    finca_id: 'finca_id',
    rol_id: 'rol_id',
    nombre: 'nombre',
    correo: 'correo',
    contraseña: 'contraseña',
    deleted_at: 'deleted_at'
  };

  export type UsuariosScalarFieldEnum = (typeof UsuariosScalarFieldEnum)[keyof typeof UsuariosScalarFieldEnum]


  export const UnidadesScalarFieldEnum: {
    unidad_id: 'unidad_id',
    nombre: 'nombre',
    deleted_at: 'deleted_at'
  };

  export type UnidadesScalarFieldEnum = (typeof UnidadesScalarFieldEnum)[keyof typeof UnidadesScalarFieldEnum]


  export const Tipo_insumoScalarFieldEnum: {
    tipo_insumo_id: 'tipo_insumo_id',
    nombre: 'nombre',
    deleted_at: 'deleted_at'
  };

  export type Tipo_insumoScalarFieldEnum = (typeof Tipo_insumoScalarFieldEnum)[keyof typeof Tipo_insumoScalarFieldEnum]


  export const InsumosScalarFieldEnum: {
    insumo_id: 'insumo_id',
    tipo_insumo_id: 'tipo_insumo_id',
    nombre: 'nombre',
    cantidad: 'cantidad',
    unidad_id: 'unidad_id',
    descripcion: 'descripcion',
    deleted_at: 'deleted_at'
  };

  export type InsumosScalarFieldEnum = (typeof InsumosScalarFieldEnum)[keyof typeof InsumosScalarFieldEnum]


  export const Tipo_eventoScalarFieldEnum: {
    tipo_evento_id: 'tipo_evento_id',
    nombre: 'nombre',
    padre_id: 'padre_id',
    deleted_at: 'deleted_at'
  };

  export type Tipo_eventoScalarFieldEnum = (typeof Tipo_eventoScalarFieldEnum)[keyof typeof Tipo_eventoScalarFieldEnum]


  export const RazasScalarFieldEnum: {
    raza_id: 'raza_id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    deleted_at: 'deleted_at'
  };

  export type RazasScalarFieldEnum = (typeof RazasScalarFieldEnum)[keyof typeof RazasScalarFieldEnum]


  export const PotrerosScalarFieldEnum: {
    potrero_id: 'potrero_id',
    ubicacion: 'ubicacion',
    deleted_at: 'deleted_at'
  };

  export type PotrerosScalarFieldEnum = (typeof PotrerosScalarFieldEnum)[keyof typeof PotrerosScalarFieldEnum]


  export const LotesScalarFieldEnum: {
    lote_id: 'lote_id',
    potrero_id: 'potrero_id',
    descripcion: 'descripcion',
    deleted_at: 'deleted_at'
  };

  export type LotesScalarFieldEnum = (typeof LotesScalarFieldEnum)[keyof typeof LotesScalarFieldEnum]


  export const AnimalesScalarFieldEnum: {
    animal_id: 'animal_id',
    animal_madre_id: 'animal_madre_id',
    animal_padre_id: 'animal_padre_id',
    lote_id: 'lote_id',
    raza_id: 'raza_id',
    animal_img: 'animal_img',
    arete: 'arete',
    sexo: 'sexo',
    fecha_destete: 'fecha_destete',
    fecha_nacimiento: 'fecha_nacimiento',
    deleted_at: 'deleted_at'
  };

  export type AnimalesScalarFieldEnum = (typeof AnimalesScalarFieldEnum)[keyof typeof AnimalesScalarFieldEnum]


  export const ProveedoresScalarFieldEnum: {
    proveedor_id: 'proveedor_id',
    nombre_compañia: 'nombre_compañia',
    nombre_contacto: 'nombre_contacto',
    telefono: 'telefono',
    deleted_at: 'deleted_at'
  };

  export type ProveedoresScalarFieldEnum = (typeof ProveedoresScalarFieldEnum)[keyof typeof ProveedoresScalarFieldEnum]


  export const ComprasScalarFieldEnum: {
    compra_id: 'compra_id',
    usuario_contable_id: 'usuario_contable_id',
    proveedor_id: 'proveedor_id',
    fecha: 'fecha',
    deleted_at: 'deleted_at'
  };

  export type ComprasScalarFieldEnum = (typeof ComprasScalarFieldEnum)[keyof typeof ComprasScalarFieldEnum]


  export const Detalle_comprasScalarFieldEnum: {
    detalle_id: 'detalle_id',
    compra_id: 'compra_id',
    insumo_id: 'insumo_id',
    precio: 'precio',
    cantidad: 'cantidad',
    deleted_at: 'deleted_at'
  };

  export type Detalle_comprasScalarFieldEnum = (typeof Detalle_comprasScalarFieldEnum)[keyof typeof Detalle_comprasScalarFieldEnum]


  export const Evento_sanitarioScalarFieldEnum: {
    evento_sanitario_id: 'evento_sanitario_id',
    animal_id: 'animal_id',
    tipo_evento_id: 'tipo_evento_id',
    usuario_veterinario_id: 'usuario_veterinario_id',
    usuario_operador_id: 'usuario_operador_id',
    estado: 'estado',
    diagnostico: 'diagnostico',
    tratamiento: 'tratamiento',
    fecha_diagnostico: 'fecha_diagnostico',
    fecha: 'fecha',
    deleted_at: 'deleted_at'
  };

  export type Evento_sanitarioScalarFieldEnum = (typeof Evento_sanitarioScalarFieldEnum)[keyof typeof Evento_sanitarioScalarFieldEnum]


  export const Evento_insumoScalarFieldEnum: {
    evento_sanitario_id: 'evento_sanitario_id',
    insumo_id: 'insumo_id',
    cantidad: 'cantidad',
    deleted_at: 'deleted_at'
  };

  export type Evento_insumoScalarFieldEnum = (typeof Evento_insumoScalarFieldEnum)[keyof typeof Evento_insumoScalarFieldEnum]


  export const AlimentacionScalarFieldEnum: {
    alimentacion_id: 'alimentacion_id',
    insumo_id: 'insumo_id',
    usuario_operador_id: 'usuario_operador_id',
    animal_id: 'animal_id',
    cantidad: 'cantidad',
    fecha: 'fecha',
    deleted_at: 'deleted_at'
  };

  export type AlimentacionScalarFieldEnum = (typeof AlimentacionScalarFieldEnum)[keyof typeof AlimentacionScalarFieldEnum]


  export const PesajesScalarFieldEnum: {
    pesaje_id: 'pesaje_id',
    usuario_operador_id: 'usuario_operador_id',
    animal_id: 'animal_id',
    unidad_id: 'unidad_id',
    peso: 'peso',
    fecha: 'fecha',
    deleted_at: 'deleted_at'
  };

  export type PesajesScalarFieldEnum = (typeof PesajesScalarFieldEnum)[keyof typeof PesajesScalarFieldEnum]


  export const Produccion_carneScalarFieldEnum: {
    produccion_id: 'produccion_id',
    animal_id: 'animal_id',
    usuario_operador_id: 'usuario_operador_id',
    fecha: 'fecha',
    deleted_at: 'deleted_at'
  };

  export type Produccion_carneScalarFieldEnum = (typeof Produccion_carneScalarFieldEnum)[keyof typeof Produccion_carneScalarFieldEnum]


  export const Produccion_lecheraScalarFieldEnum: {
    produccion_id: 'produccion_id',
    usuario_ordeño_id: 'usuario_ordeño_id',
    animal_id: 'animal_id',
    cantidad: 'cantidad',
    unidad_id: 'unidad_id',
    fecha: 'fecha',
    descripcion: 'descripcion',
    deleted_at: 'deleted_at'
  };

  export type Produccion_lecheraScalarFieldEnum = (typeof Produccion_lecheraScalarFieldEnum)[keyof typeof Produccion_lecheraScalarFieldEnum]


  export const Evento_montaScalarFieldEnum: {
    monta_id: 'monta_id',
    usuario_veterinario_id: 'usuario_veterinario_id',
    animal_hembra_id: 'animal_hembra_id',
    animal_macho_id: 'animal_macho_id',
    tipo_evento_id: 'tipo_evento_id',
    fecha: 'fecha',
    deleted_at: 'deleted_at'
  };

  export type Evento_montaScalarFieldEnum = (typeof Evento_montaScalarFieldEnum)[keyof typeof Evento_montaScalarFieldEnum]


  export const Diagnostico_preñezScalarFieldEnum: {
    preñez_id: 'preñez_id',
    monta_id: 'monta_id',
    usuario_veterinario_id: 'usuario_veterinario_id',
    metodo: 'metodo',
    resultado: 'resultado',
    fecha_probable_parto: 'fecha_probable_parto',
    fecha: 'fecha',
    deleted_at: 'deleted_at'
  };

  export type Diagnostico_preñezScalarFieldEnum = (typeof Diagnostico_preñezScalarFieldEnum)[keyof typeof Diagnostico_preñezScalarFieldEnum]


  export const Evento_partoScalarFieldEnum: {
    evento_id: 'evento_id',
    animal_id: 'animal_id',
    usuario_veterinario_id: 'usuario_veterinario_id',
    usuario_operador_id: 'usuario_operador_id',
    tipo_evento_id: 'tipo_evento_id',
    descripcion: 'descripcion',
    fecha: 'fecha',
    deleted_at: 'deleted_at'
  };

  export type Evento_partoScalarFieldEnum = (typeof Evento_partoScalarFieldEnum)[keyof typeof Evento_partoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type rolesWhereInput = {
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    rol_id?: IntFilter<"roles"> | number
    nombre?: StringFilter<"roles"> | string
    deleted_at?: DateTimeNullableFilter<"roles"> | Date | string | null
    usuarios?: UsuariosListRelationFilter
  }

  export type rolesOrderByWithRelationInput = {
    rol_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    usuarios?: usuariosOrderByRelationAggregateInput
  }

  export type rolesWhereUniqueInput = Prisma.AtLeast<{
    rol_id?: number
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    nombre?: StringFilter<"roles"> | string
    deleted_at?: DateTimeNullableFilter<"roles"> | Date | string | null
    usuarios?: UsuariosListRelationFilter
  }, "rol_id">

  export type rolesOrderByWithAggregationInput = {
    rol_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: rolesCountOrderByAggregateInput
    _avg?: rolesAvgOrderByAggregateInput
    _max?: rolesMaxOrderByAggregateInput
    _min?: rolesMinOrderByAggregateInput
    _sum?: rolesSumOrderByAggregateInput
  }

  export type rolesScalarWhereWithAggregatesInput = {
    AND?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    OR?: rolesScalarWhereWithAggregatesInput[]
    NOT?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    rol_id?: IntWithAggregatesFilter<"roles"> | number
    nombre?: StringWithAggregatesFilter<"roles"> | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"roles"> | Date | string | null
  }

  export type fincaWhereInput = {
    AND?: fincaWhereInput | fincaWhereInput[]
    OR?: fincaWhereInput[]
    NOT?: fincaWhereInput | fincaWhereInput[]
    finca_id?: IntFilter<"finca"> | number
    nombre?: StringFilter<"finca"> | string
    descripcion?: StringNullableFilter<"finca"> | string | null
    ubicacion?: StringNullableFilter<"finca"> | string | null
    deleted_at?: DateTimeNullableFilter<"finca"> | Date | string | null
    usuarios?: UsuariosListRelationFilter
  }

  export type fincaOrderByWithRelationInput = {
    finca_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    ubicacion?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    usuarios?: usuariosOrderByRelationAggregateInput
  }

  export type fincaWhereUniqueInput = Prisma.AtLeast<{
    finca_id?: number
    AND?: fincaWhereInput | fincaWhereInput[]
    OR?: fincaWhereInput[]
    NOT?: fincaWhereInput | fincaWhereInput[]
    nombre?: StringFilter<"finca"> | string
    descripcion?: StringNullableFilter<"finca"> | string | null
    ubicacion?: StringNullableFilter<"finca"> | string | null
    deleted_at?: DateTimeNullableFilter<"finca"> | Date | string | null
    usuarios?: UsuariosListRelationFilter
  }, "finca_id">

  export type fincaOrderByWithAggregationInput = {
    finca_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    ubicacion?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: fincaCountOrderByAggregateInput
    _avg?: fincaAvgOrderByAggregateInput
    _max?: fincaMaxOrderByAggregateInput
    _min?: fincaMinOrderByAggregateInput
    _sum?: fincaSumOrderByAggregateInput
  }

  export type fincaScalarWhereWithAggregatesInput = {
    AND?: fincaScalarWhereWithAggregatesInput | fincaScalarWhereWithAggregatesInput[]
    OR?: fincaScalarWhereWithAggregatesInput[]
    NOT?: fincaScalarWhereWithAggregatesInput | fincaScalarWhereWithAggregatesInput[]
    finca_id?: IntWithAggregatesFilter<"finca"> | number
    nombre?: StringWithAggregatesFilter<"finca"> | string
    descripcion?: StringNullableWithAggregatesFilter<"finca"> | string | null
    ubicacion?: StringNullableWithAggregatesFilter<"finca"> | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"finca"> | Date | string | null
  }

  export type usuariosWhereInput = {
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    usuario_id?: IntFilter<"usuarios"> | number
    finca_id?: IntNullableFilter<"usuarios"> | number | null
    rol_id?: IntNullableFilter<"usuarios"> | number | null
    nombre?: StringFilter<"usuarios"> | string
    correo?: StringFilter<"usuarios"> | string
    contraseña?: StringNullableFilter<"usuarios"> | string | null
    deleted_at?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    finca?: XOR<FincaNullableScalarRelationFilter, fincaWhereInput> | null
    rol?: XOR<RolesNullableScalarRelationFilter, rolesWhereInput> | null
    eventos_veterinario?: Evento_sanitarioListRelationFilter
    eventos_operador?: Evento_sanitarioListRelationFilter
    alimentaciones?: AlimentacionListRelationFilter
    pesajes_realizados?: PesajesListRelationFilter
    compras_realizadas?: ComprasListRelationFilter
    producciones_carne?: Produccion_carneListRelationFilter
    producciones_leche?: Produccion_lecheraListRelationFilter
    montas_supervisadas?: Evento_montaListRelationFilter
    diagnosticos?: Diagnostico_preñezListRelationFilter
    partos_veterinario?: Evento_partoListRelationFilter
    partos_operador?: Evento_partoListRelationFilter
  }

  export type usuariosOrderByWithRelationInput = {
    usuario_id?: SortOrder
    finca_id?: SortOrderInput | SortOrder
    rol_id?: SortOrderInput | SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contraseña?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    finca?: fincaOrderByWithRelationInput
    rol?: rolesOrderByWithRelationInput
    eventos_veterinario?: evento_sanitarioOrderByRelationAggregateInput
    eventos_operador?: evento_sanitarioOrderByRelationAggregateInput
    alimentaciones?: alimentacionOrderByRelationAggregateInput
    pesajes_realizados?: pesajesOrderByRelationAggregateInput
    compras_realizadas?: comprasOrderByRelationAggregateInput
    producciones_carne?: produccion_carneOrderByRelationAggregateInput
    producciones_leche?: produccion_lecheraOrderByRelationAggregateInput
    montas_supervisadas?: evento_montaOrderByRelationAggregateInput
    diagnosticos?: diagnostico_preñezOrderByRelationAggregateInput
    partos_veterinario?: evento_partoOrderByRelationAggregateInput
    partos_operador?: evento_partoOrderByRelationAggregateInput
  }

  export type usuariosWhereUniqueInput = Prisma.AtLeast<{
    usuario_id?: number
    correo?: string
    AND?: usuariosWhereInput | usuariosWhereInput[]
    OR?: usuariosWhereInput[]
    NOT?: usuariosWhereInput | usuariosWhereInput[]
    finca_id?: IntNullableFilter<"usuarios"> | number | null
    rol_id?: IntNullableFilter<"usuarios"> | number | null
    nombre?: StringFilter<"usuarios"> | string
    contraseña?: StringNullableFilter<"usuarios"> | string | null
    deleted_at?: DateTimeNullableFilter<"usuarios"> | Date | string | null
    finca?: XOR<FincaNullableScalarRelationFilter, fincaWhereInput> | null
    rol?: XOR<RolesNullableScalarRelationFilter, rolesWhereInput> | null
    eventos_veterinario?: Evento_sanitarioListRelationFilter
    eventos_operador?: Evento_sanitarioListRelationFilter
    alimentaciones?: AlimentacionListRelationFilter
    pesajes_realizados?: PesajesListRelationFilter
    compras_realizadas?: ComprasListRelationFilter
    producciones_carne?: Produccion_carneListRelationFilter
    producciones_leche?: Produccion_lecheraListRelationFilter
    montas_supervisadas?: Evento_montaListRelationFilter
    diagnosticos?: Diagnostico_preñezListRelationFilter
    partos_veterinario?: Evento_partoListRelationFilter
    partos_operador?: Evento_partoListRelationFilter
  }, "usuario_id" | "correo">

  export type usuariosOrderByWithAggregationInput = {
    usuario_id?: SortOrder
    finca_id?: SortOrderInput | SortOrder
    rol_id?: SortOrderInput | SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contraseña?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: usuariosCountOrderByAggregateInput
    _avg?: usuariosAvgOrderByAggregateInput
    _max?: usuariosMaxOrderByAggregateInput
    _min?: usuariosMinOrderByAggregateInput
    _sum?: usuariosSumOrderByAggregateInput
  }

  export type usuariosScalarWhereWithAggregatesInput = {
    AND?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    OR?: usuariosScalarWhereWithAggregatesInput[]
    NOT?: usuariosScalarWhereWithAggregatesInput | usuariosScalarWhereWithAggregatesInput[]
    usuario_id?: IntWithAggregatesFilter<"usuarios"> | number
    finca_id?: IntNullableWithAggregatesFilter<"usuarios"> | number | null
    rol_id?: IntNullableWithAggregatesFilter<"usuarios"> | number | null
    nombre?: StringWithAggregatesFilter<"usuarios"> | string
    correo?: StringWithAggregatesFilter<"usuarios"> | string
    contraseña?: StringNullableWithAggregatesFilter<"usuarios"> | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"usuarios"> | Date | string | null
  }

  export type unidadesWhereInput = {
    AND?: unidadesWhereInput | unidadesWhereInput[]
    OR?: unidadesWhereInput[]
    NOT?: unidadesWhereInput | unidadesWhereInput[]
    unidad_id?: IntFilter<"unidades"> | number
    nombre?: StringFilter<"unidades"> | string
    deleted_at?: DateTimeNullableFilter<"unidades"> | Date | string | null
    insumos?: InsumosListRelationFilter
    pesajes?: PesajesListRelationFilter
    producciones_leche?: Produccion_lecheraListRelationFilter
  }

  export type unidadesOrderByWithRelationInput = {
    unidad_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    insumos?: insumosOrderByRelationAggregateInput
    pesajes?: pesajesOrderByRelationAggregateInput
    producciones_leche?: produccion_lecheraOrderByRelationAggregateInput
  }

  export type unidadesWhereUniqueInput = Prisma.AtLeast<{
    unidad_id?: number
    AND?: unidadesWhereInput | unidadesWhereInput[]
    OR?: unidadesWhereInput[]
    NOT?: unidadesWhereInput | unidadesWhereInput[]
    nombre?: StringFilter<"unidades"> | string
    deleted_at?: DateTimeNullableFilter<"unidades"> | Date | string | null
    insumos?: InsumosListRelationFilter
    pesajes?: PesajesListRelationFilter
    producciones_leche?: Produccion_lecheraListRelationFilter
  }, "unidad_id">

  export type unidadesOrderByWithAggregationInput = {
    unidad_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: unidadesCountOrderByAggregateInput
    _avg?: unidadesAvgOrderByAggregateInput
    _max?: unidadesMaxOrderByAggregateInput
    _min?: unidadesMinOrderByAggregateInput
    _sum?: unidadesSumOrderByAggregateInput
  }

  export type unidadesScalarWhereWithAggregatesInput = {
    AND?: unidadesScalarWhereWithAggregatesInput | unidadesScalarWhereWithAggregatesInput[]
    OR?: unidadesScalarWhereWithAggregatesInput[]
    NOT?: unidadesScalarWhereWithAggregatesInput | unidadesScalarWhereWithAggregatesInput[]
    unidad_id?: IntWithAggregatesFilter<"unidades"> | number
    nombre?: StringWithAggregatesFilter<"unidades"> | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"unidades"> | Date | string | null
  }

  export type tipo_insumoWhereInput = {
    AND?: tipo_insumoWhereInput | tipo_insumoWhereInput[]
    OR?: tipo_insumoWhereInput[]
    NOT?: tipo_insumoWhereInput | tipo_insumoWhereInput[]
    tipo_insumo_id?: IntFilter<"tipo_insumo"> | number
    nombre?: StringFilter<"tipo_insumo"> | string
    deleted_at?: DateTimeNullableFilter<"tipo_insumo"> | Date | string | null
    insumos?: InsumosListRelationFilter
  }

  export type tipo_insumoOrderByWithRelationInput = {
    tipo_insumo_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    insumos?: insumosOrderByRelationAggregateInput
  }

  export type tipo_insumoWhereUniqueInput = Prisma.AtLeast<{
    tipo_insumo_id?: number
    AND?: tipo_insumoWhereInput | tipo_insumoWhereInput[]
    OR?: tipo_insumoWhereInput[]
    NOT?: tipo_insumoWhereInput | tipo_insumoWhereInput[]
    nombre?: StringFilter<"tipo_insumo"> | string
    deleted_at?: DateTimeNullableFilter<"tipo_insumo"> | Date | string | null
    insumos?: InsumosListRelationFilter
  }, "tipo_insumo_id">

  export type tipo_insumoOrderByWithAggregationInput = {
    tipo_insumo_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: tipo_insumoCountOrderByAggregateInput
    _avg?: tipo_insumoAvgOrderByAggregateInput
    _max?: tipo_insumoMaxOrderByAggregateInput
    _min?: tipo_insumoMinOrderByAggregateInput
    _sum?: tipo_insumoSumOrderByAggregateInput
  }

  export type tipo_insumoScalarWhereWithAggregatesInput = {
    AND?: tipo_insumoScalarWhereWithAggregatesInput | tipo_insumoScalarWhereWithAggregatesInput[]
    OR?: tipo_insumoScalarWhereWithAggregatesInput[]
    NOT?: tipo_insumoScalarWhereWithAggregatesInput | tipo_insumoScalarWhereWithAggregatesInput[]
    tipo_insumo_id?: IntWithAggregatesFilter<"tipo_insumo"> | number
    nombre?: StringWithAggregatesFilter<"tipo_insumo"> | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"tipo_insumo"> | Date | string | null
  }

  export type insumosWhereInput = {
    AND?: insumosWhereInput | insumosWhereInput[]
    OR?: insumosWhereInput[]
    NOT?: insumosWhereInput | insumosWhereInput[]
    insumo_id?: IntFilter<"insumos"> | number
    tipo_insumo_id?: IntFilter<"insumos"> | number
    nombre?: StringFilter<"insumos"> | string
    cantidad?: IntFilter<"insumos"> | number
    unidad_id?: IntFilter<"insumos"> | number
    descripcion?: StringNullableFilter<"insumos"> | string | null
    deleted_at?: DateTimeNullableFilter<"insumos"> | Date | string | null
    tipo_insumo?: XOR<Tipo_insumoScalarRelationFilter, tipo_insumoWhereInput>
    unidad?: XOR<UnidadesScalarRelationFilter, unidadesWhereInput>
    detalle_compras?: Detalle_comprasListRelationFilter
    evento_insumos?: Evento_insumoListRelationFilter
    alimentaciones?: AlimentacionListRelationFilter
  }

  export type insumosOrderByWithRelationInput = {
    insumo_id?: SortOrder
    tipo_insumo_id?: SortOrder
    nombre?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    tipo_insumo?: tipo_insumoOrderByWithRelationInput
    unidad?: unidadesOrderByWithRelationInput
    detalle_compras?: detalle_comprasOrderByRelationAggregateInput
    evento_insumos?: evento_insumoOrderByRelationAggregateInput
    alimentaciones?: alimentacionOrderByRelationAggregateInput
  }

  export type insumosWhereUniqueInput = Prisma.AtLeast<{
    insumo_id?: number
    AND?: insumosWhereInput | insumosWhereInput[]
    OR?: insumosWhereInput[]
    NOT?: insumosWhereInput | insumosWhereInput[]
    tipo_insumo_id?: IntFilter<"insumos"> | number
    nombre?: StringFilter<"insumos"> | string
    cantidad?: IntFilter<"insumos"> | number
    unidad_id?: IntFilter<"insumos"> | number
    descripcion?: StringNullableFilter<"insumos"> | string | null
    deleted_at?: DateTimeNullableFilter<"insumos"> | Date | string | null
    tipo_insumo?: XOR<Tipo_insumoScalarRelationFilter, tipo_insumoWhereInput>
    unidad?: XOR<UnidadesScalarRelationFilter, unidadesWhereInput>
    detalle_compras?: Detalle_comprasListRelationFilter
    evento_insumos?: Evento_insumoListRelationFilter
    alimentaciones?: AlimentacionListRelationFilter
  }, "insumo_id">

  export type insumosOrderByWithAggregationInput = {
    insumo_id?: SortOrder
    tipo_insumo_id?: SortOrder
    nombre?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: insumosCountOrderByAggregateInput
    _avg?: insumosAvgOrderByAggregateInput
    _max?: insumosMaxOrderByAggregateInput
    _min?: insumosMinOrderByAggregateInput
    _sum?: insumosSumOrderByAggregateInput
  }

  export type insumosScalarWhereWithAggregatesInput = {
    AND?: insumosScalarWhereWithAggregatesInput | insumosScalarWhereWithAggregatesInput[]
    OR?: insumosScalarWhereWithAggregatesInput[]
    NOT?: insumosScalarWhereWithAggregatesInput | insumosScalarWhereWithAggregatesInput[]
    insumo_id?: IntWithAggregatesFilter<"insumos"> | number
    tipo_insumo_id?: IntWithAggregatesFilter<"insumos"> | number
    nombre?: StringWithAggregatesFilter<"insumos"> | string
    cantidad?: IntWithAggregatesFilter<"insumos"> | number
    unidad_id?: IntWithAggregatesFilter<"insumos"> | number
    descripcion?: StringNullableWithAggregatesFilter<"insumos"> | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"insumos"> | Date | string | null
  }

  export type tipo_eventoWhereInput = {
    AND?: tipo_eventoWhereInput | tipo_eventoWhereInput[]
    OR?: tipo_eventoWhereInput[]
    NOT?: tipo_eventoWhereInput | tipo_eventoWhereInput[]
    tipo_evento_id?: IntFilter<"tipo_evento"> | number
    nombre?: StringFilter<"tipo_evento"> | string
    padre_id?: IntNullableFilter<"tipo_evento"> | number | null
    deleted_at?: DateTimeNullableFilter<"tipo_evento"> | Date | string | null
    padre?: XOR<Tipo_eventoNullableScalarRelationFilter, tipo_eventoWhereInput> | null
    hijos?: Tipo_eventoListRelationFilter
    eventos_sanitarios?: Evento_sanitarioListRelationFilter
    eventos_monta?: Evento_montaListRelationFilter
    eventos_parto?: Evento_partoListRelationFilter
  }

  export type tipo_eventoOrderByWithRelationInput = {
    tipo_evento_id?: SortOrder
    nombre?: SortOrder
    padre_id?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    padre?: tipo_eventoOrderByWithRelationInput
    hijos?: tipo_eventoOrderByRelationAggregateInput
    eventos_sanitarios?: evento_sanitarioOrderByRelationAggregateInput
    eventos_monta?: evento_montaOrderByRelationAggregateInput
    eventos_parto?: evento_partoOrderByRelationAggregateInput
  }

  export type tipo_eventoWhereUniqueInput = Prisma.AtLeast<{
    tipo_evento_id?: number
    AND?: tipo_eventoWhereInput | tipo_eventoWhereInput[]
    OR?: tipo_eventoWhereInput[]
    NOT?: tipo_eventoWhereInput | tipo_eventoWhereInput[]
    nombre?: StringFilter<"tipo_evento"> | string
    padre_id?: IntNullableFilter<"tipo_evento"> | number | null
    deleted_at?: DateTimeNullableFilter<"tipo_evento"> | Date | string | null
    padre?: XOR<Tipo_eventoNullableScalarRelationFilter, tipo_eventoWhereInput> | null
    hijos?: Tipo_eventoListRelationFilter
    eventos_sanitarios?: Evento_sanitarioListRelationFilter
    eventos_monta?: Evento_montaListRelationFilter
    eventos_parto?: Evento_partoListRelationFilter
  }, "tipo_evento_id">

  export type tipo_eventoOrderByWithAggregationInput = {
    tipo_evento_id?: SortOrder
    nombre?: SortOrder
    padre_id?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: tipo_eventoCountOrderByAggregateInput
    _avg?: tipo_eventoAvgOrderByAggregateInput
    _max?: tipo_eventoMaxOrderByAggregateInput
    _min?: tipo_eventoMinOrderByAggregateInput
    _sum?: tipo_eventoSumOrderByAggregateInput
  }

  export type tipo_eventoScalarWhereWithAggregatesInput = {
    AND?: tipo_eventoScalarWhereWithAggregatesInput | tipo_eventoScalarWhereWithAggregatesInput[]
    OR?: tipo_eventoScalarWhereWithAggregatesInput[]
    NOT?: tipo_eventoScalarWhereWithAggregatesInput | tipo_eventoScalarWhereWithAggregatesInput[]
    tipo_evento_id?: IntWithAggregatesFilter<"tipo_evento"> | number
    nombre?: StringWithAggregatesFilter<"tipo_evento"> | string
    padre_id?: IntNullableWithAggregatesFilter<"tipo_evento"> | number | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"tipo_evento"> | Date | string | null
  }

  export type razasWhereInput = {
    AND?: razasWhereInput | razasWhereInput[]
    OR?: razasWhereInput[]
    NOT?: razasWhereInput | razasWhereInput[]
    raza_id?: IntFilter<"razas"> | number
    nombre?: StringFilter<"razas"> | string
    descripcion?: StringNullableFilter<"razas"> | string | null
    deleted_at?: DateTimeNullableFilter<"razas"> | Date | string | null
    animales?: AnimalesListRelationFilter
  }

  export type razasOrderByWithRelationInput = {
    raza_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    animales?: animalesOrderByRelationAggregateInput
  }

  export type razasWhereUniqueInput = Prisma.AtLeast<{
    raza_id?: number
    AND?: razasWhereInput | razasWhereInput[]
    OR?: razasWhereInput[]
    NOT?: razasWhereInput | razasWhereInput[]
    nombre?: StringFilter<"razas"> | string
    descripcion?: StringNullableFilter<"razas"> | string | null
    deleted_at?: DateTimeNullableFilter<"razas"> | Date | string | null
    animales?: AnimalesListRelationFilter
  }, "raza_id">

  export type razasOrderByWithAggregationInput = {
    raza_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: razasCountOrderByAggregateInput
    _avg?: razasAvgOrderByAggregateInput
    _max?: razasMaxOrderByAggregateInput
    _min?: razasMinOrderByAggregateInput
    _sum?: razasSumOrderByAggregateInput
  }

  export type razasScalarWhereWithAggregatesInput = {
    AND?: razasScalarWhereWithAggregatesInput | razasScalarWhereWithAggregatesInput[]
    OR?: razasScalarWhereWithAggregatesInput[]
    NOT?: razasScalarWhereWithAggregatesInput | razasScalarWhereWithAggregatesInput[]
    raza_id?: IntWithAggregatesFilter<"razas"> | number
    nombre?: StringWithAggregatesFilter<"razas"> | string
    descripcion?: StringNullableWithAggregatesFilter<"razas"> | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"razas"> | Date | string | null
  }

  export type potrerosWhereInput = {
    AND?: potrerosWhereInput | potrerosWhereInput[]
    OR?: potrerosWhereInput[]
    NOT?: potrerosWhereInput | potrerosWhereInput[]
    potrero_id?: IntFilter<"potreros"> | number
    ubicacion?: StringFilter<"potreros"> | string
    deleted_at?: DateTimeNullableFilter<"potreros"> | Date | string | null
    lotes?: LotesListRelationFilter
  }

  export type potrerosOrderByWithRelationInput = {
    potrero_id?: SortOrder
    ubicacion?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    lotes?: lotesOrderByRelationAggregateInput
  }

  export type potrerosWhereUniqueInput = Prisma.AtLeast<{
    potrero_id?: number
    AND?: potrerosWhereInput | potrerosWhereInput[]
    OR?: potrerosWhereInput[]
    NOT?: potrerosWhereInput | potrerosWhereInput[]
    ubicacion?: StringFilter<"potreros"> | string
    deleted_at?: DateTimeNullableFilter<"potreros"> | Date | string | null
    lotes?: LotesListRelationFilter
  }, "potrero_id">

  export type potrerosOrderByWithAggregationInput = {
    potrero_id?: SortOrder
    ubicacion?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: potrerosCountOrderByAggregateInput
    _avg?: potrerosAvgOrderByAggregateInput
    _max?: potrerosMaxOrderByAggregateInput
    _min?: potrerosMinOrderByAggregateInput
    _sum?: potrerosSumOrderByAggregateInput
  }

  export type potrerosScalarWhereWithAggregatesInput = {
    AND?: potrerosScalarWhereWithAggregatesInput | potrerosScalarWhereWithAggregatesInput[]
    OR?: potrerosScalarWhereWithAggregatesInput[]
    NOT?: potrerosScalarWhereWithAggregatesInput | potrerosScalarWhereWithAggregatesInput[]
    potrero_id?: IntWithAggregatesFilter<"potreros"> | number
    ubicacion?: StringWithAggregatesFilter<"potreros"> | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"potreros"> | Date | string | null
  }

  export type lotesWhereInput = {
    AND?: lotesWhereInput | lotesWhereInput[]
    OR?: lotesWhereInput[]
    NOT?: lotesWhereInput | lotesWhereInput[]
    lote_id?: IntFilter<"lotes"> | number
    potrero_id?: IntFilter<"lotes"> | number
    descripcion?: StringNullableFilter<"lotes"> | string | null
    deleted_at?: DateTimeNullableFilter<"lotes"> | Date | string | null
    potrero?: XOR<PotrerosScalarRelationFilter, potrerosWhereInput>
    animales?: AnimalesListRelationFilter
  }

  export type lotesOrderByWithRelationInput = {
    lote_id?: SortOrder
    potrero_id?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    potrero?: potrerosOrderByWithRelationInput
    animales?: animalesOrderByRelationAggregateInput
  }

  export type lotesWhereUniqueInput = Prisma.AtLeast<{
    lote_id?: number
    AND?: lotesWhereInput | lotesWhereInput[]
    OR?: lotesWhereInput[]
    NOT?: lotesWhereInput | lotesWhereInput[]
    potrero_id?: IntFilter<"lotes"> | number
    descripcion?: StringNullableFilter<"lotes"> | string | null
    deleted_at?: DateTimeNullableFilter<"lotes"> | Date | string | null
    potrero?: XOR<PotrerosScalarRelationFilter, potrerosWhereInput>
    animales?: AnimalesListRelationFilter
  }, "lote_id">

  export type lotesOrderByWithAggregationInput = {
    lote_id?: SortOrder
    potrero_id?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: lotesCountOrderByAggregateInput
    _avg?: lotesAvgOrderByAggregateInput
    _max?: lotesMaxOrderByAggregateInput
    _min?: lotesMinOrderByAggregateInput
    _sum?: lotesSumOrderByAggregateInput
  }

  export type lotesScalarWhereWithAggregatesInput = {
    AND?: lotesScalarWhereWithAggregatesInput | lotesScalarWhereWithAggregatesInput[]
    OR?: lotesScalarWhereWithAggregatesInput[]
    NOT?: lotesScalarWhereWithAggregatesInput | lotesScalarWhereWithAggregatesInput[]
    lote_id?: IntWithAggregatesFilter<"lotes"> | number
    potrero_id?: IntWithAggregatesFilter<"lotes"> | number
    descripcion?: StringNullableWithAggregatesFilter<"lotes"> | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"lotes"> | Date | string | null
  }

  export type animalesWhereInput = {
    AND?: animalesWhereInput | animalesWhereInput[]
    OR?: animalesWhereInput[]
    NOT?: animalesWhereInput | animalesWhereInput[]
    animal_id?: IntFilter<"animales"> | number
    animal_madre_id?: IntNullableFilter<"animales"> | number | null
    animal_padre_id?: IntNullableFilter<"animales"> | number | null
    lote_id?: IntNullableFilter<"animales"> | number | null
    raza_id?: IntFilter<"animales"> | number
    animal_img?: StringNullableFilter<"animales"> | string | null
    arete?: StringFilter<"animales"> | string
    sexo?: StringFilter<"animales"> | string
    fecha_destete?: DateTimeNullableFilter<"animales"> | Date | string | null
    fecha_nacimiento?: DateTimeFilter<"animales"> | Date | string
    deleted_at?: DateTimeNullableFilter<"animales"> | Date | string | null
    madre?: XOR<AnimalesNullableScalarRelationFilter, animalesWhereInput> | null
    padre?: XOR<AnimalesNullableScalarRelationFilter, animalesWhereInput> | null
    hijos_madre?: AnimalesListRelationFilter
    hijos_padre?: AnimalesListRelationFilter
    lote?: XOR<LotesNullableScalarRelationFilter, lotesWhereInput> | null
    raza?: XOR<RazasScalarRelationFilter, razasWhereInput>
    eventos_sanitarios?: Evento_sanitarioListRelationFilter
    alimentaciones?: AlimentacionListRelationFilter
    pesajes?: PesajesListRelationFilter
    producciones_carne?: Produccion_carneListRelationFilter
    producciones_leche?: Produccion_lecheraListRelationFilter
    montas_hembra?: Evento_montaListRelationFilter
    montas_macho?: Evento_montaListRelationFilter
    partos?: Evento_partoListRelationFilter
  }

  export type animalesOrderByWithRelationInput = {
    animal_id?: SortOrder
    animal_madre_id?: SortOrderInput | SortOrder
    animal_padre_id?: SortOrderInput | SortOrder
    lote_id?: SortOrderInput | SortOrder
    raza_id?: SortOrder
    animal_img?: SortOrderInput | SortOrder
    arete?: SortOrder
    sexo?: SortOrder
    fecha_destete?: SortOrderInput | SortOrder
    fecha_nacimiento?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    madre?: animalesOrderByWithRelationInput
    padre?: animalesOrderByWithRelationInput
    hijos_madre?: animalesOrderByRelationAggregateInput
    hijos_padre?: animalesOrderByRelationAggregateInput
    lote?: lotesOrderByWithRelationInput
    raza?: razasOrderByWithRelationInput
    eventos_sanitarios?: evento_sanitarioOrderByRelationAggregateInput
    alimentaciones?: alimentacionOrderByRelationAggregateInput
    pesajes?: pesajesOrderByRelationAggregateInput
    producciones_carne?: produccion_carneOrderByRelationAggregateInput
    producciones_leche?: produccion_lecheraOrderByRelationAggregateInput
    montas_hembra?: evento_montaOrderByRelationAggregateInput
    montas_macho?: evento_montaOrderByRelationAggregateInput
    partos?: evento_partoOrderByRelationAggregateInput
  }

  export type animalesWhereUniqueInput = Prisma.AtLeast<{
    animal_id?: number
    arete?: string
    AND?: animalesWhereInput | animalesWhereInput[]
    OR?: animalesWhereInput[]
    NOT?: animalesWhereInput | animalesWhereInput[]
    animal_madre_id?: IntNullableFilter<"animales"> | number | null
    animal_padre_id?: IntNullableFilter<"animales"> | number | null
    lote_id?: IntNullableFilter<"animales"> | number | null
    raza_id?: IntFilter<"animales"> | number
    animal_img?: StringNullableFilter<"animales"> | string | null
    sexo?: StringFilter<"animales"> | string
    fecha_destete?: DateTimeNullableFilter<"animales"> | Date | string | null
    fecha_nacimiento?: DateTimeFilter<"animales"> | Date | string
    deleted_at?: DateTimeNullableFilter<"animales"> | Date | string | null
    madre?: XOR<AnimalesNullableScalarRelationFilter, animalesWhereInput> | null
    padre?: XOR<AnimalesNullableScalarRelationFilter, animalesWhereInput> | null
    hijos_madre?: AnimalesListRelationFilter
    hijos_padre?: AnimalesListRelationFilter
    lote?: XOR<LotesNullableScalarRelationFilter, lotesWhereInput> | null
    raza?: XOR<RazasScalarRelationFilter, razasWhereInput>
    eventos_sanitarios?: Evento_sanitarioListRelationFilter
    alimentaciones?: AlimentacionListRelationFilter
    pesajes?: PesajesListRelationFilter
    producciones_carne?: Produccion_carneListRelationFilter
    producciones_leche?: Produccion_lecheraListRelationFilter
    montas_hembra?: Evento_montaListRelationFilter
    montas_macho?: Evento_montaListRelationFilter
    partos?: Evento_partoListRelationFilter
  }, "animal_id" | "arete">

  export type animalesOrderByWithAggregationInput = {
    animal_id?: SortOrder
    animal_madre_id?: SortOrderInput | SortOrder
    animal_padre_id?: SortOrderInput | SortOrder
    lote_id?: SortOrderInput | SortOrder
    raza_id?: SortOrder
    animal_img?: SortOrderInput | SortOrder
    arete?: SortOrder
    sexo?: SortOrder
    fecha_destete?: SortOrderInput | SortOrder
    fecha_nacimiento?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: animalesCountOrderByAggregateInput
    _avg?: animalesAvgOrderByAggregateInput
    _max?: animalesMaxOrderByAggregateInput
    _min?: animalesMinOrderByAggregateInput
    _sum?: animalesSumOrderByAggregateInput
  }

  export type animalesScalarWhereWithAggregatesInput = {
    AND?: animalesScalarWhereWithAggregatesInput | animalesScalarWhereWithAggregatesInput[]
    OR?: animalesScalarWhereWithAggregatesInput[]
    NOT?: animalesScalarWhereWithAggregatesInput | animalesScalarWhereWithAggregatesInput[]
    animal_id?: IntWithAggregatesFilter<"animales"> | number
    animal_madre_id?: IntNullableWithAggregatesFilter<"animales"> | number | null
    animal_padre_id?: IntNullableWithAggregatesFilter<"animales"> | number | null
    lote_id?: IntNullableWithAggregatesFilter<"animales"> | number | null
    raza_id?: IntWithAggregatesFilter<"animales"> | number
    animal_img?: StringNullableWithAggregatesFilter<"animales"> | string | null
    arete?: StringWithAggregatesFilter<"animales"> | string
    sexo?: StringWithAggregatesFilter<"animales"> | string
    fecha_destete?: DateTimeNullableWithAggregatesFilter<"animales"> | Date | string | null
    fecha_nacimiento?: DateTimeWithAggregatesFilter<"animales"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"animales"> | Date | string | null
  }

  export type proveedoresWhereInput = {
    AND?: proveedoresWhereInput | proveedoresWhereInput[]
    OR?: proveedoresWhereInput[]
    NOT?: proveedoresWhereInput | proveedoresWhereInput[]
    proveedor_id?: IntFilter<"proveedores"> | number
    nombre_compañia?: StringFilter<"proveedores"> | string
    nombre_contacto?: StringNullableFilter<"proveedores"> | string | null
    telefono?: StringNullableFilter<"proveedores"> | string | null
    deleted_at?: DateTimeNullableFilter<"proveedores"> | Date | string | null
    compras?: ComprasListRelationFilter
  }

  export type proveedoresOrderByWithRelationInput = {
    proveedor_id?: SortOrder
    nombre_compañia?: SortOrder
    nombre_contacto?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    compras?: comprasOrderByRelationAggregateInput
  }

  export type proveedoresWhereUniqueInput = Prisma.AtLeast<{
    proveedor_id?: number
    AND?: proveedoresWhereInput | proveedoresWhereInput[]
    OR?: proveedoresWhereInput[]
    NOT?: proveedoresWhereInput | proveedoresWhereInput[]
    nombre_compañia?: StringFilter<"proveedores"> | string
    nombre_contacto?: StringNullableFilter<"proveedores"> | string | null
    telefono?: StringNullableFilter<"proveedores"> | string | null
    deleted_at?: DateTimeNullableFilter<"proveedores"> | Date | string | null
    compras?: ComprasListRelationFilter
  }, "proveedor_id">

  export type proveedoresOrderByWithAggregationInput = {
    proveedor_id?: SortOrder
    nombre_compañia?: SortOrder
    nombre_contacto?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: proveedoresCountOrderByAggregateInput
    _avg?: proveedoresAvgOrderByAggregateInput
    _max?: proveedoresMaxOrderByAggregateInput
    _min?: proveedoresMinOrderByAggregateInput
    _sum?: proveedoresSumOrderByAggregateInput
  }

  export type proveedoresScalarWhereWithAggregatesInput = {
    AND?: proveedoresScalarWhereWithAggregatesInput | proveedoresScalarWhereWithAggregatesInput[]
    OR?: proveedoresScalarWhereWithAggregatesInput[]
    NOT?: proveedoresScalarWhereWithAggregatesInput | proveedoresScalarWhereWithAggregatesInput[]
    proveedor_id?: IntWithAggregatesFilter<"proveedores"> | number
    nombre_compañia?: StringWithAggregatesFilter<"proveedores"> | string
    nombre_contacto?: StringNullableWithAggregatesFilter<"proveedores"> | string | null
    telefono?: StringNullableWithAggregatesFilter<"proveedores"> | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"proveedores"> | Date | string | null
  }

  export type comprasWhereInput = {
    AND?: comprasWhereInput | comprasWhereInput[]
    OR?: comprasWhereInput[]
    NOT?: comprasWhereInput | comprasWhereInput[]
    compra_id?: IntFilter<"compras"> | number
    usuario_contable_id?: IntFilter<"compras"> | number
    proveedor_id?: IntFilter<"compras"> | number
    fecha?: DateTimeFilter<"compras"> | Date | string
    deleted_at?: DateTimeNullableFilter<"compras"> | Date | string | null
    usuario_contable?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    proveedor?: XOR<ProveedoresScalarRelationFilter, proveedoresWhereInput>
    detalle_compras?: Detalle_comprasListRelationFilter
  }

  export type comprasOrderByWithRelationInput = {
    compra_id?: SortOrder
    usuario_contable_id?: SortOrder
    proveedor_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    usuario_contable?: usuariosOrderByWithRelationInput
    proveedor?: proveedoresOrderByWithRelationInput
    detalle_compras?: detalle_comprasOrderByRelationAggregateInput
  }

  export type comprasWhereUniqueInput = Prisma.AtLeast<{
    compra_id?: number
    AND?: comprasWhereInput | comprasWhereInput[]
    OR?: comprasWhereInput[]
    NOT?: comprasWhereInput | comprasWhereInput[]
    usuario_contable_id?: IntFilter<"compras"> | number
    proveedor_id?: IntFilter<"compras"> | number
    fecha?: DateTimeFilter<"compras"> | Date | string
    deleted_at?: DateTimeNullableFilter<"compras"> | Date | string | null
    usuario_contable?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    proveedor?: XOR<ProveedoresScalarRelationFilter, proveedoresWhereInput>
    detalle_compras?: Detalle_comprasListRelationFilter
  }, "compra_id">

  export type comprasOrderByWithAggregationInput = {
    compra_id?: SortOrder
    usuario_contable_id?: SortOrder
    proveedor_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: comprasCountOrderByAggregateInput
    _avg?: comprasAvgOrderByAggregateInput
    _max?: comprasMaxOrderByAggregateInput
    _min?: comprasMinOrderByAggregateInput
    _sum?: comprasSumOrderByAggregateInput
  }

  export type comprasScalarWhereWithAggregatesInput = {
    AND?: comprasScalarWhereWithAggregatesInput | comprasScalarWhereWithAggregatesInput[]
    OR?: comprasScalarWhereWithAggregatesInput[]
    NOT?: comprasScalarWhereWithAggregatesInput | comprasScalarWhereWithAggregatesInput[]
    compra_id?: IntWithAggregatesFilter<"compras"> | number
    usuario_contable_id?: IntWithAggregatesFilter<"compras"> | number
    proveedor_id?: IntWithAggregatesFilter<"compras"> | number
    fecha?: DateTimeWithAggregatesFilter<"compras"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"compras"> | Date | string | null
  }

  export type detalle_comprasWhereInput = {
    AND?: detalle_comprasWhereInput | detalle_comprasWhereInput[]
    OR?: detalle_comprasWhereInput[]
    NOT?: detalle_comprasWhereInput | detalle_comprasWhereInput[]
    detalle_id?: IntFilter<"detalle_compras"> | number
    compra_id?: IntFilter<"detalle_compras"> | number
    insumo_id?: IntFilter<"detalle_compras"> | number
    precio?: DecimalFilter<"detalle_compras"> | Decimal | DecimalJsLike | number | string
    cantidad?: IntFilter<"detalle_compras"> | number
    deleted_at?: DateTimeNullableFilter<"detalle_compras"> | Date | string | null
    compra?: XOR<ComprasScalarRelationFilter, comprasWhereInput>
    insumo?: XOR<InsumosScalarRelationFilter, insumosWhereInput>
  }

  export type detalle_comprasOrderByWithRelationInput = {
    detalle_id?: SortOrder
    compra_id?: SortOrder
    insumo_id?: SortOrder
    precio?: SortOrder
    cantidad?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    compra?: comprasOrderByWithRelationInput
    insumo?: insumosOrderByWithRelationInput
  }

  export type detalle_comprasWhereUniqueInput = Prisma.AtLeast<{
    detalle_id?: number
    AND?: detalle_comprasWhereInput | detalle_comprasWhereInput[]
    OR?: detalle_comprasWhereInput[]
    NOT?: detalle_comprasWhereInput | detalle_comprasWhereInput[]
    compra_id?: IntFilter<"detalle_compras"> | number
    insumo_id?: IntFilter<"detalle_compras"> | number
    precio?: DecimalFilter<"detalle_compras"> | Decimal | DecimalJsLike | number | string
    cantidad?: IntFilter<"detalle_compras"> | number
    deleted_at?: DateTimeNullableFilter<"detalle_compras"> | Date | string | null
    compra?: XOR<ComprasScalarRelationFilter, comprasWhereInput>
    insumo?: XOR<InsumosScalarRelationFilter, insumosWhereInput>
  }, "detalle_id">

  export type detalle_comprasOrderByWithAggregationInput = {
    detalle_id?: SortOrder
    compra_id?: SortOrder
    insumo_id?: SortOrder
    precio?: SortOrder
    cantidad?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: detalle_comprasCountOrderByAggregateInput
    _avg?: detalle_comprasAvgOrderByAggregateInput
    _max?: detalle_comprasMaxOrderByAggregateInput
    _min?: detalle_comprasMinOrderByAggregateInput
    _sum?: detalle_comprasSumOrderByAggregateInput
  }

  export type detalle_comprasScalarWhereWithAggregatesInput = {
    AND?: detalle_comprasScalarWhereWithAggregatesInput | detalle_comprasScalarWhereWithAggregatesInput[]
    OR?: detalle_comprasScalarWhereWithAggregatesInput[]
    NOT?: detalle_comprasScalarWhereWithAggregatesInput | detalle_comprasScalarWhereWithAggregatesInput[]
    detalle_id?: IntWithAggregatesFilter<"detalle_compras"> | number
    compra_id?: IntWithAggregatesFilter<"detalle_compras"> | number
    insumo_id?: IntWithAggregatesFilter<"detalle_compras"> | number
    precio?: DecimalWithAggregatesFilter<"detalle_compras"> | Decimal | DecimalJsLike | number | string
    cantidad?: IntWithAggregatesFilter<"detalle_compras"> | number
    deleted_at?: DateTimeNullableWithAggregatesFilter<"detalle_compras"> | Date | string | null
  }

  export type evento_sanitarioWhereInput = {
    AND?: evento_sanitarioWhereInput | evento_sanitarioWhereInput[]
    OR?: evento_sanitarioWhereInput[]
    NOT?: evento_sanitarioWhereInput | evento_sanitarioWhereInput[]
    evento_sanitario_id?: IntFilter<"evento_sanitario"> | number
    animal_id?: IntFilter<"evento_sanitario"> | number
    tipo_evento_id?: IntFilter<"evento_sanitario"> | number
    usuario_veterinario_id?: IntFilter<"evento_sanitario"> | number
    usuario_operador_id?: IntFilter<"evento_sanitario"> | number
    estado?: StringNullableFilter<"evento_sanitario"> | string | null
    diagnostico?: StringNullableFilter<"evento_sanitario"> | string | null
    tratamiento?: StringNullableFilter<"evento_sanitario"> | string | null
    fecha_diagnostico?: DateTimeNullableFilter<"evento_sanitario"> | Date | string | null
    fecha?: DateTimeFilter<"evento_sanitario"> | Date | string
    deleted_at?: DateTimeNullableFilter<"evento_sanitario"> | Date | string | null
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    tipo_evento?: XOR<Tipo_eventoScalarRelationFilter, tipo_eventoWhereInput>
    veterinario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    operador?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    insumos_usados?: Evento_insumoListRelationFilter
  }

  export type evento_sanitarioOrderByWithRelationInput = {
    evento_sanitario_id?: SortOrder
    animal_id?: SortOrder
    tipo_evento_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    estado?: SortOrderInput | SortOrder
    diagnostico?: SortOrderInput | SortOrder
    tratamiento?: SortOrderInput | SortOrder
    fecha_diagnostico?: SortOrderInput | SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    animal?: animalesOrderByWithRelationInput
    tipo_evento?: tipo_eventoOrderByWithRelationInput
    veterinario?: usuariosOrderByWithRelationInput
    operador?: usuariosOrderByWithRelationInput
    insumos_usados?: evento_insumoOrderByRelationAggregateInput
  }

  export type evento_sanitarioWhereUniqueInput = Prisma.AtLeast<{
    evento_sanitario_id?: number
    AND?: evento_sanitarioWhereInput | evento_sanitarioWhereInput[]
    OR?: evento_sanitarioWhereInput[]
    NOT?: evento_sanitarioWhereInput | evento_sanitarioWhereInput[]
    animal_id?: IntFilter<"evento_sanitario"> | number
    tipo_evento_id?: IntFilter<"evento_sanitario"> | number
    usuario_veterinario_id?: IntFilter<"evento_sanitario"> | number
    usuario_operador_id?: IntFilter<"evento_sanitario"> | number
    estado?: StringNullableFilter<"evento_sanitario"> | string | null
    diagnostico?: StringNullableFilter<"evento_sanitario"> | string | null
    tratamiento?: StringNullableFilter<"evento_sanitario"> | string | null
    fecha_diagnostico?: DateTimeNullableFilter<"evento_sanitario"> | Date | string | null
    fecha?: DateTimeFilter<"evento_sanitario"> | Date | string
    deleted_at?: DateTimeNullableFilter<"evento_sanitario"> | Date | string | null
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    tipo_evento?: XOR<Tipo_eventoScalarRelationFilter, tipo_eventoWhereInput>
    veterinario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    operador?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    insumos_usados?: Evento_insumoListRelationFilter
  }, "evento_sanitario_id">

  export type evento_sanitarioOrderByWithAggregationInput = {
    evento_sanitario_id?: SortOrder
    animal_id?: SortOrder
    tipo_evento_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    estado?: SortOrderInput | SortOrder
    diagnostico?: SortOrderInput | SortOrder
    tratamiento?: SortOrderInput | SortOrder
    fecha_diagnostico?: SortOrderInput | SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: evento_sanitarioCountOrderByAggregateInput
    _avg?: evento_sanitarioAvgOrderByAggregateInput
    _max?: evento_sanitarioMaxOrderByAggregateInput
    _min?: evento_sanitarioMinOrderByAggregateInput
    _sum?: evento_sanitarioSumOrderByAggregateInput
  }

  export type evento_sanitarioScalarWhereWithAggregatesInput = {
    AND?: evento_sanitarioScalarWhereWithAggregatesInput | evento_sanitarioScalarWhereWithAggregatesInput[]
    OR?: evento_sanitarioScalarWhereWithAggregatesInput[]
    NOT?: evento_sanitarioScalarWhereWithAggregatesInput | evento_sanitarioScalarWhereWithAggregatesInput[]
    evento_sanitario_id?: IntWithAggregatesFilter<"evento_sanitario"> | number
    animal_id?: IntWithAggregatesFilter<"evento_sanitario"> | number
    tipo_evento_id?: IntWithAggregatesFilter<"evento_sanitario"> | number
    usuario_veterinario_id?: IntWithAggregatesFilter<"evento_sanitario"> | number
    usuario_operador_id?: IntWithAggregatesFilter<"evento_sanitario"> | number
    estado?: StringNullableWithAggregatesFilter<"evento_sanitario"> | string | null
    diagnostico?: StringNullableWithAggregatesFilter<"evento_sanitario"> | string | null
    tratamiento?: StringNullableWithAggregatesFilter<"evento_sanitario"> | string | null
    fecha_diagnostico?: DateTimeNullableWithAggregatesFilter<"evento_sanitario"> | Date | string | null
    fecha?: DateTimeWithAggregatesFilter<"evento_sanitario"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"evento_sanitario"> | Date | string | null
  }

  export type evento_insumoWhereInput = {
    AND?: evento_insumoWhereInput | evento_insumoWhereInput[]
    OR?: evento_insumoWhereInput[]
    NOT?: evento_insumoWhereInput | evento_insumoWhereInput[]
    evento_sanitario_id?: IntFilter<"evento_insumo"> | number
    insumo_id?: IntFilter<"evento_insumo"> | number
    cantidad?: IntFilter<"evento_insumo"> | number
    deleted_at?: DateTimeNullableFilter<"evento_insumo"> | Date | string | null
    evento_sanitario?: XOR<Evento_sanitarioScalarRelationFilter, evento_sanitarioWhereInput>
    insumo?: XOR<InsumosScalarRelationFilter, insumosWhereInput>
  }

  export type evento_insumoOrderByWithRelationInput = {
    evento_sanitario_id?: SortOrder
    insumo_id?: SortOrder
    cantidad?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    evento_sanitario?: evento_sanitarioOrderByWithRelationInput
    insumo?: insumosOrderByWithRelationInput
  }

  export type evento_insumoWhereUniqueInput = Prisma.AtLeast<{
    evento_sanitario_id_insumo_id?: evento_insumoEvento_sanitario_idInsumo_idCompoundUniqueInput
    AND?: evento_insumoWhereInput | evento_insumoWhereInput[]
    OR?: evento_insumoWhereInput[]
    NOT?: evento_insumoWhereInput | evento_insumoWhereInput[]
    evento_sanitario_id?: IntFilter<"evento_insumo"> | number
    insumo_id?: IntFilter<"evento_insumo"> | number
    cantidad?: IntFilter<"evento_insumo"> | number
    deleted_at?: DateTimeNullableFilter<"evento_insumo"> | Date | string | null
    evento_sanitario?: XOR<Evento_sanitarioScalarRelationFilter, evento_sanitarioWhereInput>
    insumo?: XOR<InsumosScalarRelationFilter, insumosWhereInput>
  }, "evento_sanitario_id_insumo_id">

  export type evento_insumoOrderByWithAggregationInput = {
    evento_sanitario_id?: SortOrder
    insumo_id?: SortOrder
    cantidad?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: evento_insumoCountOrderByAggregateInput
    _avg?: evento_insumoAvgOrderByAggregateInput
    _max?: evento_insumoMaxOrderByAggregateInput
    _min?: evento_insumoMinOrderByAggregateInput
    _sum?: evento_insumoSumOrderByAggregateInput
  }

  export type evento_insumoScalarWhereWithAggregatesInput = {
    AND?: evento_insumoScalarWhereWithAggregatesInput | evento_insumoScalarWhereWithAggregatesInput[]
    OR?: evento_insumoScalarWhereWithAggregatesInput[]
    NOT?: evento_insumoScalarWhereWithAggregatesInput | evento_insumoScalarWhereWithAggregatesInput[]
    evento_sanitario_id?: IntWithAggregatesFilter<"evento_insumo"> | number
    insumo_id?: IntWithAggregatesFilter<"evento_insumo"> | number
    cantidad?: IntWithAggregatesFilter<"evento_insumo"> | number
    deleted_at?: DateTimeNullableWithAggregatesFilter<"evento_insumo"> | Date | string | null
  }

  export type alimentacionWhereInput = {
    AND?: alimentacionWhereInput | alimentacionWhereInput[]
    OR?: alimentacionWhereInput[]
    NOT?: alimentacionWhereInput | alimentacionWhereInput[]
    alimentacion_id?: IntFilter<"alimentacion"> | number
    insumo_id?: IntFilter<"alimentacion"> | number
    usuario_operador_id?: IntFilter<"alimentacion"> | number
    animal_id?: IntFilter<"alimentacion"> | number
    cantidad?: IntFilter<"alimentacion"> | number
    fecha?: DateTimeFilter<"alimentacion"> | Date | string
    deleted_at?: DateTimeNullableFilter<"alimentacion"> | Date | string | null
    insumo?: XOR<InsumosScalarRelationFilter, insumosWhereInput>
    usuario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
  }

  export type alimentacionOrderByWithRelationInput = {
    alimentacion_id?: SortOrder
    insumo_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    insumo?: insumosOrderByWithRelationInput
    usuario?: usuariosOrderByWithRelationInput
    animal?: animalesOrderByWithRelationInput
  }

  export type alimentacionWhereUniqueInput = Prisma.AtLeast<{
    alimentacion_id?: number
    AND?: alimentacionWhereInput | alimentacionWhereInput[]
    OR?: alimentacionWhereInput[]
    NOT?: alimentacionWhereInput | alimentacionWhereInput[]
    insumo_id?: IntFilter<"alimentacion"> | number
    usuario_operador_id?: IntFilter<"alimentacion"> | number
    animal_id?: IntFilter<"alimentacion"> | number
    cantidad?: IntFilter<"alimentacion"> | number
    fecha?: DateTimeFilter<"alimentacion"> | Date | string
    deleted_at?: DateTimeNullableFilter<"alimentacion"> | Date | string | null
    insumo?: XOR<InsumosScalarRelationFilter, insumosWhereInput>
    usuario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
  }, "alimentacion_id">

  export type alimentacionOrderByWithAggregationInput = {
    alimentacion_id?: SortOrder
    insumo_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: alimentacionCountOrderByAggregateInput
    _avg?: alimentacionAvgOrderByAggregateInput
    _max?: alimentacionMaxOrderByAggregateInput
    _min?: alimentacionMinOrderByAggregateInput
    _sum?: alimentacionSumOrderByAggregateInput
  }

  export type alimentacionScalarWhereWithAggregatesInput = {
    AND?: alimentacionScalarWhereWithAggregatesInput | alimentacionScalarWhereWithAggregatesInput[]
    OR?: alimentacionScalarWhereWithAggregatesInput[]
    NOT?: alimentacionScalarWhereWithAggregatesInput | alimentacionScalarWhereWithAggregatesInput[]
    alimentacion_id?: IntWithAggregatesFilter<"alimentacion"> | number
    insumo_id?: IntWithAggregatesFilter<"alimentacion"> | number
    usuario_operador_id?: IntWithAggregatesFilter<"alimentacion"> | number
    animal_id?: IntWithAggregatesFilter<"alimentacion"> | number
    cantidad?: IntWithAggregatesFilter<"alimentacion"> | number
    fecha?: DateTimeWithAggregatesFilter<"alimentacion"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"alimentacion"> | Date | string | null
  }

  export type pesajesWhereInput = {
    AND?: pesajesWhereInput | pesajesWhereInput[]
    OR?: pesajesWhereInput[]
    NOT?: pesajesWhereInput | pesajesWhereInput[]
    pesaje_id?: IntFilter<"pesajes"> | number
    usuario_operador_id?: IntFilter<"pesajes"> | number
    animal_id?: IntFilter<"pesajes"> | number
    unidad_id?: IntFilter<"pesajes"> | number
    peso?: DecimalFilter<"pesajes"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFilter<"pesajes"> | Date | string
    deleted_at?: DateTimeNullableFilter<"pesajes"> | Date | string | null
    usuario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    unidad?: XOR<UnidadesScalarRelationFilter, unidadesWhereInput>
  }

  export type pesajesOrderByWithRelationInput = {
    pesaje_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    unidad_id?: SortOrder
    peso?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    usuario?: usuariosOrderByWithRelationInput
    animal?: animalesOrderByWithRelationInput
    unidad?: unidadesOrderByWithRelationInput
  }

  export type pesajesWhereUniqueInput = Prisma.AtLeast<{
    pesaje_id?: number
    AND?: pesajesWhereInput | pesajesWhereInput[]
    OR?: pesajesWhereInput[]
    NOT?: pesajesWhereInput | pesajesWhereInput[]
    usuario_operador_id?: IntFilter<"pesajes"> | number
    animal_id?: IntFilter<"pesajes"> | number
    unidad_id?: IntFilter<"pesajes"> | number
    peso?: DecimalFilter<"pesajes"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFilter<"pesajes"> | Date | string
    deleted_at?: DateTimeNullableFilter<"pesajes"> | Date | string | null
    usuario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    unidad?: XOR<UnidadesScalarRelationFilter, unidadesWhereInput>
  }, "pesaje_id">

  export type pesajesOrderByWithAggregationInput = {
    pesaje_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    unidad_id?: SortOrder
    peso?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: pesajesCountOrderByAggregateInput
    _avg?: pesajesAvgOrderByAggregateInput
    _max?: pesajesMaxOrderByAggregateInput
    _min?: pesajesMinOrderByAggregateInput
    _sum?: pesajesSumOrderByAggregateInput
  }

  export type pesajesScalarWhereWithAggregatesInput = {
    AND?: pesajesScalarWhereWithAggregatesInput | pesajesScalarWhereWithAggregatesInput[]
    OR?: pesajesScalarWhereWithAggregatesInput[]
    NOT?: pesajesScalarWhereWithAggregatesInput | pesajesScalarWhereWithAggregatesInput[]
    pesaje_id?: IntWithAggregatesFilter<"pesajes"> | number
    usuario_operador_id?: IntWithAggregatesFilter<"pesajes"> | number
    animal_id?: IntWithAggregatesFilter<"pesajes"> | number
    unidad_id?: IntWithAggregatesFilter<"pesajes"> | number
    peso?: DecimalWithAggregatesFilter<"pesajes"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeWithAggregatesFilter<"pesajes"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"pesajes"> | Date | string | null
  }

  export type produccion_carneWhereInput = {
    AND?: produccion_carneWhereInput | produccion_carneWhereInput[]
    OR?: produccion_carneWhereInput[]
    NOT?: produccion_carneWhereInput | produccion_carneWhereInput[]
    produccion_id?: IntFilter<"produccion_carne"> | number
    animal_id?: IntFilter<"produccion_carne"> | number
    usuario_operador_id?: IntFilter<"produccion_carne"> | number
    fecha?: DateTimeFilter<"produccion_carne"> | Date | string
    deleted_at?: DateTimeNullableFilter<"produccion_carne"> | Date | string | null
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    usuario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type produccion_carneOrderByWithRelationInput = {
    produccion_id?: SortOrder
    animal_id?: SortOrder
    usuario_operador_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    animal?: animalesOrderByWithRelationInput
    usuario?: usuariosOrderByWithRelationInput
  }

  export type produccion_carneWhereUniqueInput = Prisma.AtLeast<{
    produccion_id?: number
    AND?: produccion_carneWhereInput | produccion_carneWhereInput[]
    OR?: produccion_carneWhereInput[]
    NOT?: produccion_carneWhereInput | produccion_carneWhereInput[]
    animal_id?: IntFilter<"produccion_carne"> | number
    usuario_operador_id?: IntFilter<"produccion_carne"> | number
    fecha?: DateTimeFilter<"produccion_carne"> | Date | string
    deleted_at?: DateTimeNullableFilter<"produccion_carne"> | Date | string | null
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    usuario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "produccion_id">

  export type produccion_carneOrderByWithAggregationInput = {
    produccion_id?: SortOrder
    animal_id?: SortOrder
    usuario_operador_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: produccion_carneCountOrderByAggregateInput
    _avg?: produccion_carneAvgOrderByAggregateInput
    _max?: produccion_carneMaxOrderByAggregateInput
    _min?: produccion_carneMinOrderByAggregateInput
    _sum?: produccion_carneSumOrderByAggregateInput
  }

  export type produccion_carneScalarWhereWithAggregatesInput = {
    AND?: produccion_carneScalarWhereWithAggregatesInput | produccion_carneScalarWhereWithAggregatesInput[]
    OR?: produccion_carneScalarWhereWithAggregatesInput[]
    NOT?: produccion_carneScalarWhereWithAggregatesInput | produccion_carneScalarWhereWithAggregatesInput[]
    produccion_id?: IntWithAggregatesFilter<"produccion_carne"> | number
    animal_id?: IntWithAggregatesFilter<"produccion_carne"> | number
    usuario_operador_id?: IntWithAggregatesFilter<"produccion_carne"> | number
    fecha?: DateTimeWithAggregatesFilter<"produccion_carne"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"produccion_carne"> | Date | string | null
  }

  export type produccion_lecheraWhereInput = {
    AND?: produccion_lecheraWhereInput | produccion_lecheraWhereInput[]
    OR?: produccion_lecheraWhereInput[]
    NOT?: produccion_lecheraWhereInput | produccion_lecheraWhereInput[]
    produccion_id?: IntFilter<"produccion_lechera"> | number
    usuario_ordeño_id?: IntFilter<"produccion_lechera"> | number
    animal_id?: IntFilter<"produccion_lechera"> | number
    cantidad?: IntFilter<"produccion_lechera"> | number
    unidad_id?: IntFilter<"produccion_lechera"> | number
    fecha?: DateTimeFilter<"produccion_lechera"> | Date | string
    descripcion?: StringNullableFilter<"produccion_lechera"> | string | null
    deleted_at?: DateTimeNullableFilter<"produccion_lechera"> | Date | string | null
    usuario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    unidad?: XOR<UnidadesScalarRelationFilter, unidadesWhereInput>
  }

  export type produccion_lecheraOrderByWithRelationInput = {
    produccion_id?: SortOrder
    usuario_ordeño_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
    fecha?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    usuario?: usuariosOrderByWithRelationInput
    animal?: animalesOrderByWithRelationInput
    unidad?: unidadesOrderByWithRelationInput
  }

  export type produccion_lecheraWhereUniqueInput = Prisma.AtLeast<{
    produccion_id?: number
    AND?: produccion_lecheraWhereInput | produccion_lecheraWhereInput[]
    OR?: produccion_lecheraWhereInput[]
    NOT?: produccion_lecheraWhereInput | produccion_lecheraWhereInput[]
    usuario_ordeño_id?: IntFilter<"produccion_lechera"> | number
    animal_id?: IntFilter<"produccion_lechera"> | number
    cantidad?: IntFilter<"produccion_lechera"> | number
    unidad_id?: IntFilter<"produccion_lechera"> | number
    fecha?: DateTimeFilter<"produccion_lechera"> | Date | string
    descripcion?: StringNullableFilter<"produccion_lechera"> | string | null
    deleted_at?: DateTimeNullableFilter<"produccion_lechera"> | Date | string | null
    usuario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    unidad?: XOR<UnidadesScalarRelationFilter, unidadesWhereInput>
  }, "produccion_id">

  export type produccion_lecheraOrderByWithAggregationInput = {
    produccion_id?: SortOrder
    usuario_ordeño_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
    fecha?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: produccion_lecheraCountOrderByAggregateInput
    _avg?: produccion_lecheraAvgOrderByAggregateInput
    _max?: produccion_lecheraMaxOrderByAggregateInput
    _min?: produccion_lecheraMinOrderByAggregateInput
    _sum?: produccion_lecheraSumOrderByAggregateInput
  }

  export type produccion_lecheraScalarWhereWithAggregatesInput = {
    AND?: produccion_lecheraScalarWhereWithAggregatesInput | produccion_lecheraScalarWhereWithAggregatesInput[]
    OR?: produccion_lecheraScalarWhereWithAggregatesInput[]
    NOT?: produccion_lecheraScalarWhereWithAggregatesInput | produccion_lecheraScalarWhereWithAggregatesInput[]
    produccion_id?: IntWithAggregatesFilter<"produccion_lechera"> | number
    usuario_ordeño_id?: IntWithAggregatesFilter<"produccion_lechera"> | number
    animal_id?: IntWithAggregatesFilter<"produccion_lechera"> | number
    cantidad?: IntWithAggregatesFilter<"produccion_lechera"> | number
    unidad_id?: IntWithAggregatesFilter<"produccion_lechera"> | number
    fecha?: DateTimeWithAggregatesFilter<"produccion_lechera"> | Date | string
    descripcion?: StringNullableWithAggregatesFilter<"produccion_lechera"> | string | null
    deleted_at?: DateTimeNullableWithAggregatesFilter<"produccion_lechera"> | Date | string | null
  }

  export type evento_montaWhereInput = {
    AND?: evento_montaWhereInput | evento_montaWhereInput[]
    OR?: evento_montaWhereInput[]
    NOT?: evento_montaWhereInput | evento_montaWhereInput[]
    monta_id?: IntFilter<"evento_monta"> | number
    usuario_veterinario_id?: IntFilter<"evento_monta"> | number
    animal_hembra_id?: IntFilter<"evento_monta"> | number
    animal_macho_id?: IntFilter<"evento_monta"> | number
    tipo_evento_id?: IntFilter<"evento_monta"> | number
    fecha?: DateTimeFilter<"evento_monta"> | Date | string
    deleted_at?: DateTimeNullableFilter<"evento_monta"> | Date | string | null
    veterinario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    hembra?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    macho?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    tipo_evento?: XOR<Tipo_eventoScalarRelationFilter, tipo_eventoWhereInput>
    diagnosticos?: Diagnostico_preñezListRelationFilter
  }

  export type evento_montaOrderByWithRelationInput = {
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    animal_hembra_id?: SortOrder
    animal_macho_id?: SortOrder
    tipo_evento_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    veterinario?: usuariosOrderByWithRelationInput
    hembra?: animalesOrderByWithRelationInput
    macho?: animalesOrderByWithRelationInput
    tipo_evento?: tipo_eventoOrderByWithRelationInput
    diagnosticos?: diagnostico_preñezOrderByRelationAggregateInput
  }

  export type evento_montaWhereUniqueInput = Prisma.AtLeast<{
    monta_id?: number
    AND?: evento_montaWhereInput | evento_montaWhereInput[]
    OR?: evento_montaWhereInput[]
    NOT?: evento_montaWhereInput | evento_montaWhereInput[]
    usuario_veterinario_id?: IntFilter<"evento_monta"> | number
    animal_hembra_id?: IntFilter<"evento_monta"> | number
    animal_macho_id?: IntFilter<"evento_monta"> | number
    tipo_evento_id?: IntFilter<"evento_monta"> | number
    fecha?: DateTimeFilter<"evento_monta"> | Date | string
    deleted_at?: DateTimeNullableFilter<"evento_monta"> | Date | string | null
    veterinario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    hembra?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    macho?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    tipo_evento?: XOR<Tipo_eventoScalarRelationFilter, tipo_eventoWhereInput>
    diagnosticos?: Diagnostico_preñezListRelationFilter
  }, "monta_id">

  export type evento_montaOrderByWithAggregationInput = {
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    animal_hembra_id?: SortOrder
    animal_macho_id?: SortOrder
    tipo_evento_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: evento_montaCountOrderByAggregateInput
    _avg?: evento_montaAvgOrderByAggregateInput
    _max?: evento_montaMaxOrderByAggregateInput
    _min?: evento_montaMinOrderByAggregateInput
    _sum?: evento_montaSumOrderByAggregateInput
  }

  export type evento_montaScalarWhereWithAggregatesInput = {
    AND?: evento_montaScalarWhereWithAggregatesInput | evento_montaScalarWhereWithAggregatesInput[]
    OR?: evento_montaScalarWhereWithAggregatesInput[]
    NOT?: evento_montaScalarWhereWithAggregatesInput | evento_montaScalarWhereWithAggregatesInput[]
    monta_id?: IntWithAggregatesFilter<"evento_monta"> | number
    usuario_veterinario_id?: IntWithAggregatesFilter<"evento_monta"> | number
    animal_hembra_id?: IntWithAggregatesFilter<"evento_monta"> | number
    animal_macho_id?: IntWithAggregatesFilter<"evento_monta"> | number
    tipo_evento_id?: IntWithAggregatesFilter<"evento_monta"> | number
    fecha?: DateTimeWithAggregatesFilter<"evento_monta"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"evento_monta"> | Date | string | null
  }

  export type diagnostico_preñezWhereInput = {
    AND?: diagnostico_preñezWhereInput | diagnostico_preñezWhereInput[]
    OR?: diagnostico_preñezWhereInput[]
    NOT?: diagnostico_preñezWhereInput | diagnostico_preñezWhereInput[]
    preñez_id?: IntFilter<"diagnostico_preñez"> | number
    monta_id?: IntFilter<"diagnostico_preñez"> | number
    usuario_veterinario_id?: IntFilter<"diagnostico_preñez"> | number
    metodo?: StringNullableFilter<"diagnostico_preñez"> | string | null
    resultado?: BoolNullableFilter<"diagnostico_preñez"> | boolean | null
    fecha_probable_parto?: DateTimeNullableFilter<"diagnostico_preñez"> | Date | string | null
    fecha?: DateTimeFilter<"diagnostico_preñez"> | Date | string
    deleted_at?: DateTimeNullableFilter<"diagnostico_preñez"> | Date | string | null
    monta?: XOR<Evento_montaScalarRelationFilter, evento_montaWhereInput>
    veterinario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }

  export type diagnostico_preñezOrderByWithRelationInput = {
    preñez_id?: SortOrder
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    metodo?: SortOrderInput | SortOrder
    resultado?: SortOrderInput | SortOrder
    fecha_probable_parto?: SortOrderInput | SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    monta?: evento_montaOrderByWithRelationInput
    veterinario?: usuariosOrderByWithRelationInput
  }

  export type diagnostico_preñezWhereUniqueInput = Prisma.AtLeast<{
    preñez_id?: number
    AND?: diagnostico_preñezWhereInput | diagnostico_preñezWhereInput[]
    OR?: diagnostico_preñezWhereInput[]
    NOT?: diagnostico_preñezWhereInput | diagnostico_preñezWhereInput[]
    monta_id?: IntFilter<"diagnostico_preñez"> | number
    usuario_veterinario_id?: IntFilter<"diagnostico_preñez"> | number
    metodo?: StringNullableFilter<"diagnostico_preñez"> | string | null
    resultado?: BoolNullableFilter<"diagnostico_preñez"> | boolean | null
    fecha_probable_parto?: DateTimeNullableFilter<"diagnostico_preñez"> | Date | string | null
    fecha?: DateTimeFilter<"diagnostico_preñez"> | Date | string
    deleted_at?: DateTimeNullableFilter<"diagnostico_preñez"> | Date | string | null
    monta?: XOR<Evento_montaScalarRelationFilter, evento_montaWhereInput>
    veterinario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
  }, "preñez_id">

  export type diagnostico_preñezOrderByWithAggregationInput = {
    preñez_id?: SortOrder
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    metodo?: SortOrderInput | SortOrder
    resultado?: SortOrderInput | SortOrder
    fecha_probable_parto?: SortOrderInput | SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: diagnostico_preñezCountOrderByAggregateInput
    _avg?: diagnostico_preñezAvgOrderByAggregateInput
    _max?: diagnostico_preñezMaxOrderByAggregateInput
    _min?: diagnostico_preñezMinOrderByAggregateInput
    _sum?: diagnostico_preñezSumOrderByAggregateInput
  }

  export type diagnostico_preñezScalarWhereWithAggregatesInput = {
    AND?: diagnostico_preñezScalarWhereWithAggregatesInput | diagnostico_preñezScalarWhereWithAggregatesInput[]
    OR?: diagnostico_preñezScalarWhereWithAggregatesInput[]
    NOT?: diagnostico_preñezScalarWhereWithAggregatesInput | diagnostico_preñezScalarWhereWithAggregatesInput[]
    preñez_id?: IntWithAggregatesFilter<"diagnostico_preñez"> | number
    monta_id?: IntWithAggregatesFilter<"diagnostico_preñez"> | number
    usuario_veterinario_id?: IntWithAggregatesFilter<"diagnostico_preñez"> | number
    metodo?: StringNullableWithAggregatesFilter<"diagnostico_preñez"> | string | null
    resultado?: BoolNullableWithAggregatesFilter<"diagnostico_preñez"> | boolean | null
    fecha_probable_parto?: DateTimeNullableWithAggregatesFilter<"diagnostico_preñez"> | Date | string | null
    fecha?: DateTimeWithAggregatesFilter<"diagnostico_preñez"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"diagnostico_preñez"> | Date | string | null
  }

  export type evento_partoWhereInput = {
    AND?: evento_partoWhereInput | evento_partoWhereInput[]
    OR?: evento_partoWhereInput[]
    NOT?: evento_partoWhereInput | evento_partoWhereInput[]
    evento_id?: IntFilter<"evento_parto"> | number
    animal_id?: IntFilter<"evento_parto"> | number
    usuario_veterinario_id?: IntFilter<"evento_parto"> | number
    usuario_operador_id?: IntFilter<"evento_parto"> | number
    tipo_evento_id?: IntFilter<"evento_parto"> | number
    descripcion?: StringNullableFilter<"evento_parto"> | string | null
    fecha?: DateTimeFilter<"evento_parto"> | Date | string
    deleted_at?: DateTimeNullableFilter<"evento_parto"> | Date | string | null
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    veterinario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    operador?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    tipo_evento?: XOR<Tipo_eventoScalarRelationFilter, tipo_eventoWhereInput>
  }

  export type evento_partoOrderByWithRelationInput = {
    evento_id?: SortOrder
    animal_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    tipo_evento_id?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    animal?: animalesOrderByWithRelationInput
    veterinario?: usuariosOrderByWithRelationInput
    operador?: usuariosOrderByWithRelationInput
    tipo_evento?: tipo_eventoOrderByWithRelationInput
  }

  export type evento_partoWhereUniqueInput = Prisma.AtLeast<{
    evento_id?: number
    AND?: evento_partoWhereInput | evento_partoWhereInput[]
    OR?: evento_partoWhereInput[]
    NOT?: evento_partoWhereInput | evento_partoWhereInput[]
    animal_id?: IntFilter<"evento_parto"> | number
    usuario_veterinario_id?: IntFilter<"evento_parto"> | number
    usuario_operador_id?: IntFilter<"evento_parto"> | number
    tipo_evento_id?: IntFilter<"evento_parto"> | number
    descripcion?: StringNullableFilter<"evento_parto"> | string | null
    fecha?: DateTimeFilter<"evento_parto"> | Date | string
    deleted_at?: DateTimeNullableFilter<"evento_parto"> | Date | string | null
    animal?: XOR<AnimalesScalarRelationFilter, animalesWhereInput>
    veterinario?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    operador?: XOR<UsuariosScalarRelationFilter, usuariosWhereInput>
    tipo_evento?: XOR<Tipo_eventoScalarRelationFilter, tipo_eventoWhereInput>
  }, "evento_id">

  export type evento_partoOrderByWithAggregationInput = {
    evento_id?: SortOrder
    animal_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    tipo_evento_id?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    _count?: evento_partoCountOrderByAggregateInput
    _avg?: evento_partoAvgOrderByAggregateInput
    _max?: evento_partoMaxOrderByAggregateInput
    _min?: evento_partoMinOrderByAggregateInput
    _sum?: evento_partoSumOrderByAggregateInput
  }

  export type evento_partoScalarWhereWithAggregatesInput = {
    AND?: evento_partoScalarWhereWithAggregatesInput | evento_partoScalarWhereWithAggregatesInput[]
    OR?: evento_partoScalarWhereWithAggregatesInput[]
    NOT?: evento_partoScalarWhereWithAggregatesInput | evento_partoScalarWhereWithAggregatesInput[]
    evento_id?: IntWithAggregatesFilter<"evento_parto"> | number
    animal_id?: IntWithAggregatesFilter<"evento_parto"> | number
    usuario_veterinario_id?: IntWithAggregatesFilter<"evento_parto"> | number
    usuario_operador_id?: IntWithAggregatesFilter<"evento_parto"> | number
    tipo_evento_id?: IntWithAggregatesFilter<"evento_parto"> | number
    descripcion?: StringNullableWithAggregatesFilter<"evento_parto"> | string | null
    fecha?: DateTimeWithAggregatesFilter<"evento_parto"> | Date | string
    deleted_at?: DateTimeNullableWithAggregatesFilter<"evento_parto"> | Date | string | null
  }

  export type rolesCreateInput = {
    nombre: string
    deleted_at?: Date | string | null
    usuarios?: usuariosCreateNestedManyWithoutRolInput
  }

  export type rolesUncheckedCreateInput = {
    rol_id?: number
    nombre: string
    deleted_at?: Date | string | null
    usuarios?: usuariosUncheckedCreateNestedManyWithoutRolInput
  }

  export type rolesUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUpdateManyWithoutRolNestedInput
  }

  export type rolesUncheckedUpdateInput = {
    rol_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUncheckedUpdateManyWithoutRolNestedInput
  }

  export type rolesCreateManyInput = {
    rol_id?: number
    nombre: string
    deleted_at?: Date | string | null
  }

  export type rolesUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolesUncheckedUpdateManyInput = {
    rol_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type fincaCreateInput = {
    nombre: string
    descripcion?: string | null
    ubicacion?: string | null
    deleted_at?: Date | string | null
    usuarios?: usuariosCreateNestedManyWithoutFincaInput
  }

  export type fincaUncheckedCreateInput = {
    finca_id?: number
    nombre: string
    descripcion?: string | null
    ubicacion?: string | null
    deleted_at?: Date | string | null
    usuarios?: usuariosUncheckedCreateNestedManyWithoutFincaInput
  }

  export type fincaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUpdateManyWithoutFincaNestedInput
  }

  export type fincaUncheckedUpdateInput = {
    finca_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuarios?: usuariosUncheckedUpdateManyWithoutFincaNestedInput
  }

  export type fincaCreateManyInput = {
    finca_id?: number
    nombre: string
    descripcion?: string | null
    ubicacion?: string | null
    deleted_at?: Date | string | null
  }

  export type fincaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type fincaUncheckedUpdateManyInput = {
    finca_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosCreateInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosCreateManyInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
  }

  export type usuariosUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosUncheckedUpdateManyInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type unidadesCreateInput = {
    nombre: string
    deleted_at?: Date | string | null
    insumos?: insumosCreateNestedManyWithoutUnidadInput
    pesajes?: pesajesCreateNestedManyWithoutUnidadInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUnidadInput
  }

  export type unidadesUncheckedCreateInput = {
    unidad_id?: number
    nombre: string
    deleted_at?: Date | string | null
    insumos?: insumosUncheckedCreateNestedManyWithoutUnidadInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutUnidadInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUnidadInput
  }

  export type unidadesUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos?: insumosUpdateManyWithoutUnidadNestedInput
    pesajes?: pesajesUpdateManyWithoutUnidadNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUnidadNestedInput
  }

  export type unidadesUncheckedUpdateInput = {
    unidad_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos?: insumosUncheckedUpdateManyWithoutUnidadNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutUnidadNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUnidadNestedInput
  }

  export type unidadesCreateManyInput = {
    unidad_id?: number
    nombre: string
    deleted_at?: Date | string | null
  }

  export type unidadesUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type unidadesUncheckedUpdateManyInput = {
    unidad_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_insumoCreateInput = {
    nombre: string
    deleted_at?: Date | string | null
    insumos?: insumosCreateNestedManyWithoutTipo_insumoInput
  }

  export type tipo_insumoUncheckedCreateInput = {
    tipo_insumo_id?: number
    nombre: string
    deleted_at?: Date | string | null
    insumos?: insumosUncheckedCreateNestedManyWithoutTipo_insumoInput
  }

  export type tipo_insumoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos?: insumosUpdateManyWithoutTipo_insumoNestedInput
  }

  export type tipo_insumoUncheckedUpdateInput = {
    tipo_insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos?: insumosUncheckedUpdateManyWithoutTipo_insumoNestedInput
  }

  export type tipo_insumoCreateManyInput = {
    tipo_insumo_id?: number
    nombre: string
    deleted_at?: Date | string | null
  }

  export type tipo_insumoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_insumoUncheckedUpdateManyInput = {
    tipo_insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type insumosCreateInput = {
    nombre: string
    cantidad: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    tipo_insumo: tipo_insumoCreateNestedOneWithoutInsumosInput
    unidad: unidadesCreateNestedOneWithoutInsumosInput
    detalle_compras?: detalle_comprasCreateNestedManyWithoutInsumoInput
    evento_insumos?: evento_insumoCreateNestedManyWithoutInsumoInput
    alimentaciones?: alimentacionCreateNestedManyWithoutInsumoInput
  }

  export type insumosUncheckedCreateInput = {
    insumo_id?: number
    tipo_insumo_id: number
    nombre: string
    cantidad: number
    unidad_id: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    detalle_compras?: detalle_comprasUncheckedCreateNestedManyWithoutInsumoInput
    evento_insumos?: evento_insumoUncheckedCreateNestedManyWithoutInsumoInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutInsumoInput
  }

  export type insumosUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_insumo?: tipo_insumoUpdateOneRequiredWithoutInsumosNestedInput
    unidad?: unidadesUpdateOneRequiredWithoutInsumosNestedInput
    detalle_compras?: detalle_comprasUpdateManyWithoutInsumoNestedInput
    evento_insumos?: evento_insumoUpdateManyWithoutInsumoNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutInsumoNestedInput
  }

  export type insumosUncheckedUpdateInput = {
    insumo_id?: IntFieldUpdateOperationsInput | number
    tipo_insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_compras?: detalle_comprasUncheckedUpdateManyWithoutInsumoNestedInput
    evento_insumos?: evento_insumoUncheckedUpdateManyWithoutInsumoNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutInsumoNestedInput
  }

  export type insumosCreateManyInput = {
    insumo_id?: number
    tipo_insumo_id: number
    nombre: string
    cantidad: number
    unidad_id: number
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type insumosUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type insumosUncheckedUpdateManyInput = {
    insumo_id?: IntFieldUpdateOperationsInput | number
    tipo_insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_eventoCreateInput = {
    nombre: string
    deleted_at?: Date | string | null
    padre?: tipo_eventoCreateNestedOneWithoutHijosInput
    hijos?: tipo_eventoCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutTipo_eventoInput
    eventos_monta?: evento_montaCreateNestedManyWithoutTipo_eventoInput
    eventos_parto?: evento_partoCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoUncheckedCreateInput = {
    tipo_evento_id?: number
    nombre: string
    padre_id?: number | null
    deleted_at?: Date | string | null
    hijos?: tipo_eventoUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutTipo_eventoInput
    eventos_monta?: evento_montaUncheckedCreateNestedManyWithoutTipo_eventoInput
    eventos_parto?: evento_partoUncheckedCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    padre?: tipo_eventoUpdateOneWithoutHijosNestedInput
    hijos?: tipo_eventoUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutTipo_eventoNestedInput
    eventos_monta?: evento_montaUpdateManyWithoutTipo_eventoNestedInput
    eventos_parto?: evento_partoUpdateManyWithoutTipo_eventoNestedInput
  }

  export type tipo_eventoUncheckedUpdateInput = {
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos?: tipo_eventoUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutTipo_eventoNestedInput
    eventos_monta?: evento_montaUncheckedUpdateManyWithoutTipo_eventoNestedInput
    eventos_parto?: evento_partoUncheckedUpdateManyWithoutTipo_eventoNestedInput
  }

  export type tipo_eventoCreateManyInput = {
    tipo_evento_id?: number
    nombre: string
    padre_id?: number | null
    deleted_at?: Date | string | null
  }

  export type tipo_eventoUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_eventoUncheckedUpdateManyInput = {
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type razasCreateInput = {
    nombre: string
    descripcion?: string | null
    deleted_at?: Date | string | null
    animales?: animalesCreateNestedManyWithoutRazaInput
  }

  export type razasUncheckedCreateInput = {
    raza_id?: number
    nombre: string
    descripcion?: string | null
    deleted_at?: Date | string | null
    animales?: animalesUncheckedCreateNestedManyWithoutRazaInput
  }

  export type razasUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animales?: animalesUpdateManyWithoutRazaNestedInput
  }

  export type razasUncheckedUpdateInput = {
    raza_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animales?: animalesUncheckedUpdateManyWithoutRazaNestedInput
  }

  export type razasCreateManyInput = {
    raza_id?: number
    nombre: string
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type razasUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type razasUncheckedUpdateManyInput = {
    raza_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type potrerosCreateInput = {
    ubicacion: string
    deleted_at?: Date | string | null
    lotes?: lotesCreateNestedManyWithoutPotreroInput
  }

  export type potrerosUncheckedCreateInput = {
    potrero_id?: number
    ubicacion: string
    deleted_at?: Date | string | null
    lotes?: lotesUncheckedCreateNestedManyWithoutPotreroInput
  }

  export type potrerosUpdateInput = {
    ubicacion?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lotes?: lotesUpdateManyWithoutPotreroNestedInput
  }

  export type potrerosUncheckedUpdateInput = {
    potrero_id?: IntFieldUpdateOperationsInput | number
    ubicacion?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    lotes?: lotesUncheckedUpdateManyWithoutPotreroNestedInput
  }

  export type potrerosCreateManyInput = {
    potrero_id?: number
    ubicacion: string
    deleted_at?: Date | string | null
  }

  export type potrerosUpdateManyMutationInput = {
    ubicacion?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type potrerosUncheckedUpdateManyInput = {
    potrero_id?: IntFieldUpdateOperationsInput | number
    ubicacion?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type lotesCreateInput = {
    descripcion?: string | null
    deleted_at?: Date | string | null
    potrero: potrerosCreateNestedOneWithoutLotesInput
    animales?: animalesCreateNestedManyWithoutLoteInput
  }

  export type lotesUncheckedCreateInput = {
    lote_id?: number
    potrero_id: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    animales?: animalesUncheckedCreateNestedManyWithoutLoteInput
  }

  export type lotesUpdateInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    potrero?: potrerosUpdateOneRequiredWithoutLotesNestedInput
    animales?: animalesUpdateManyWithoutLoteNestedInput
  }

  export type lotesUncheckedUpdateInput = {
    lote_id?: IntFieldUpdateOperationsInput | number
    potrero_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animales?: animalesUncheckedUpdateManyWithoutLoteNestedInput
  }

  export type lotesCreateManyInput = {
    lote_id?: number
    potrero_id: number
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type lotesUpdateManyMutationInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type lotesUncheckedUpdateManyInput = {
    lote_id?: IntFieldUpdateOperationsInput | number
    potrero_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type animalesCreateInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesUpdateInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type animalesCreateManyInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
  }

  export type animalesUpdateManyMutationInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type animalesUncheckedUpdateManyInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proveedoresCreateInput = {
    nombre_compañia: string
    nombre_contacto?: string | null
    telefono?: string | null
    deleted_at?: Date | string | null
    compras?: comprasCreateNestedManyWithoutProveedorInput
  }

  export type proveedoresUncheckedCreateInput = {
    proveedor_id?: number
    nombre_compañia: string
    nombre_contacto?: string | null
    telefono?: string | null
    deleted_at?: Date | string | null
    compras?: comprasUncheckedCreateNestedManyWithoutProveedorInput
  }

  export type proveedoresUpdateInput = {
    nombre_compañia?: StringFieldUpdateOperationsInput | string
    nombre_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compras?: comprasUpdateManyWithoutProveedorNestedInput
  }

  export type proveedoresUncheckedUpdateInput = {
    proveedor_id?: IntFieldUpdateOperationsInput | number
    nombre_compañia?: StringFieldUpdateOperationsInput | string
    nombre_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compras?: comprasUncheckedUpdateManyWithoutProveedorNestedInput
  }

  export type proveedoresCreateManyInput = {
    proveedor_id?: number
    nombre_compañia: string
    nombre_contacto?: string | null
    telefono?: string | null
    deleted_at?: Date | string | null
  }

  export type proveedoresUpdateManyMutationInput = {
    nombre_compañia?: StringFieldUpdateOperationsInput | string
    nombre_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proveedoresUncheckedUpdateManyInput = {
    proveedor_id?: IntFieldUpdateOperationsInput | number
    nombre_compañia?: StringFieldUpdateOperationsInput | string
    nombre_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type comprasCreateInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    usuario_contable: usuariosCreateNestedOneWithoutCompras_realizadasInput
    proveedor: proveedoresCreateNestedOneWithoutComprasInput
    detalle_compras?: detalle_comprasCreateNestedManyWithoutCompraInput
  }

  export type comprasUncheckedCreateInput = {
    compra_id?: number
    usuario_contable_id: number
    proveedor_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
    detalle_compras?: detalle_comprasUncheckedCreateNestedManyWithoutCompraInput
  }

  export type comprasUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario_contable?: usuariosUpdateOneRequiredWithoutCompras_realizadasNestedInput
    proveedor?: proveedoresUpdateOneRequiredWithoutComprasNestedInput
    detalle_compras?: detalle_comprasUpdateManyWithoutCompraNestedInput
  }

  export type comprasUncheckedUpdateInput = {
    compra_id?: IntFieldUpdateOperationsInput | number
    usuario_contable_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_compras?: detalle_comprasUncheckedUpdateManyWithoutCompraNestedInput
  }

  export type comprasCreateManyInput = {
    compra_id?: number
    usuario_contable_id: number
    proveedor_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type comprasUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type comprasUncheckedUpdateManyInput = {
    compra_id?: IntFieldUpdateOperationsInput | number
    usuario_contable_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalle_comprasCreateInput = {
    precio: Decimal | DecimalJsLike | number | string
    cantidad: number
    deleted_at?: Date | string | null
    compra: comprasCreateNestedOneWithoutDetalle_comprasInput
    insumo: insumosCreateNestedOneWithoutDetalle_comprasInput
  }

  export type detalle_comprasUncheckedCreateInput = {
    detalle_id?: number
    compra_id: number
    insumo_id: number
    precio: Decimal | DecimalJsLike | number | string
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type detalle_comprasUpdateInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compra?: comprasUpdateOneRequiredWithoutDetalle_comprasNestedInput
    insumo?: insumosUpdateOneRequiredWithoutDetalle_comprasNestedInput
  }

  export type detalle_comprasUncheckedUpdateInput = {
    detalle_id?: IntFieldUpdateOperationsInput | number
    compra_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalle_comprasCreateManyInput = {
    detalle_id?: number
    compra_id: number
    insumo_id: number
    precio: Decimal | DecimalJsLike | number | string
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type detalle_comprasUpdateManyMutationInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalle_comprasUncheckedUpdateManyInput = {
    detalle_id?: IntFieldUpdateOperationsInput | number
    compra_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_sanitarioCreateInput = {
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutEventos_sanitariosInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_sanitariosInput
    veterinario: usuariosCreateNestedOneWithoutEventos_veterinarioInput
    operador: usuariosCreateNestedOneWithoutEventos_operadorInput
    insumos_usados?: evento_insumoCreateNestedManyWithoutEvento_sanitarioInput
  }

  export type evento_sanitarioUncheckedCreateInput = {
    evento_sanitario_id?: number
    animal_id: number
    tipo_evento_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    insumos_usados?: evento_insumoUncheckedCreateNestedManyWithoutEvento_sanitarioInput
  }

  export type evento_sanitarioUpdateInput = {
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutEventos_sanitariosNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_sanitariosNestedInput
    veterinario?: usuariosUpdateOneRequiredWithoutEventos_veterinarioNestedInput
    operador?: usuariosUpdateOneRequiredWithoutEventos_operadorNestedInput
    insumos_usados?: evento_insumoUpdateManyWithoutEvento_sanitarioNestedInput
  }

  export type evento_sanitarioUncheckedUpdateInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos_usados?: evento_insumoUncheckedUpdateManyWithoutEvento_sanitarioNestedInput
  }

  export type evento_sanitarioCreateManyInput = {
    evento_sanitario_id?: number
    animal_id: number
    tipo_evento_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_sanitarioUpdateManyMutationInput = {
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_sanitarioUncheckedUpdateManyInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_insumoCreateInput = {
    cantidad: number
    deleted_at?: Date | string | null
    evento_sanitario: evento_sanitarioCreateNestedOneWithoutInsumos_usadosInput
    insumo: insumosCreateNestedOneWithoutEvento_insumosInput
  }

  export type evento_insumoUncheckedCreateInput = {
    evento_sanitario_id: number
    insumo_id: number
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type evento_insumoUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evento_sanitario?: evento_sanitarioUpdateOneRequiredWithoutInsumos_usadosNestedInput
    insumo?: insumosUpdateOneRequiredWithoutEvento_insumosNestedInput
  }

  export type evento_insumoUncheckedUpdateInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_insumoCreateManyInput = {
    evento_sanitario_id: number
    insumo_id: number
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type evento_insumoUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_insumoUncheckedUpdateManyInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type alimentacionCreateInput = {
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
    insumo: insumosCreateNestedOneWithoutAlimentacionesInput
    usuario: usuariosCreateNestedOneWithoutAlimentacionesInput
    animal: animalesCreateNestedOneWithoutAlimentacionesInput
  }

  export type alimentacionUncheckedCreateInput = {
    alimentacion_id?: number
    insumo_id: number
    usuario_operador_id: number
    animal_id: number
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type alimentacionUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumo?: insumosUpdateOneRequiredWithoutAlimentacionesNestedInput
    usuario?: usuariosUpdateOneRequiredWithoutAlimentacionesNestedInput
    animal?: animalesUpdateOneRequiredWithoutAlimentacionesNestedInput
  }

  export type alimentacionUncheckedUpdateInput = {
    alimentacion_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type alimentacionCreateManyInput = {
    alimentacion_id?: number
    insumo_id: number
    usuario_operador_id: number
    animal_id: number
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type alimentacionUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type alimentacionUncheckedUpdateManyInput = {
    alimentacion_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pesajesCreateInput = {
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
    usuario: usuariosCreateNestedOneWithoutPesajes_realizadosInput
    animal: animalesCreateNestedOneWithoutPesajesInput
    unidad: unidadesCreateNestedOneWithoutPesajesInput
  }

  export type pesajesUncheckedCreateInput = {
    pesaje_id?: number
    usuario_operador_id: number
    animal_id: number
    unidad_id: number
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type pesajesUpdateInput = {
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario?: usuariosUpdateOneRequiredWithoutPesajes_realizadosNestedInput
    animal?: animalesUpdateOneRequiredWithoutPesajesNestedInput
    unidad?: unidadesUpdateOneRequiredWithoutPesajesNestedInput
  }

  export type pesajesUncheckedUpdateInput = {
    pesaje_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pesajesCreateManyInput = {
    pesaje_id?: number
    usuario_operador_id: number
    animal_id: number
    unidad_id: number
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type pesajesUpdateManyMutationInput = {
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pesajesUncheckedUpdateManyInput = {
    pesaje_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_carneCreateInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutProducciones_carneInput
    usuario: usuariosCreateNestedOneWithoutProducciones_carneInput
  }

  export type produccion_carneUncheckedCreateInput = {
    produccion_id?: number
    animal_id: number
    usuario_operador_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type produccion_carneUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutProducciones_carneNestedInput
    usuario?: usuariosUpdateOneRequiredWithoutProducciones_carneNestedInput
  }

  export type produccion_carneUncheckedUpdateInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_carneCreateManyInput = {
    produccion_id?: number
    animal_id: number
    usuario_operador_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type produccion_carneUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_carneUncheckedUpdateManyInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_lecheraCreateInput = {
    cantidad: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
    usuario: usuariosCreateNestedOneWithoutProducciones_lecheInput
    animal: animalesCreateNestedOneWithoutProducciones_lecheInput
    unidad: unidadesCreateNestedOneWithoutProducciones_lecheInput
  }

  export type produccion_lecheraUncheckedCreateInput = {
    produccion_id?: number
    usuario_ordeño_id: number
    animal_id: number
    cantidad: number
    unidad_id: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type produccion_lecheraUpdateInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario?: usuariosUpdateOneRequiredWithoutProducciones_lecheNestedInput
    animal?: animalesUpdateOneRequiredWithoutProducciones_lecheNestedInput
    unidad?: unidadesUpdateOneRequiredWithoutProducciones_lecheNestedInput
  }

  export type produccion_lecheraUncheckedUpdateInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    usuario_ordeño_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_lecheraCreateManyInput = {
    produccion_id?: number
    usuario_ordeño_id: number
    animal_id: number
    cantidad: number
    unidad_id: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type produccion_lecheraUpdateManyMutationInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_lecheraUncheckedUpdateManyInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    usuario_ordeño_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_montaCreateInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    veterinario: usuariosCreateNestedOneWithoutMontas_supervisadasInput
    hembra: animalesCreateNestedOneWithoutMontas_hembraInput
    macho: animalesCreateNestedOneWithoutMontas_machoInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_montaInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutMontaInput
  }

  export type evento_montaUncheckedCreateInput = {
    monta_id?: number
    usuario_veterinario_id: number
    animal_hembra_id: number
    animal_macho_id: number
    tipo_evento_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutMontaInput
  }

  export type evento_montaUpdateInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinario?: usuariosUpdateOneRequiredWithoutMontas_supervisadasNestedInput
    hembra?: animalesUpdateOneRequiredWithoutMontas_hembraNestedInput
    macho?: animalesUpdateOneRequiredWithoutMontas_machoNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_montaNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutMontaNestedInput
  }

  export type evento_montaUncheckedUpdateInput = {
    monta_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    animal_hembra_id?: IntFieldUpdateOperationsInput | number
    animal_macho_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutMontaNestedInput
  }

  export type evento_montaCreateManyInput = {
    monta_id?: number
    usuario_veterinario_id: number
    animal_hembra_id: number
    animal_macho_id: number
    tipo_evento_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_montaUpdateManyMutationInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_montaUncheckedUpdateManyInput = {
    monta_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    animal_hembra_id?: IntFieldUpdateOperationsInput | number
    animal_macho_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type diagnostico_preñezCreateInput = {
    metodo?: string | null
    resultado?: boolean | null
    fecha_probable_parto?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    monta: evento_montaCreateNestedOneWithoutDiagnosticosInput
    veterinario: usuariosCreateNestedOneWithoutDiagnosticosInput
  }

  export type diagnostico_preñezUncheckedCreateInput = {
    preñez_id?: number
    monta_id: number
    usuario_veterinario_id: number
    metodo?: string | null
    resultado?: boolean | null
    fecha_probable_parto?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type diagnostico_preñezUpdateInput = {
    metodo?: NullableStringFieldUpdateOperationsInput | string | null
    resultado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_probable_parto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monta?: evento_montaUpdateOneRequiredWithoutDiagnosticosNestedInput
    veterinario?: usuariosUpdateOneRequiredWithoutDiagnosticosNestedInput
  }

  export type diagnostico_preñezUncheckedUpdateInput = {
    preñez_id?: IntFieldUpdateOperationsInput | number
    monta_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    metodo?: NullableStringFieldUpdateOperationsInput | string | null
    resultado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_probable_parto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type diagnostico_preñezCreateManyInput = {
    preñez_id?: number
    monta_id: number
    usuario_veterinario_id: number
    metodo?: string | null
    resultado?: boolean | null
    fecha_probable_parto?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type diagnostico_preñezUpdateManyMutationInput = {
    metodo?: NullableStringFieldUpdateOperationsInput | string | null
    resultado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_probable_parto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type diagnostico_preñezUncheckedUpdateManyInput = {
    preñez_id?: IntFieldUpdateOperationsInput | number
    monta_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    metodo?: NullableStringFieldUpdateOperationsInput | string | null
    resultado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_probable_parto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_partoCreateInput = {
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutPartosInput
    veterinario: usuariosCreateNestedOneWithoutPartos_veterinarioInput
    operador: usuariosCreateNestedOneWithoutPartos_operadorInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_partoInput
  }

  export type evento_partoUncheckedCreateInput = {
    evento_id?: number
    animal_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    tipo_evento_id: number
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_partoUpdateInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutPartosNestedInput
    veterinario?: usuariosUpdateOneRequiredWithoutPartos_veterinarioNestedInput
    operador?: usuariosUpdateOneRequiredWithoutPartos_operadorNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_partoNestedInput
  }

  export type evento_partoUncheckedUpdateInput = {
    evento_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_partoCreateManyInput = {
    evento_id?: number
    animal_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    tipo_evento_id: number
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_partoUpdateManyMutationInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_partoUncheckedUpdateManyInput = {
    evento_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UsuariosListRelationFilter = {
    every?: usuariosWhereInput
    some?: usuariosWhereInput
    none?: usuariosWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type usuariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type rolesCountOrderByAggregateInput = {
    rol_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrder
  }

  export type rolesAvgOrderByAggregateInput = {
    rol_id?: SortOrder
  }

  export type rolesMaxOrderByAggregateInput = {
    rol_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrder
  }

  export type rolesMinOrderByAggregateInput = {
    rol_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrder
  }

  export type rolesSumOrderByAggregateInput = {
    rol_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type fincaCountOrderByAggregateInput = {
    finca_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    ubicacion?: SortOrder
    deleted_at?: SortOrder
  }

  export type fincaAvgOrderByAggregateInput = {
    finca_id?: SortOrder
  }

  export type fincaMaxOrderByAggregateInput = {
    finca_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    ubicacion?: SortOrder
    deleted_at?: SortOrder
  }

  export type fincaMinOrderByAggregateInput = {
    finca_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    ubicacion?: SortOrder
    deleted_at?: SortOrder
  }

  export type fincaSumOrderByAggregateInput = {
    finca_id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FincaNullableScalarRelationFilter = {
    is?: fincaWhereInput | null
    isNot?: fincaWhereInput | null
  }

  export type RolesNullableScalarRelationFilter = {
    is?: rolesWhereInput | null
    isNot?: rolesWhereInput | null
  }

  export type Evento_sanitarioListRelationFilter = {
    every?: evento_sanitarioWhereInput
    some?: evento_sanitarioWhereInput
    none?: evento_sanitarioWhereInput
  }

  export type AlimentacionListRelationFilter = {
    every?: alimentacionWhereInput
    some?: alimentacionWhereInput
    none?: alimentacionWhereInput
  }

  export type PesajesListRelationFilter = {
    every?: pesajesWhereInput
    some?: pesajesWhereInput
    none?: pesajesWhereInput
  }

  export type ComprasListRelationFilter = {
    every?: comprasWhereInput
    some?: comprasWhereInput
    none?: comprasWhereInput
  }

  export type Produccion_carneListRelationFilter = {
    every?: produccion_carneWhereInput
    some?: produccion_carneWhereInput
    none?: produccion_carneWhereInput
  }

  export type Produccion_lecheraListRelationFilter = {
    every?: produccion_lecheraWhereInput
    some?: produccion_lecheraWhereInput
    none?: produccion_lecheraWhereInput
  }

  export type Evento_montaListRelationFilter = {
    every?: evento_montaWhereInput
    some?: evento_montaWhereInput
    none?: evento_montaWhereInput
  }

  export type Diagnostico_preñezListRelationFilter = {
    every?: diagnostico_preñezWhereInput
    some?: diagnostico_preñezWhereInput
    none?: diagnostico_preñezWhereInput
  }

  export type Evento_partoListRelationFilter = {
    every?: evento_partoWhereInput
    some?: evento_partoWhereInput
    none?: evento_partoWhereInput
  }

  export type evento_sanitarioOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type alimentacionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type pesajesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type comprasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type produccion_carneOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type produccion_lecheraOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type evento_montaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type diagnostico_preñezOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type evento_partoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usuariosCountOrderByAggregateInput = {
    usuario_id?: SortOrder
    finca_id?: SortOrder
    rol_id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contraseña?: SortOrder
    deleted_at?: SortOrder
  }

  export type usuariosAvgOrderByAggregateInput = {
    usuario_id?: SortOrder
    finca_id?: SortOrder
    rol_id?: SortOrder
  }

  export type usuariosMaxOrderByAggregateInput = {
    usuario_id?: SortOrder
    finca_id?: SortOrder
    rol_id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contraseña?: SortOrder
    deleted_at?: SortOrder
  }

  export type usuariosMinOrderByAggregateInput = {
    usuario_id?: SortOrder
    finca_id?: SortOrder
    rol_id?: SortOrder
    nombre?: SortOrder
    correo?: SortOrder
    contraseña?: SortOrder
    deleted_at?: SortOrder
  }

  export type usuariosSumOrderByAggregateInput = {
    usuario_id?: SortOrder
    finca_id?: SortOrder
    rol_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type InsumosListRelationFilter = {
    every?: insumosWhereInput
    some?: insumosWhereInput
    none?: insumosWhereInput
  }

  export type insumosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type unidadesCountOrderByAggregateInput = {
    unidad_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrder
  }

  export type unidadesAvgOrderByAggregateInput = {
    unidad_id?: SortOrder
  }

  export type unidadesMaxOrderByAggregateInput = {
    unidad_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrder
  }

  export type unidadesMinOrderByAggregateInput = {
    unidad_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrder
  }

  export type unidadesSumOrderByAggregateInput = {
    unidad_id?: SortOrder
  }

  export type tipo_insumoCountOrderByAggregateInput = {
    tipo_insumo_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrder
  }

  export type tipo_insumoAvgOrderByAggregateInput = {
    tipo_insumo_id?: SortOrder
  }

  export type tipo_insumoMaxOrderByAggregateInput = {
    tipo_insumo_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrder
  }

  export type tipo_insumoMinOrderByAggregateInput = {
    tipo_insumo_id?: SortOrder
    nombre?: SortOrder
    deleted_at?: SortOrder
  }

  export type tipo_insumoSumOrderByAggregateInput = {
    tipo_insumo_id?: SortOrder
  }

  export type Tipo_insumoScalarRelationFilter = {
    is?: tipo_insumoWhereInput
    isNot?: tipo_insumoWhereInput
  }

  export type UnidadesScalarRelationFilter = {
    is?: unidadesWhereInput
    isNot?: unidadesWhereInput
  }

  export type Detalle_comprasListRelationFilter = {
    every?: detalle_comprasWhereInput
    some?: detalle_comprasWhereInput
    none?: detalle_comprasWhereInput
  }

  export type Evento_insumoListRelationFilter = {
    every?: evento_insumoWhereInput
    some?: evento_insumoWhereInput
    none?: evento_insumoWhereInput
  }

  export type detalle_comprasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type evento_insumoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type insumosCountOrderByAggregateInput = {
    insumo_id?: SortOrder
    tipo_insumo_id?: SortOrder
    nombre?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type insumosAvgOrderByAggregateInput = {
    insumo_id?: SortOrder
    tipo_insumo_id?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
  }

  export type insumosMaxOrderByAggregateInput = {
    insumo_id?: SortOrder
    tipo_insumo_id?: SortOrder
    nombre?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type insumosMinOrderByAggregateInput = {
    insumo_id?: SortOrder
    tipo_insumo_id?: SortOrder
    nombre?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type insumosSumOrderByAggregateInput = {
    insumo_id?: SortOrder
    tipo_insumo_id?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
  }

  export type Tipo_eventoNullableScalarRelationFilter = {
    is?: tipo_eventoWhereInput | null
    isNot?: tipo_eventoWhereInput | null
  }

  export type Tipo_eventoListRelationFilter = {
    every?: tipo_eventoWhereInput
    some?: tipo_eventoWhereInput
    none?: tipo_eventoWhereInput
  }

  export type tipo_eventoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tipo_eventoCountOrderByAggregateInput = {
    tipo_evento_id?: SortOrder
    nombre?: SortOrder
    padre_id?: SortOrder
    deleted_at?: SortOrder
  }

  export type tipo_eventoAvgOrderByAggregateInput = {
    tipo_evento_id?: SortOrder
    padre_id?: SortOrder
  }

  export type tipo_eventoMaxOrderByAggregateInput = {
    tipo_evento_id?: SortOrder
    nombre?: SortOrder
    padre_id?: SortOrder
    deleted_at?: SortOrder
  }

  export type tipo_eventoMinOrderByAggregateInput = {
    tipo_evento_id?: SortOrder
    nombre?: SortOrder
    padre_id?: SortOrder
    deleted_at?: SortOrder
  }

  export type tipo_eventoSumOrderByAggregateInput = {
    tipo_evento_id?: SortOrder
    padre_id?: SortOrder
  }

  export type AnimalesListRelationFilter = {
    every?: animalesWhereInput
    some?: animalesWhereInput
    none?: animalesWhereInput
  }

  export type animalesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type razasCountOrderByAggregateInput = {
    raza_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type razasAvgOrderByAggregateInput = {
    raza_id?: SortOrder
  }

  export type razasMaxOrderByAggregateInput = {
    raza_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type razasMinOrderByAggregateInput = {
    raza_id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type razasSumOrderByAggregateInput = {
    raza_id?: SortOrder
  }

  export type LotesListRelationFilter = {
    every?: lotesWhereInput
    some?: lotesWhereInput
    none?: lotesWhereInput
  }

  export type lotesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type potrerosCountOrderByAggregateInput = {
    potrero_id?: SortOrder
    ubicacion?: SortOrder
    deleted_at?: SortOrder
  }

  export type potrerosAvgOrderByAggregateInput = {
    potrero_id?: SortOrder
  }

  export type potrerosMaxOrderByAggregateInput = {
    potrero_id?: SortOrder
    ubicacion?: SortOrder
    deleted_at?: SortOrder
  }

  export type potrerosMinOrderByAggregateInput = {
    potrero_id?: SortOrder
    ubicacion?: SortOrder
    deleted_at?: SortOrder
  }

  export type potrerosSumOrderByAggregateInput = {
    potrero_id?: SortOrder
  }

  export type PotrerosScalarRelationFilter = {
    is?: potrerosWhereInput
    isNot?: potrerosWhereInput
  }

  export type lotesCountOrderByAggregateInput = {
    lote_id?: SortOrder
    potrero_id?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type lotesAvgOrderByAggregateInput = {
    lote_id?: SortOrder
    potrero_id?: SortOrder
  }

  export type lotesMaxOrderByAggregateInput = {
    lote_id?: SortOrder
    potrero_id?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type lotesMinOrderByAggregateInput = {
    lote_id?: SortOrder
    potrero_id?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type lotesSumOrderByAggregateInput = {
    lote_id?: SortOrder
    potrero_id?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type AnimalesNullableScalarRelationFilter = {
    is?: animalesWhereInput | null
    isNot?: animalesWhereInput | null
  }

  export type LotesNullableScalarRelationFilter = {
    is?: lotesWhereInput | null
    isNot?: lotesWhereInput | null
  }

  export type RazasScalarRelationFilter = {
    is?: razasWhereInput
    isNot?: razasWhereInput
  }

  export type animalesCountOrderByAggregateInput = {
    animal_id?: SortOrder
    animal_madre_id?: SortOrder
    animal_padre_id?: SortOrder
    lote_id?: SortOrder
    raza_id?: SortOrder
    animal_img?: SortOrder
    arete?: SortOrder
    sexo?: SortOrder
    fecha_destete?: SortOrder
    fecha_nacimiento?: SortOrder
    deleted_at?: SortOrder
  }

  export type animalesAvgOrderByAggregateInput = {
    animal_id?: SortOrder
    animal_madre_id?: SortOrder
    animal_padre_id?: SortOrder
    lote_id?: SortOrder
    raza_id?: SortOrder
  }

  export type animalesMaxOrderByAggregateInput = {
    animal_id?: SortOrder
    animal_madre_id?: SortOrder
    animal_padre_id?: SortOrder
    lote_id?: SortOrder
    raza_id?: SortOrder
    animal_img?: SortOrder
    arete?: SortOrder
    sexo?: SortOrder
    fecha_destete?: SortOrder
    fecha_nacimiento?: SortOrder
    deleted_at?: SortOrder
  }

  export type animalesMinOrderByAggregateInput = {
    animal_id?: SortOrder
    animal_madre_id?: SortOrder
    animal_padre_id?: SortOrder
    lote_id?: SortOrder
    raza_id?: SortOrder
    animal_img?: SortOrder
    arete?: SortOrder
    sexo?: SortOrder
    fecha_destete?: SortOrder
    fecha_nacimiento?: SortOrder
    deleted_at?: SortOrder
  }

  export type animalesSumOrderByAggregateInput = {
    animal_id?: SortOrder
    animal_madre_id?: SortOrder
    animal_padre_id?: SortOrder
    lote_id?: SortOrder
    raza_id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type proveedoresCountOrderByAggregateInput = {
    proveedor_id?: SortOrder
    nombre_compañia?: SortOrder
    nombre_contacto?: SortOrder
    telefono?: SortOrder
    deleted_at?: SortOrder
  }

  export type proveedoresAvgOrderByAggregateInput = {
    proveedor_id?: SortOrder
  }

  export type proveedoresMaxOrderByAggregateInput = {
    proveedor_id?: SortOrder
    nombre_compañia?: SortOrder
    nombre_contacto?: SortOrder
    telefono?: SortOrder
    deleted_at?: SortOrder
  }

  export type proveedoresMinOrderByAggregateInput = {
    proveedor_id?: SortOrder
    nombre_compañia?: SortOrder
    nombre_contacto?: SortOrder
    telefono?: SortOrder
    deleted_at?: SortOrder
  }

  export type proveedoresSumOrderByAggregateInput = {
    proveedor_id?: SortOrder
  }

  export type UsuariosScalarRelationFilter = {
    is?: usuariosWhereInput
    isNot?: usuariosWhereInput
  }

  export type ProveedoresScalarRelationFilter = {
    is?: proveedoresWhereInput
    isNot?: proveedoresWhereInput
  }

  export type comprasCountOrderByAggregateInput = {
    compra_id?: SortOrder
    usuario_contable_id?: SortOrder
    proveedor_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type comprasAvgOrderByAggregateInput = {
    compra_id?: SortOrder
    usuario_contable_id?: SortOrder
    proveedor_id?: SortOrder
  }

  export type comprasMaxOrderByAggregateInput = {
    compra_id?: SortOrder
    usuario_contable_id?: SortOrder
    proveedor_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type comprasMinOrderByAggregateInput = {
    compra_id?: SortOrder
    usuario_contable_id?: SortOrder
    proveedor_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type comprasSumOrderByAggregateInput = {
    compra_id?: SortOrder
    usuario_contable_id?: SortOrder
    proveedor_id?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type ComprasScalarRelationFilter = {
    is?: comprasWhereInput
    isNot?: comprasWhereInput
  }

  export type InsumosScalarRelationFilter = {
    is?: insumosWhereInput
    isNot?: insumosWhereInput
  }

  export type detalle_comprasCountOrderByAggregateInput = {
    detalle_id?: SortOrder
    compra_id?: SortOrder
    insumo_id?: SortOrder
    precio?: SortOrder
    cantidad?: SortOrder
    deleted_at?: SortOrder
  }

  export type detalle_comprasAvgOrderByAggregateInput = {
    detalle_id?: SortOrder
    compra_id?: SortOrder
    insumo_id?: SortOrder
    precio?: SortOrder
    cantidad?: SortOrder
  }

  export type detalle_comprasMaxOrderByAggregateInput = {
    detalle_id?: SortOrder
    compra_id?: SortOrder
    insumo_id?: SortOrder
    precio?: SortOrder
    cantidad?: SortOrder
    deleted_at?: SortOrder
  }

  export type detalle_comprasMinOrderByAggregateInput = {
    detalle_id?: SortOrder
    compra_id?: SortOrder
    insumo_id?: SortOrder
    precio?: SortOrder
    cantidad?: SortOrder
    deleted_at?: SortOrder
  }

  export type detalle_comprasSumOrderByAggregateInput = {
    detalle_id?: SortOrder
    compra_id?: SortOrder
    insumo_id?: SortOrder
    precio?: SortOrder
    cantidad?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type AnimalesScalarRelationFilter = {
    is?: animalesWhereInput
    isNot?: animalesWhereInput
  }

  export type Tipo_eventoScalarRelationFilter = {
    is?: tipo_eventoWhereInput
    isNot?: tipo_eventoWhereInput
  }

  export type evento_sanitarioCountOrderByAggregateInput = {
    evento_sanitario_id?: SortOrder
    animal_id?: SortOrder
    tipo_evento_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    estado?: SortOrder
    diagnostico?: SortOrder
    tratamiento?: SortOrder
    fecha_diagnostico?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_sanitarioAvgOrderByAggregateInput = {
    evento_sanitario_id?: SortOrder
    animal_id?: SortOrder
    tipo_evento_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
  }

  export type evento_sanitarioMaxOrderByAggregateInput = {
    evento_sanitario_id?: SortOrder
    animal_id?: SortOrder
    tipo_evento_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    estado?: SortOrder
    diagnostico?: SortOrder
    tratamiento?: SortOrder
    fecha_diagnostico?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_sanitarioMinOrderByAggregateInput = {
    evento_sanitario_id?: SortOrder
    animal_id?: SortOrder
    tipo_evento_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    estado?: SortOrder
    diagnostico?: SortOrder
    tratamiento?: SortOrder
    fecha_diagnostico?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_sanitarioSumOrderByAggregateInput = {
    evento_sanitario_id?: SortOrder
    animal_id?: SortOrder
    tipo_evento_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
  }

  export type Evento_sanitarioScalarRelationFilter = {
    is?: evento_sanitarioWhereInput
    isNot?: evento_sanitarioWhereInput
  }

  export type evento_insumoEvento_sanitario_idInsumo_idCompoundUniqueInput = {
    evento_sanitario_id: number
    insumo_id: number
  }

  export type evento_insumoCountOrderByAggregateInput = {
    evento_sanitario_id?: SortOrder
    insumo_id?: SortOrder
    cantidad?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_insumoAvgOrderByAggregateInput = {
    evento_sanitario_id?: SortOrder
    insumo_id?: SortOrder
    cantidad?: SortOrder
  }

  export type evento_insumoMaxOrderByAggregateInput = {
    evento_sanitario_id?: SortOrder
    insumo_id?: SortOrder
    cantidad?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_insumoMinOrderByAggregateInput = {
    evento_sanitario_id?: SortOrder
    insumo_id?: SortOrder
    cantidad?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_insumoSumOrderByAggregateInput = {
    evento_sanitario_id?: SortOrder
    insumo_id?: SortOrder
    cantidad?: SortOrder
  }

  export type alimentacionCountOrderByAggregateInput = {
    alimentacion_id?: SortOrder
    insumo_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type alimentacionAvgOrderByAggregateInput = {
    alimentacion_id?: SortOrder
    insumo_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
  }

  export type alimentacionMaxOrderByAggregateInput = {
    alimentacion_id?: SortOrder
    insumo_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type alimentacionMinOrderByAggregateInput = {
    alimentacion_id?: SortOrder
    insumo_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type alimentacionSumOrderByAggregateInput = {
    alimentacion_id?: SortOrder
    insumo_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
  }

  export type pesajesCountOrderByAggregateInput = {
    pesaje_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    unidad_id?: SortOrder
    peso?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type pesajesAvgOrderByAggregateInput = {
    pesaje_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    unidad_id?: SortOrder
    peso?: SortOrder
  }

  export type pesajesMaxOrderByAggregateInput = {
    pesaje_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    unidad_id?: SortOrder
    peso?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type pesajesMinOrderByAggregateInput = {
    pesaje_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    unidad_id?: SortOrder
    peso?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type pesajesSumOrderByAggregateInput = {
    pesaje_id?: SortOrder
    usuario_operador_id?: SortOrder
    animal_id?: SortOrder
    unidad_id?: SortOrder
    peso?: SortOrder
  }

  export type produccion_carneCountOrderByAggregateInput = {
    produccion_id?: SortOrder
    animal_id?: SortOrder
    usuario_operador_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type produccion_carneAvgOrderByAggregateInput = {
    produccion_id?: SortOrder
    animal_id?: SortOrder
    usuario_operador_id?: SortOrder
  }

  export type produccion_carneMaxOrderByAggregateInput = {
    produccion_id?: SortOrder
    animal_id?: SortOrder
    usuario_operador_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type produccion_carneMinOrderByAggregateInput = {
    produccion_id?: SortOrder
    animal_id?: SortOrder
    usuario_operador_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type produccion_carneSumOrderByAggregateInput = {
    produccion_id?: SortOrder
    animal_id?: SortOrder
    usuario_operador_id?: SortOrder
  }

  export type produccion_lecheraCountOrderByAggregateInput = {
    produccion_id?: SortOrder
    usuario_ordeño_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
    fecha?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type produccion_lecheraAvgOrderByAggregateInput = {
    produccion_id?: SortOrder
    usuario_ordeño_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
  }

  export type produccion_lecheraMaxOrderByAggregateInput = {
    produccion_id?: SortOrder
    usuario_ordeño_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
    fecha?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type produccion_lecheraMinOrderByAggregateInput = {
    produccion_id?: SortOrder
    usuario_ordeño_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
    fecha?: SortOrder
    descripcion?: SortOrder
    deleted_at?: SortOrder
  }

  export type produccion_lecheraSumOrderByAggregateInput = {
    produccion_id?: SortOrder
    usuario_ordeño_id?: SortOrder
    animal_id?: SortOrder
    cantidad?: SortOrder
    unidad_id?: SortOrder
  }

  export type evento_montaCountOrderByAggregateInput = {
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    animal_hembra_id?: SortOrder
    animal_macho_id?: SortOrder
    tipo_evento_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_montaAvgOrderByAggregateInput = {
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    animal_hembra_id?: SortOrder
    animal_macho_id?: SortOrder
    tipo_evento_id?: SortOrder
  }

  export type evento_montaMaxOrderByAggregateInput = {
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    animal_hembra_id?: SortOrder
    animal_macho_id?: SortOrder
    tipo_evento_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_montaMinOrderByAggregateInput = {
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    animal_hembra_id?: SortOrder
    animal_macho_id?: SortOrder
    tipo_evento_id?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_montaSumOrderByAggregateInput = {
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    animal_hembra_id?: SortOrder
    animal_macho_id?: SortOrder
    tipo_evento_id?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type Evento_montaScalarRelationFilter = {
    is?: evento_montaWhereInput
    isNot?: evento_montaWhereInput
  }

  export type diagnostico_preñezCountOrderByAggregateInput = {
    preñez_id?: SortOrder
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    metodo?: SortOrder
    resultado?: SortOrder
    fecha_probable_parto?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type diagnostico_preñezAvgOrderByAggregateInput = {
    preñez_id?: SortOrder
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
  }

  export type diagnostico_preñezMaxOrderByAggregateInput = {
    preñez_id?: SortOrder
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    metodo?: SortOrder
    resultado?: SortOrder
    fecha_probable_parto?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type diagnostico_preñezMinOrderByAggregateInput = {
    preñez_id?: SortOrder
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    metodo?: SortOrder
    resultado?: SortOrder
    fecha_probable_parto?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type diagnostico_preñezSumOrderByAggregateInput = {
    preñez_id?: SortOrder
    monta_id?: SortOrder
    usuario_veterinario_id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type evento_partoCountOrderByAggregateInput = {
    evento_id?: SortOrder
    animal_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    tipo_evento_id?: SortOrder
    descripcion?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_partoAvgOrderByAggregateInput = {
    evento_id?: SortOrder
    animal_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    tipo_evento_id?: SortOrder
  }

  export type evento_partoMaxOrderByAggregateInput = {
    evento_id?: SortOrder
    animal_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    tipo_evento_id?: SortOrder
    descripcion?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_partoMinOrderByAggregateInput = {
    evento_id?: SortOrder
    animal_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    tipo_evento_id?: SortOrder
    descripcion?: SortOrder
    fecha?: SortOrder
    deleted_at?: SortOrder
  }

  export type evento_partoSumOrderByAggregateInput = {
    evento_id?: SortOrder
    animal_id?: SortOrder
    usuario_veterinario_id?: SortOrder
    usuario_operador_id?: SortOrder
    tipo_evento_id?: SortOrder
  }

  export type usuariosCreateNestedManyWithoutRolInput = {
    create?: XOR<usuariosCreateWithoutRolInput, usuariosUncheckedCreateWithoutRolInput> | usuariosCreateWithoutRolInput[] | usuariosUncheckedCreateWithoutRolInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutRolInput | usuariosCreateOrConnectWithoutRolInput[]
    createMany?: usuariosCreateManyRolInputEnvelope
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
  }

  export type usuariosUncheckedCreateNestedManyWithoutRolInput = {
    create?: XOR<usuariosCreateWithoutRolInput, usuariosUncheckedCreateWithoutRolInput> | usuariosCreateWithoutRolInput[] | usuariosUncheckedCreateWithoutRolInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutRolInput | usuariosCreateOrConnectWithoutRolInput[]
    createMany?: usuariosCreateManyRolInputEnvelope
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type usuariosUpdateManyWithoutRolNestedInput = {
    create?: XOR<usuariosCreateWithoutRolInput, usuariosUncheckedCreateWithoutRolInput> | usuariosCreateWithoutRolInput[] | usuariosUncheckedCreateWithoutRolInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutRolInput | usuariosCreateOrConnectWithoutRolInput[]
    upsert?: usuariosUpsertWithWhereUniqueWithoutRolInput | usuariosUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: usuariosCreateManyRolInputEnvelope
    set?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    disconnect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    delete?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    update?: usuariosUpdateWithWhereUniqueWithoutRolInput | usuariosUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: usuariosUpdateManyWithWhereWithoutRolInput | usuariosUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type usuariosUncheckedUpdateManyWithoutRolNestedInput = {
    create?: XOR<usuariosCreateWithoutRolInput, usuariosUncheckedCreateWithoutRolInput> | usuariosCreateWithoutRolInput[] | usuariosUncheckedCreateWithoutRolInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutRolInput | usuariosCreateOrConnectWithoutRolInput[]
    upsert?: usuariosUpsertWithWhereUniqueWithoutRolInput | usuariosUpsertWithWhereUniqueWithoutRolInput[]
    createMany?: usuariosCreateManyRolInputEnvelope
    set?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    disconnect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    delete?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    update?: usuariosUpdateWithWhereUniqueWithoutRolInput | usuariosUpdateWithWhereUniqueWithoutRolInput[]
    updateMany?: usuariosUpdateManyWithWhereWithoutRolInput | usuariosUpdateManyWithWhereWithoutRolInput[]
    deleteMany?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
  }

  export type usuariosCreateNestedManyWithoutFincaInput = {
    create?: XOR<usuariosCreateWithoutFincaInput, usuariosUncheckedCreateWithoutFincaInput> | usuariosCreateWithoutFincaInput[] | usuariosUncheckedCreateWithoutFincaInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutFincaInput | usuariosCreateOrConnectWithoutFincaInput[]
    createMany?: usuariosCreateManyFincaInputEnvelope
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
  }

  export type usuariosUncheckedCreateNestedManyWithoutFincaInput = {
    create?: XOR<usuariosCreateWithoutFincaInput, usuariosUncheckedCreateWithoutFincaInput> | usuariosCreateWithoutFincaInput[] | usuariosUncheckedCreateWithoutFincaInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutFincaInput | usuariosCreateOrConnectWithoutFincaInput[]
    createMany?: usuariosCreateManyFincaInputEnvelope
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type usuariosUpdateManyWithoutFincaNestedInput = {
    create?: XOR<usuariosCreateWithoutFincaInput, usuariosUncheckedCreateWithoutFincaInput> | usuariosCreateWithoutFincaInput[] | usuariosUncheckedCreateWithoutFincaInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutFincaInput | usuariosCreateOrConnectWithoutFincaInput[]
    upsert?: usuariosUpsertWithWhereUniqueWithoutFincaInput | usuariosUpsertWithWhereUniqueWithoutFincaInput[]
    createMany?: usuariosCreateManyFincaInputEnvelope
    set?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    disconnect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    delete?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    update?: usuariosUpdateWithWhereUniqueWithoutFincaInput | usuariosUpdateWithWhereUniqueWithoutFincaInput[]
    updateMany?: usuariosUpdateManyWithWhereWithoutFincaInput | usuariosUpdateManyWithWhereWithoutFincaInput[]
    deleteMany?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
  }

  export type usuariosUncheckedUpdateManyWithoutFincaNestedInput = {
    create?: XOR<usuariosCreateWithoutFincaInput, usuariosUncheckedCreateWithoutFincaInput> | usuariosCreateWithoutFincaInput[] | usuariosUncheckedCreateWithoutFincaInput[]
    connectOrCreate?: usuariosCreateOrConnectWithoutFincaInput | usuariosCreateOrConnectWithoutFincaInput[]
    upsert?: usuariosUpsertWithWhereUniqueWithoutFincaInput | usuariosUpsertWithWhereUniqueWithoutFincaInput[]
    createMany?: usuariosCreateManyFincaInputEnvelope
    set?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    disconnect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    delete?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    connect?: usuariosWhereUniqueInput | usuariosWhereUniqueInput[]
    update?: usuariosUpdateWithWhereUniqueWithoutFincaInput | usuariosUpdateWithWhereUniqueWithoutFincaInput[]
    updateMany?: usuariosUpdateManyWithWhereWithoutFincaInput | usuariosUpdateManyWithWhereWithoutFincaInput[]
    deleteMany?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
  }

  export type fincaCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<fincaCreateWithoutUsuariosInput, fincaUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: fincaCreateOrConnectWithoutUsuariosInput
    connect?: fincaWhereUniqueInput
  }

  export type rolesCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<rolesCreateWithoutUsuariosInput, rolesUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: rolesCreateOrConnectWithoutUsuariosInput
    connect?: rolesWhereUniqueInput
  }

  export type evento_sanitarioCreateNestedManyWithoutVeterinarioInput = {
    create?: XOR<evento_sanitarioCreateWithoutVeterinarioInput, evento_sanitarioUncheckedCreateWithoutVeterinarioInput> | evento_sanitarioCreateWithoutVeterinarioInput[] | evento_sanitarioUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutVeterinarioInput | evento_sanitarioCreateOrConnectWithoutVeterinarioInput[]
    createMany?: evento_sanitarioCreateManyVeterinarioInputEnvelope
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
  }

  export type evento_sanitarioCreateNestedManyWithoutOperadorInput = {
    create?: XOR<evento_sanitarioCreateWithoutOperadorInput, evento_sanitarioUncheckedCreateWithoutOperadorInput> | evento_sanitarioCreateWithoutOperadorInput[] | evento_sanitarioUncheckedCreateWithoutOperadorInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutOperadorInput | evento_sanitarioCreateOrConnectWithoutOperadorInput[]
    createMany?: evento_sanitarioCreateManyOperadorInputEnvelope
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
  }

  export type alimentacionCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<alimentacionCreateWithoutUsuarioInput, alimentacionUncheckedCreateWithoutUsuarioInput> | alimentacionCreateWithoutUsuarioInput[] | alimentacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutUsuarioInput | alimentacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: alimentacionCreateManyUsuarioInputEnvelope
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
  }

  export type pesajesCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<pesajesCreateWithoutUsuarioInput, pesajesUncheckedCreateWithoutUsuarioInput> | pesajesCreateWithoutUsuarioInput[] | pesajesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutUsuarioInput | pesajesCreateOrConnectWithoutUsuarioInput[]
    createMany?: pesajesCreateManyUsuarioInputEnvelope
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
  }

  export type comprasCreateNestedManyWithoutUsuario_contableInput = {
    create?: XOR<comprasCreateWithoutUsuario_contableInput, comprasUncheckedCreateWithoutUsuario_contableInput> | comprasCreateWithoutUsuario_contableInput[] | comprasUncheckedCreateWithoutUsuario_contableInput[]
    connectOrCreate?: comprasCreateOrConnectWithoutUsuario_contableInput | comprasCreateOrConnectWithoutUsuario_contableInput[]
    createMany?: comprasCreateManyUsuario_contableInputEnvelope
    connect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
  }

  export type produccion_carneCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<produccion_carneCreateWithoutUsuarioInput, produccion_carneUncheckedCreateWithoutUsuarioInput> | produccion_carneCreateWithoutUsuarioInput[] | produccion_carneUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: produccion_carneCreateOrConnectWithoutUsuarioInput | produccion_carneCreateOrConnectWithoutUsuarioInput[]
    createMany?: produccion_carneCreateManyUsuarioInputEnvelope
    connect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
  }

  export type produccion_lecheraCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<produccion_lecheraCreateWithoutUsuarioInput, produccion_lecheraUncheckedCreateWithoutUsuarioInput> | produccion_lecheraCreateWithoutUsuarioInput[] | produccion_lecheraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutUsuarioInput | produccion_lecheraCreateOrConnectWithoutUsuarioInput[]
    createMany?: produccion_lecheraCreateManyUsuarioInputEnvelope
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
  }

  export type evento_montaCreateNestedManyWithoutVeterinarioInput = {
    create?: XOR<evento_montaCreateWithoutVeterinarioInput, evento_montaUncheckedCreateWithoutVeterinarioInput> | evento_montaCreateWithoutVeterinarioInput[] | evento_montaUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutVeterinarioInput | evento_montaCreateOrConnectWithoutVeterinarioInput[]
    createMany?: evento_montaCreateManyVeterinarioInputEnvelope
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
  }

  export type diagnostico_preñezCreateNestedManyWithoutVeterinarioInput = {
    create?: XOR<diagnostico_preñezCreateWithoutVeterinarioInput, diagnostico_preñezUncheckedCreateWithoutVeterinarioInput> | diagnostico_preñezCreateWithoutVeterinarioInput[] | diagnostico_preñezUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: diagnostico_preñezCreateOrConnectWithoutVeterinarioInput | diagnostico_preñezCreateOrConnectWithoutVeterinarioInput[]
    createMany?: diagnostico_preñezCreateManyVeterinarioInputEnvelope
    connect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
  }

  export type evento_partoCreateNestedManyWithoutVeterinarioInput = {
    create?: XOR<evento_partoCreateWithoutVeterinarioInput, evento_partoUncheckedCreateWithoutVeterinarioInput> | evento_partoCreateWithoutVeterinarioInput[] | evento_partoUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutVeterinarioInput | evento_partoCreateOrConnectWithoutVeterinarioInput[]
    createMany?: evento_partoCreateManyVeterinarioInputEnvelope
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
  }

  export type evento_partoCreateNestedManyWithoutOperadorInput = {
    create?: XOR<evento_partoCreateWithoutOperadorInput, evento_partoUncheckedCreateWithoutOperadorInput> | evento_partoCreateWithoutOperadorInput[] | evento_partoUncheckedCreateWithoutOperadorInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutOperadorInput | evento_partoCreateOrConnectWithoutOperadorInput[]
    createMany?: evento_partoCreateManyOperadorInputEnvelope
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
  }

  export type evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput = {
    create?: XOR<evento_sanitarioCreateWithoutVeterinarioInput, evento_sanitarioUncheckedCreateWithoutVeterinarioInput> | evento_sanitarioCreateWithoutVeterinarioInput[] | evento_sanitarioUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutVeterinarioInput | evento_sanitarioCreateOrConnectWithoutVeterinarioInput[]
    createMany?: evento_sanitarioCreateManyVeterinarioInputEnvelope
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
  }

  export type evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput = {
    create?: XOR<evento_sanitarioCreateWithoutOperadorInput, evento_sanitarioUncheckedCreateWithoutOperadorInput> | evento_sanitarioCreateWithoutOperadorInput[] | evento_sanitarioUncheckedCreateWithoutOperadorInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutOperadorInput | evento_sanitarioCreateOrConnectWithoutOperadorInput[]
    createMany?: evento_sanitarioCreateManyOperadorInputEnvelope
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
  }

  export type alimentacionUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<alimentacionCreateWithoutUsuarioInput, alimentacionUncheckedCreateWithoutUsuarioInput> | alimentacionCreateWithoutUsuarioInput[] | alimentacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutUsuarioInput | alimentacionCreateOrConnectWithoutUsuarioInput[]
    createMany?: alimentacionCreateManyUsuarioInputEnvelope
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
  }

  export type pesajesUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<pesajesCreateWithoutUsuarioInput, pesajesUncheckedCreateWithoutUsuarioInput> | pesajesCreateWithoutUsuarioInput[] | pesajesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutUsuarioInput | pesajesCreateOrConnectWithoutUsuarioInput[]
    createMany?: pesajesCreateManyUsuarioInputEnvelope
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
  }

  export type comprasUncheckedCreateNestedManyWithoutUsuario_contableInput = {
    create?: XOR<comprasCreateWithoutUsuario_contableInput, comprasUncheckedCreateWithoutUsuario_contableInput> | comprasCreateWithoutUsuario_contableInput[] | comprasUncheckedCreateWithoutUsuario_contableInput[]
    connectOrCreate?: comprasCreateOrConnectWithoutUsuario_contableInput | comprasCreateOrConnectWithoutUsuario_contableInput[]
    createMany?: comprasCreateManyUsuario_contableInputEnvelope
    connect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
  }

  export type produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<produccion_carneCreateWithoutUsuarioInput, produccion_carneUncheckedCreateWithoutUsuarioInput> | produccion_carneCreateWithoutUsuarioInput[] | produccion_carneUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: produccion_carneCreateOrConnectWithoutUsuarioInput | produccion_carneCreateOrConnectWithoutUsuarioInput[]
    createMany?: produccion_carneCreateManyUsuarioInputEnvelope
    connect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
  }

  export type produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<produccion_lecheraCreateWithoutUsuarioInput, produccion_lecheraUncheckedCreateWithoutUsuarioInput> | produccion_lecheraCreateWithoutUsuarioInput[] | produccion_lecheraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutUsuarioInput | produccion_lecheraCreateOrConnectWithoutUsuarioInput[]
    createMany?: produccion_lecheraCreateManyUsuarioInputEnvelope
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
  }

  export type evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput = {
    create?: XOR<evento_montaCreateWithoutVeterinarioInput, evento_montaUncheckedCreateWithoutVeterinarioInput> | evento_montaCreateWithoutVeterinarioInput[] | evento_montaUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutVeterinarioInput | evento_montaCreateOrConnectWithoutVeterinarioInput[]
    createMany?: evento_montaCreateManyVeterinarioInputEnvelope
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
  }

  export type diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput = {
    create?: XOR<diagnostico_preñezCreateWithoutVeterinarioInput, diagnostico_preñezUncheckedCreateWithoutVeterinarioInput> | diagnostico_preñezCreateWithoutVeterinarioInput[] | diagnostico_preñezUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: diagnostico_preñezCreateOrConnectWithoutVeterinarioInput | diagnostico_preñezCreateOrConnectWithoutVeterinarioInput[]
    createMany?: diagnostico_preñezCreateManyVeterinarioInputEnvelope
    connect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
  }

  export type evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput = {
    create?: XOR<evento_partoCreateWithoutVeterinarioInput, evento_partoUncheckedCreateWithoutVeterinarioInput> | evento_partoCreateWithoutVeterinarioInput[] | evento_partoUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutVeterinarioInput | evento_partoCreateOrConnectWithoutVeterinarioInput[]
    createMany?: evento_partoCreateManyVeterinarioInputEnvelope
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
  }

  export type evento_partoUncheckedCreateNestedManyWithoutOperadorInput = {
    create?: XOR<evento_partoCreateWithoutOperadorInput, evento_partoUncheckedCreateWithoutOperadorInput> | evento_partoCreateWithoutOperadorInput[] | evento_partoUncheckedCreateWithoutOperadorInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutOperadorInput | evento_partoCreateOrConnectWithoutOperadorInput[]
    createMany?: evento_partoCreateManyOperadorInputEnvelope
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
  }

  export type fincaUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<fincaCreateWithoutUsuariosInput, fincaUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: fincaCreateOrConnectWithoutUsuariosInput
    upsert?: fincaUpsertWithoutUsuariosInput
    disconnect?: fincaWhereInput | boolean
    delete?: fincaWhereInput | boolean
    connect?: fincaWhereUniqueInput
    update?: XOR<XOR<fincaUpdateToOneWithWhereWithoutUsuariosInput, fincaUpdateWithoutUsuariosInput>, fincaUncheckedUpdateWithoutUsuariosInput>
  }

  export type rolesUpdateOneWithoutUsuariosNestedInput = {
    create?: XOR<rolesCreateWithoutUsuariosInput, rolesUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: rolesCreateOrConnectWithoutUsuariosInput
    upsert?: rolesUpsertWithoutUsuariosInput
    disconnect?: rolesWhereInput | boolean
    delete?: rolesWhereInput | boolean
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutUsuariosInput, rolesUpdateWithoutUsuariosInput>, rolesUncheckedUpdateWithoutUsuariosInput>
  }

  export type evento_sanitarioUpdateManyWithoutVeterinarioNestedInput = {
    create?: XOR<evento_sanitarioCreateWithoutVeterinarioInput, evento_sanitarioUncheckedCreateWithoutVeterinarioInput> | evento_sanitarioCreateWithoutVeterinarioInput[] | evento_sanitarioUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutVeterinarioInput | evento_sanitarioCreateOrConnectWithoutVeterinarioInput[]
    upsert?: evento_sanitarioUpsertWithWhereUniqueWithoutVeterinarioInput | evento_sanitarioUpsertWithWhereUniqueWithoutVeterinarioInput[]
    createMany?: evento_sanitarioCreateManyVeterinarioInputEnvelope
    set?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    disconnect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    delete?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    update?: evento_sanitarioUpdateWithWhereUniqueWithoutVeterinarioInput | evento_sanitarioUpdateWithWhereUniqueWithoutVeterinarioInput[]
    updateMany?: evento_sanitarioUpdateManyWithWhereWithoutVeterinarioInput | evento_sanitarioUpdateManyWithWhereWithoutVeterinarioInput[]
    deleteMany?: evento_sanitarioScalarWhereInput | evento_sanitarioScalarWhereInput[]
  }

  export type evento_sanitarioUpdateManyWithoutOperadorNestedInput = {
    create?: XOR<evento_sanitarioCreateWithoutOperadorInput, evento_sanitarioUncheckedCreateWithoutOperadorInput> | evento_sanitarioCreateWithoutOperadorInput[] | evento_sanitarioUncheckedCreateWithoutOperadorInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutOperadorInput | evento_sanitarioCreateOrConnectWithoutOperadorInput[]
    upsert?: evento_sanitarioUpsertWithWhereUniqueWithoutOperadorInput | evento_sanitarioUpsertWithWhereUniqueWithoutOperadorInput[]
    createMany?: evento_sanitarioCreateManyOperadorInputEnvelope
    set?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    disconnect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    delete?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    update?: evento_sanitarioUpdateWithWhereUniqueWithoutOperadorInput | evento_sanitarioUpdateWithWhereUniqueWithoutOperadorInput[]
    updateMany?: evento_sanitarioUpdateManyWithWhereWithoutOperadorInput | evento_sanitarioUpdateManyWithWhereWithoutOperadorInput[]
    deleteMany?: evento_sanitarioScalarWhereInput | evento_sanitarioScalarWhereInput[]
  }

  export type alimentacionUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<alimentacionCreateWithoutUsuarioInput, alimentacionUncheckedCreateWithoutUsuarioInput> | alimentacionCreateWithoutUsuarioInput[] | alimentacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutUsuarioInput | alimentacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: alimentacionUpsertWithWhereUniqueWithoutUsuarioInput | alimentacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: alimentacionCreateManyUsuarioInputEnvelope
    set?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    disconnect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    delete?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    update?: alimentacionUpdateWithWhereUniqueWithoutUsuarioInput | alimentacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: alimentacionUpdateManyWithWhereWithoutUsuarioInput | alimentacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: alimentacionScalarWhereInput | alimentacionScalarWhereInput[]
  }

  export type pesajesUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<pesajesCreateWithoutUsuarioInput, pesajesUncheckedCreateWithoutUsuarioInput> | pesajesCreateWithoutUsuarioInput[] | pesajesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutUsuarioInput | pesajesCreateOrConnectWithoutUsuarioInput[]
    upsert?: pesajesUpsertWithWhereUniqueWithoutUsuarioInput | pesajesUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: pesajesCreateManyUsuarioInputEnvelope
    set?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    disconnect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    delete?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    update?: pesajesUpdateWithWhereUniqueWithoutUsuarioInput | pesajesUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: pesajesUpdateManyWithWhereWithoutUsuarioInput | pesajesUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: pesajesScalarWhereInput | pesajesScalarWhereInput[]
  }

  export type comprasUpdateManyWithoutUsuario_contableNestedInput = {
    create?: XOR<comprasCreateWithoutUsuario_contableInput, comprasUncheckedCreateWithoutUsuario_contableInput> | comprasCreateWithoutUsuario_contableInput[] | comprasUncheckedCreateWithoutUsuario_contableInput[]
    connectOrCreate?: comprasCreateOrConnectWithoutUsuario_contableInput | comprasCreateOrConnectWithoutUsuario_contableInput[]
    upsert?: comprasUpsertWithWhereUniqueWithoutUsuario_contableInput | comprasUpsertWithWhereUniqueWithoutUsuario_contableInput[]
    createMany?: comprasCreateManyUsuario_contableInputEnvelope
    set?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    disconnect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    delete?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    connect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    update?: comprasUpdateWithWhereUniqueWithoutUsuario_contableInput | comprasUpdateWithWhereUniqueWithoutUsuario_contableInput[]
    updateMany?: comprasUpdateManyWithWhereWithoutUsuario_contableInput | comprasUpdateManyWithWhereWithoutUsuario_contableInput[]
    deleteMany?: comprasScalarWhereInput | comprasScalarWhereInput[]
  }

  export type produccion_carneUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<produccion_carneCreateWithoutUsuarioInput, produccion_carneUncheckedCreateWithoutUsuarioInput> | produccion_carneCreateWithoutUsuarioInput[] | produccion_carneUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: produccion_carneCreateOrConnectWithoutUsuarioInput | produccion_carneCreateOrConnectWithoutUsuarioInput[]
    upsert?: produccion_carneUpsertWithWhereUniqueWithoutUsuarioInput | produccion_carneUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: produccion_carneCreateManyUsuarioInputEnvelope
    set?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    disconnect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    delete?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    connect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    update?: produccion_carneUpdateWithWhereUniqueWithoutUsuarioInput | produccion_carneUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: produccion_carneUpdateManyWithWhereWithoutUsuarioInput | produccion_carneUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: produccion_carneScalarWhereInput | produccion_carneScalarWhereInput[]
  }

  export type produccion_lecheraUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<produccion_lecheraCreateWithoutUsuarioInput, produccion_lecheraUncheckedCreateWithoutUsuarioInput> | produccion_lecheraCreateWithoutUsuarioInput[] | produccion_lecheraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutUsuarioInput | produccion_lecheraCreateOrConnectWithoutUsuarioInput[]
    upsert?: produccion_lecheraUpsertWithWhereUniqueWithoutUsuarioInput | produccion_lecheraUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: produccion_lecheraCreateManyUsuarioInputEnvelope
    set?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    disconnect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    delete?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    update?: produccion_lecheraUpdateWithWhereUniqueWithoutUsuarioInput | produccion_lecheraUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: produccion_lecheraUpdateManyWithWhereWithoutUsuarioInput | produccion_lecheraUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: produccion_lecheraScalarWhereInput | produccion_lecheraScalarWhereInput[]
  }

  export type evento_montaUpdateManyWithoutVeterinarioNestedInput = {
    create?: XOR<evento_montaCreateWithoutVeterinarioInput, evento_montaUncheckedCreateWithoutVeterinarioInput> | evento_montaCreateWithoutVeterinarioInput[] | evento_montaUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutVeterinarioInput | evento_montaCreateOrConnectWithoutVeterinarioInput[]
    upsert?: evento_montaUpsertWithWhereUniqueWithoutVeterinarioInput | evento_montaUpsertWithWhereUniqueWithoutVeterinarioInput[]
    createMany?: evento_montaCreateManyVeterinarioInputEnvelope
    set?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    disconnect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    delete?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    update?: evento_montaUpdateWithWhereUniqueWithoutVeterinarioInput | evento_montaUpdateWithWhereUniqueWithoutVeterinarioInput[]
    updateMany?: evento_montaUpdateManyWithWhereWithoutVeterinarioInput | evento_montaUpdateManyWithWhereWithoutVeterinarioInput[]
    deleteMany?: evento_montaScalarWhereInput | evento_montaScalarWhereInput[]
  }

  export type diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput = {
    create?: XOR<diagnostico_preñezCreateWithoutVeterinarioInput, diagnostico_preñezUncheckedCreateWithoutVeterinarioInput> | diagnostico_preñezCreateWithoutVeterinarioInput[] | diagnostico_preñezUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: diagnostico_preñezCreateOrConnectWithoutVeterinarioInput | diagnostico_preñezCreateOrConnectWithoutVeterinarioInput[]
    upsert?: diagnostico_preñezUpsertWithWhereUniqueWithoutVeterinarioInput | diagnostico_preñezUpsertWithWhereUniqueWithoutVeterinarioInput[]
    createMany?: diagnostico_preñezCreateManyVeterinarioInputEnvelope
    set?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    disconnect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    delete?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    connect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    update?: diagnostico_preñezUpdateWithWhereUniqueWithoutVeterinarioInput | diagnostico_preñezUpdateWithWhereUniqueWithoutVeterinarioInput[]
    updateMany?: diagnostico_preñezUpdateManyWithWhereWithoutVeterinarioInput | diagnostico_preñezUpdateManyWithWhereWithoutVeterinarioInput[]
    deleteMany?: diagnostico_preñezScalarWhereInput | diagnostico_preñezScalarWhereInput[]
  }

  export type evento_partoUpdateManyWithoutVeterinarioNestedInput = {
    create?: XOR<evento_partoCreateWithoutVeterinarioInput, evento_partoUncheckedCreateWithoutVeterinarioInput> | evento_partoCreateWithoutVeterinarioInput[] | evento_partoUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutVeterinarioInput | evento_partoCreateOrConnectWithoutVeterinarioInput[]
    upsert?: evento_partoUpsertWithWhereUniqueWithoutVeterinarioInput | evento_partoUpsertWithWhereUniqueWithoutVeterinarioInput[]
    createMany?: evento_partoCreateManyVeterinarioInputEnvelope
    set?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    disconnect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    delete?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    update?: evento_partoUpdateWithWhereUniqueWithoutVeterinarioInput | evento_partoUpdateWithWhereUniqueWithoutVeterinarioInput[]
    updateMany?: evento_partoUpdateManyWithWhereWithoutVeterinarioInput | evento_partoUpdateManyWithWhereWithoutVeterinarioInput[]
    deleteMany?: evento_partoScalarWhereInput | evento_partoScalarWhereInput[]
  }

  export type evento_partoUpdateManyWithoutOperadorNestedInput = {
    create?: XOR<evento_partoCreateWithoutOperadorInput, evento_partoUncheckedCreateWithoutOperadorInput> | evento_partoCreateWithoutOperadorInput[] | evento_partoUncheckedCreateWithoutOperadorInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutOperadorInput | evento_partoCreateOrConnectWithoutOperadorInput[]
    upsert?: evento_partoUpsertWithWhereUniqueWithoutOperadorInput | evento_partoUpsertWithWhereUniqueWithoutOperadorInput[]
    createMany?: evento_partoCreateManyOperadorInputEnvelope
    set?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    disconnect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    delete?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    update?: evento_partoUpdateWithWhereUniqueWithoutOperadorInput | evento_partoUpdateWithWhereUniqueWithoutOperadorInput[]
    updateMany?: evento_partoUpdateManyWithWhereWithoutOperadorInput | evento_partoUpdateManyWithWhereWithoutOperadorInput[]
    deleteMany?: evento_partoScalarWhereInput | evento_partoScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput = {
    create?: XOR<evento_sanitarioCreateWithoutVeterinarioInput, evento_sanitarioUncheckedCreateWithoutVeterinarioInput> | evento_sanitarioCreateWithoutVeterinarioInput[] | evento_sanitarioUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutVeterinarioInput | evento_sanitarioCreateOrConnectWithoutVeterinarioInput[]
    upsert?: evento_sanitarioUpsertWithWhereUniqueWithoutVeterinarioInput | evento_sanitarioUpsertWithWhereUniqueWithoutVeterinarioInput[]
    createMany?: evento_sanitarioCreateManyVeterinarioInputEnvelope
    set?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    disconnect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    delete?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    update?: evento_sanitarioUpdateWithWhereUniqueWithoutVeterinarioInput | evento_sanitarioUpdateWithWhereUniqueWithoutVeterinarioInput[]
    updateMany?: evento_sanitarioUpdateManyWithWhereWithoutVeterinarioInput | evento_sanitarioUpdateManyWithWhereWithoutVeterinarioInput[]
    deleteMany?: evento_sanitarioScalarWhereInput | evento_sanitarioScalarWhereInput[]
  }

  export type evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput = {
    create?: XOR<evento_sanitarioCreateWithoutOperadorInput, evento_sanitarioUncheckedCreateWithoutOperadorInput> | evento_sanitarioCreateWithoutOperadorInput[] | evento_sanitarioUncheckedCreateWithoutOperadorInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutOperadorInput | evento_sanitarioCreateOrConnectWithoutOperadorInput[]
    upsert?: evento_sanitarioUpsertWithWhereUniqueWithoutOperadorInput | evento_sanitarioUpsertWithWhereUniqueWithoutOperadorInput[]
    createMany?: evento_sanitarioCreateManyOperadorInputEnvelope
    set?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    disconnect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    delete?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    update?: evento_sanitarioUpdateWithWhereUniqueWithoutOperadorInput | evento_sanitarioUpdateWithWhereUniqueWithoutOperadorInput[]
    updateMany?: evento_sanitarioUpdateManyWithWhereWithoutOperadorInput | evento_sanitarioUpdateManyWithWhereWithoutOperadorInput[]
    deleteMany?: evento_sanitarioScalarWhereInput | evento_sanitarioScalarWhereInput[]
  }

  export type alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<alimentacionCreateWithoutUsuarioInput, alimentacionUncheckedCreateWithoutUsuarioInput> | alimentacionCreateWithoutUsuarioInput[] | alimentacionUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutUsuarioInput | alimentacionCreateOrConnectWithoutUsuarioInput[]
    upsert?: alimentacionUpsertWithWhereUniqueWithoutUsuarioInput | alimentacionUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: alimentacionCreateManyUsuarioInputEnvelope
    set?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    disconnect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    delete?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    update?: alimentacionUpdateWithWhereUniqueWithoutUsuarioInput | alimentacionUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: alimentacionUpdateManyWithWhereWithoutUsuarioInput | alimentacionUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: alimentacionScalarWhereInput | alimentacionScalarWhereInput[]
  }

  export type pesajesUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<pesajesCreateWithoutUsuarioInput, pesajesUncheckedCreateWithoutUsuarioInput> | pesajesCreateWithoutUsuarioInput[] | pesajesUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutUsuarioInput | pesajesCreateOrConnectWithoutUsuarioInput[]
    upsert?: pesajesUpsertWithWhereUniqueWithoutUsuarioInput | pesajesUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: pesajesCreateManyUsuarioInputEnvelope
    set?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    disconnect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    delete?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    update?: pesajesUpdateWithWhereUniqueWithoutUsuarioInput | pesajesUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: pesajesUpdateManyWithWhereWithoutUsuarioInput | pesajesUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: pesajesScalarWhereInput | pesajesScalarWhereInput[]
  }

  export type comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput = {
    create?: XOR<comprasCreateWithoutUsuario_contableInput, comprasUncheckedCreateWithoutUsuario_contableInput> | comprasCreateWithoutUsuario_contableInput[] | comprasUncheckedCreateWithoutUsuario_contableInput[]
    connectOrCreate?: comprasCreateOrConnectWithoutUsuario_contableInput | comprasCreateOrConnectWithoutUsuario_contableInput[]
    upsert?: comprasUpsertWithWhereUniqueWithoutUsuario_contableInput | comprasUpsertWithWhereUniqueWithoutUsuario_contableInput[]
    createMany?: comprasCreateManyUsuario_contableInputEnvelope
    set?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    disconnect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    delete?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    connect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    update?: comprasUpdateWithWhereUniqueWithoutUsuario_contableInput | comprasUpdateWithWhereUniqueWithoutUsuario_contableInput[]
    updateMany?: comprasUpdateManyWithWhereWithoutUsuario_contableInput | comprasUpdateManyWithWhereWithoutUsuario_contableInput[]
    deleteMany?: comprasScalarWhereInput | comprasScalarWhereInput[]
  }

  export type produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<produccion_carneCreateWithoutUsuarioInput, produccion_carneUncheckedCreateWithoutUsuarioInput> | produccion_carneCreateWithoutUsuarioInput[] | produccion_carneUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: produccion_carneCreateOrConnectWithoutUsuarioInput | produccion_carneCreateOrConnectWithoutUsuarioInput[]
    upsert?: produccion_carneUpsertWithWhereUniqueWithoutUsuarioInput | produccion_carneUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: produccion_carneCreateManyUsuarioInputEnvelope
    set?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    disconnect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    delete?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    connect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    update?: produccion_carneUpdateWithWhereUniqueWithoutUsuarioInput | produccion_carneUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: produccion_carneUpdateManyWithWhereWithoutUsuarioInput | produccion_carneUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: produccion_carneScalarWhereInput | produccion_carneScalarWhereInput[]
  }

  export type produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<produccion_lecheraCreateWithoutUsuarioInput, produccion_lecheraUncheckedCreateWithoutUsuarioInput> | produccion_lecheraCreateWithoutUsuarioInput[] | produccion_lecheraUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutUsuarioInput | produccion_lecheraCreateOrConnectWithoutUsuarioInput[]
    upsert?: produccion_lecheraUpsertWithWhereUniqueWithoutUsuarioInput | produccion_lecheraUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: produccion_lecheraCreateManyUsuarioInputEnvelope
    set?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    disconnect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    delete?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    update?: produccion_lecheraUpdateWithWhereUniqueWithoutUsuarioInput | produccion_lecheraUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: produccion_lecheraUpdateManyWithWhereWithoutUsuarioInput | produccion_lecheraUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: produccion_lecheraScalarWhereInput | produccion_lecheraScalarWhereInput[]
  }

  export type evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput = {
    create?: XOR<evento_montaCreateWithoutVeterinarioInput, evento_montaUncheckedCreateWithoutVeterinarioInput> | evento_montaCreateWithoutVeterinarioInput[] | evento_montaUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutVeterinarioInput | evento_montaCreateOrConnectWithoutVeterinarioInput[]
    upsert?: evento_montaUpsertWithWhereUniqueWithoutVeterinarioInput | evento_montaUpsertWithWhereUniqueWithoutVeterinarioInput[]
    createMany?: evento_montaCreateManyVeterinarioInputEnvelope
    set?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    disconnect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    delete?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    update?: evento_montaUpdateWithWhereUniqueWithoutVeterinarioInput | evento_montaUpdateWithWhereUniqueWithoutVeterinarioInput[]
    updateMany?: evento_montaUpdateManyWithWhereWithoutVeterinarioInput | evento_montaUpdateManyWithWhereWithoutVeterinarioInput[]
    deleteMany?: evento_montaScalarWhereInput | evento_montaScalarWhereInput[]
  }

  export type diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput = {
    create?: XOR<diagnostico_preñezCreateWithoutVeterinarioInput, diagnostico_preñezUncheckedCreateWithoutVeterinarioInput> | diagnostico_preñezCreateWithoutVeterinarioInput[] | diagnostico_preñezUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: diagnostico_preñezCreateOrConnectWithoutVeterinarioInput | diagnostico_preñezCreateOrConnectWithoutVeterinarioInput[]
    upsert?: diagnostico_preñezUpsertWithWhereUniqueWithoutVeterinarioInput | diagnostico_preñezUpsertWithWhereUniqueWithoutVeterinarioInput[]
    createMany?: diagnostico_preñezCreateManyVeterinarioInputEnvelope
    set?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    disconnect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    delete?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    connect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    update?: diagnostico_preñezUpdateWithWhereUniqueWithoutVeterinarioInput | diagnostico_preñezUpdateWithWhereUniqueWithoutVeterinarioInput[]
    updateMany?: diagnostico_preñezUpdateManyWithWhereWithoutVeterinarioInput | diagnostico_preñezUpdateManyWithWhereWithoutVeterinarioInput[]
    deleteMany?: diagnostico_preñezScalarWhereInput | diagnostico_preñezScalarWhereInput[]
  }

  export type evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput = {
    create?: XOR<evento_partoCreateWithoutVeterinarioInput, evento_partoUncheckedCreateWithoutVeterinarioInput> | evento_partoCreateWithoutVeterinarioInput[] | evento_partoUncheckedCreateWithoutVeterinarioInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutVeterinarioInput | evento_partoCreateOrConnectWithoutVeterinarioInput[]
    upsert?: evento_partoUpsertWithWhereUniqueWithoutVeterinarioInput | evento_partoUpsertWithWhereUniqueWithoutVeterinarioInput[]
    createMany?: evento_partoCreateManyVeterinarioInputEnvelope
    set?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    disconnect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    delete?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    update?: evento_partoUpdateWithWhereUniqueWithoutVeterinarioInput | evento_partoUpdateWithWhereUniqueWithoutVeterinarioInput[]
    updateMany?: evento_partoUpdateManyWithWhereWithoutVeterinarioInput | evento_partoUpdateManyWithWhereWithoutVeterinarioInput[]
    deleteMany?: evento_partoScalarWhereInput | evento_partoScalarWhereInput[]
  }

  export type evento_partoUncheckedUpdateManyWithoutOperadorNestedInput = {
    create?: XOR<evento_partoCreateWithoutOperadorInput, evento_partoUncheckedCreateWithoutOperadorInput> | evento_partoCreateWithoutOperadorInput[] | evento_partoUncheckedCreateWithoutOperadorInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutOperadorInput | evento_partoCreateOrConnectWithoutOperadorInput[]
    upsert?: evento_partoUpsertWithWhereUniqueWithoutOperadorInput | evento_partoUpsertWithWhereUniqueWithoutOperadorInput[]
    createMany?: evento_partoCreateManyOperadorInputEnvelope
    set?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    disconnect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    delete?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    update?: evento_partoUpdateWithWhereUniqueWithoutOperadorInput | evento_partoUpdateWithWhereUniqueWithoutOperadorInput[]
    updateMany?: evento_partoUpdateManyWithWhereWithoutOperadorInput | evento_partoUpdateManyWithWhereWithoutOperadorInput[]
    deleteMany?: evento_partoScalarWhereInput | evento_partoScalarWhereInput[]
  }

  export type insumosCreateNestedManyWithoutUnidadInput = {
    create?: XOR<insumosCreateWithoutUnidadInput, insumosUncheckedCreateWithoutUnidadInput> | insumosCreateWithoutUnidadInput[] | insumosUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: insumosCreateOrConnectWithoutUnidadInput | insumosCreateOrConnectWithoutUnidadInput[]
    createMany?: insumosCreateManyUnidadInputEnvelope
    connect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
  }

  export type pesajesCreateNestedManyWithoutUnidadInput = {
    create?: XOR<pesajesCreateWithoutUnidadInput, pesajesUncheckedCreateWithoutUnidadInput> | pesajesCreateWithoutUnidadInput[] | pesajesUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutUnidadInput | pesajesCreateOrConnectWithoutUnidadInput[]
    createMany?: pesajesCreateManyUnidadInputEnvelope
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
  }

  export type produccion_lecheraCreateNestedManyWithoutUnidadInput = {
    create?: XOR<produccion_lecheraCreateWithoutUnidadInput, produccion_lecheraUncheckedCreateWithoutUnidadInput> | produccion_lecheraCreateWithoutUnidadInput[] | produccion_lecheraUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutUnidadInput | produccion_lecheraCreateOrConnectWithoutUnidadInput[]
    createMany?: produccion_lecheraCreateManyUnidadInputEnvelope
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
  }

  export type insumosUncheckedCreateNestedManyWithoutUnidadInput = {
    create?: XOR<insumosCreateWithoutUnidadInput, insumosUncheckedCreateWithoutUnidadInput> | insumosCreateWithoutUnidadInput[] | insumosUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: insumosCreateOrConnectWithoutUnidadInput | insumosCreateOrConnectWithoutUnidadInput[]
    createMany?: insumosCreateManyUnidadInputEnvelope
    connect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
  }

  export type pesajesUncheckedCreateNestedManyWithoutUnidadInput = {
    create?: XOR<pesajesCreateWithoutUnidadInput, pesajesUncheckedCreateWithoutUnidadInput> | pesajesCreateWithoutUnidadInput[] | pesajesUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutUnidadInput | pesajesCreateOrConnectWithoutUnidadInput[]
    createMany?: pesajesCreateManyUnidadInputEnvelope
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
  }

  export type produccion_lecheraUncheckedCreateNestedManyWithoutUnidadInput = {
    create?: XOR<produccion_lecheraCreateWithoutUnidadInput, produccion_lecheraUncheckedCreateWithoutUnidadInput> | produccion_lecheraCreateWithoutUnidadInput[] | produccion_lecheraUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutUnidadInput | produccion_lecheraCreateOrConnectWithoutUnidadInput[]
    createMany?: produccion_lecheraCreateManyUnidadInputEnvelope
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
  }

  export type insumosUpdateManyWithoutUnidadNestedInput = {
    create?: XOR<insumosCreateWithoutUnidadInput, insumosUncheckedCreateWithoutUnidadInput> | insumosCreateWithoutUnidadInput[] | insumosUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: insumosCreateOrConnectWithoutUnidadInput | insumosCreateOrConnectWithoutUnidadInput[]
    upsert?: insumosUpsertWithWhereUniqueWithoutUnidadInput | insumosUpsertWithWhereUniqueWithoutUnidadInput[]
    createMany?: insumosCreateManyUnidadInputEnvelope
    set?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    disconnect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    delete?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    connect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    update?: insumosUpdateWithWhereUniqueWithoutUnidadInput | insumosUpdateWithWhereUniqueWithoutUnidadInput[]
    updateMany?: insumosUpdateManyWithWhereWithoutUnidadInput | insumosUpdateManyWithWhereWithoutUnidadInput[]
    deleteMany?: insumosScalarWhereInput | insumosScalarWhereInput[]
  }

  export type pesajesUpdateManyWithoutUnidadNestedInput = {
    create?: XOR<pesajesCreateWithoutUnidadInput, pesajesUncheckedCreateWithoutUnidadInput> | pesajesCreateWithoutUnidadInput[] | pesajesUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutUnidadInput | pesajesCreateOrConnectWithoutUnidadInput[]
    upsert?: pesajesUpsertWithWhereUniqueWithoutUnidadInput | pesajesUpsertWithWhereUniqueWithoutUnidadInput[]
    createMany?: pesajesCreateManyUnidadInputEnvelope
    set?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    disconnect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    delete?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    update?: pesajesUpdateWithWhereUniqueWithoutUnidadInput | pesajesUpdateWithWhereUniqueWithoutUnidadInput[]
    updateMany?: pesajesUpdateManyWithWhereWithoutUnidadInput | pesajesUpdateManyWithWhereWithoutUnidadInput[]
    deleteMany?: pesajesScalarWhereInput | pesajesScalarWhereInput[]
  }

  export type produccion_lecheraUpdateManyWithoutUnidadNestedInput = {
    create?: XOR<produccion_lecheraCreateWithoutUnidadInput, produccion_lecheraUncheckedCreateWithoutUnidadInput> | produccion_lecheraCreateWithoutUnidadInput[] | produccion_lecheraUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutUnidadInput | produccion_lecheraCreateOrConnectWithoutUnidadInput[]
    upsert?: produccion_lecheraUpsertWithWhereUniqueWithoutUnidadInput | produccion_lecheraUpsertWithWhereUniqueWithoutUnidadInput[]
    createMany?: produccion_lecheraCreateManyUnidadInputEnvelope
    set?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    disconnect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    delete?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    update?: produccion_lecheraUpdateWithWhereUniqueWithoutUnidadInput | produccion_lecheraUpdateWithWhereUniqueWithoutUnidadInput[]
    updateMany?: produccion_lecheraUpdateManyWithWhereWithoutUnidadInput | produccion_lecheraUpdateManyWithWhereWithoutUnidadInput[]
    deleteMany?: produccion_lecheraScalarWhereInput | produccion_lecheraScalarWhereInput[]
  }

  export type insumosUncheckedUpdateManyWithoutUnidadNestedInput = {
    create?: XOR<insumosCreateWithoutUnidadInput, insumosUncheckedCreateWithoutUnidadInput> | insumosCreateWithoutUnidadInput[] | insumosUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: insumosCreateOrConnectWithoutUnidadInput | insumosCreateOrConnectWithoutUnidadInput[]
    upsert?: insumosUpsertWithWhereUniqueWithoutUnidadInput | insumosUpsertWithWhereUniqueWithoutUnidadInput[]
    createMany?: insumosCreateManyUnidadInputEnvelope
    set?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    disconnect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    delete?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    connect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    update?: insumosUpdateWithWhereUniqueWithoutUnidadInput | insumosUpdateWithWhereUniqueWithoutUnidadInput[]
    updateMany?: insumosUpdateManyWithWhereWithoutUnidadInput | insumosUpdateManyWithWhereWithoutUnidadInput[]
    deleteMany?: insumosScalarWhereInput | insumosScalarWhereInput[]
  }

  export type pesajesUncheckedUpdateManyWithoutUnidadNestedInput = {
    create?: XOR<pesajesCreateWithoutUnidadInput, pesajesUncheckedCreateWithoutUnidadInput> | pesajesCreateWithoutUnidadInput[] | pesajesUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutUnidadInput | pesajesCreateOrConnectWithoutUnidadInput[]
    upsert?: pesajesUpsertWithWhereUniqueWithoutUnidadInput | pesajesUpsertWithWhereUniqueWithoutUnidadInput[]
    createMany?: pesajesCreateManyUnidadInputEnvelope
    set?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    disconnect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    delete?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    update?: pesajesUpdateWithWhereUniqueWithoutUnidadInput | pesajesUpdateWithWhereUniqueWithoutUnidadInput[]
    updateMany?: pesajesUpdateManyWithWhereWithoutUnidadInput | pesajesUpdateManyWithWhereWithoutUnidadInput[]
    deleteMany?: pesajesScalarWhereInput | pesajesScalarWhereInput[]
  }

  export type produccion_lecheraUncheckedUpdateManyWithoutUnidadNestedInput = {
    create?: XOR<produccion_lecheraCreateWithoutUnidadInput, produccion_lecheraUncheckedCreateWithoutUnidadInput> | produccion_lecheraCreateWithoutUnidadInput[] | produccion_lecheraUncheckedCreateWithoutUnidadInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutUnidadInput | produccion_lecheraCreateOrConnectWithoutUnidadInput[]
    upsert?: produccion_lecheraUpsertWithWhereUniqueWithoutUnidadInput | produccion_lecheraUpsertWithWhereUniqueWithoutUnidadInput[]
    createMany?: produccion_lecheraCreateManyUnidadInputEnvelope
    set?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    disconnect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    delete?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    update?: produccion_lecheraUpdateWithWhereUniqueWithoutUnidadInput | produccion_lecheraUpdateWithWhereUniqueWithoutUnidadInput[]
    updateMany?: produccion_lecheraUpdateManyWithWhereWithoutUnidadInput | produccion_lecheraUpdateManyWithWhereWithoutUnidadInput[]
    deleteMany?: produccion_lecheraScalarWhereInput | produccion_lecheraScalarWhereInput[]
  }

  export type insumosCreateNestedManyWithoutTipo_insumoInput = {
    create?: XOR<insumosCreateWithoutTipo_insumoInput, insumosUncheckedCreateWithoutTipo_insumoInput> | insumosCreateWithoutTipo_insumoInput[] | insumosUncheckedCreateWithoutTipo_insumoInput[]
    connectOrCreate?: insumosCreateOrConnectWithoutTipo_insumoInput | insumosCreateOrConnectWithoutTipo_insumoInput[]
    createMany?: insumosCreateManyTipo_insumoInputEnvelope
    connect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
  }

  export type insumosUncheckedCreateNestedManyWithoutTipo_insumoInput = {
    create?: XOR<insumosCreateWithoutTipo_insumoInput, insumosUncheckedCreateWithoutTipo_insumoInput> | insumosCreateWithoutTipo_insumoInput[] | insumosUncheckedCreateWithoutTipo_insumoInput[]
    connectOrCreate?: insumosCreateOrConnectWithoutTipo_insumoInput | insumosCreateOrConnectWithoutTipo_insumoInput[]
    createMany?: insumosCreateManyTipo_insumoInputEnvelope
    connect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
  }

  export type insumosUpdateManyWithoutTipo_insumoNestedInput = {
    create?: XOR<insumosCreateWithoutTipo_insumoInput, insumosUncheckedCreateWithoutTipo_insumoInput> | insumosCreateWithoutTipo_insumoInput[] | insumosUncheckedCreateWithoutTipo_insumoInput[]
    connectOrCreate?: insumosCreateOrConnectWithoutTipo_insumoInput | insumosCreateOrConnectWithoutTipo_insumoInput[]
    upsert?: insumosUpsertWithWhereUniqueWithoutTipo_insumoInput | insumosUpsertWithWhereUniqueWithoutTipo_insumoInput[]
    createMany?: insumosCreateManyTipo_insumoInputEnvelope
    set?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    disconnect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    delete?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    connect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    update?: insumosUpdateWithWhereUniqueWithoutTipo_insumoInput | insumosUpdateWithWhereUniqueWithoutTipo_insumoInput[]
    updateMany?: insumosUpdateManyWithWhereWithoutTipo_insumoInput | insumosUpdateManyWithWhereWithoutTipo_insumoInput[]
    deleteMany?: insumosScalarWhereInput | insumosScalarWhereInput[]
  }

  export type insumosUncheckedUpdateManyWithoutTipo_insumoNestedInput = {
    create?: XOR<insumosCreateWithoutTipo_insumoInput, insumosUncheckedCreateWithoutTipo_insumoInput> | insumosCreateWithoutTipo_insumoInput[] | insumosUncheckedCreateWithoutTipo_insumoInput[]
    connectOrCreate?: insumosCreateOrConnectWithoutTipo_insumoInput | insumosCreateOrConnectWithoutTipo_insumoInput[]
    upsert?: insumosUpsertWithWhereUniqueWithoutTipo_insumoInput | insumosUpsertWithWhereUniqueWithoutTipo_insumoInput[]
    createMany?: insumosCreateManyTipo_insumoInputEnvelope
    set?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    disconnect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    delete?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    connect?: insumosWhereUniqueInput | insumosWhereUniqueInput[]
    update?: insumosUpdateWithWhereUniqueWithoutTipo_insumoInput | insumosUpdateWithWhereUniqueWithoutTipo_insumoInput[]
    updateMany?: insumosUpdateManyWithWhereWithoutTipo_insumoInput | insumosUpdateManyWithWhereWithoutTipo_insumoInput[]
    deleteMany?: insumosScalarWhereInput | insumosScalarWhereInput[]
  }

  export type tipo_insumoCreateNestedOneWithoutInsumosInput = {
    create?: XOR<tipo_insumoCreateWithoutInsumosInput, tipo_insumoUncheckedCreateWithoutInsumosInput>
    connectOrCreate?: tipo_insumoCreateOrConnectWithoutInsumosInput
    connect?: tipo_insumoWhereUniqueInput
  }

  export type unidadesCreateNestedOneWithoutInsumosInput = {
    create?: XOR<unidadesCreateWithoutInsumosInput, unidadesUncheckedCreateWithoutInsumosInput>
    connectOrCreate?: unidadesCreateOrConnectWithoutInsumosInput
    connect?: unidadesWhereUniqueInput
  }

  export type detalle_comprasCreateNestedManyWithoutInsumoInput = {
    create?: XOR<detalle_comprasCreateWithoutInsumoInput, detalle_comprasUncheckedCreateWithoutInsumoInput> | detalle_comprasCreateWithoutInsumoInput[] | detalle_comprasUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: detalle_comprasCreateOrConnectWithoutInsumoInput | detalle_comprasCreateOrConnectWithoutInsumoInput[]
    createMany?: detalle_comprasCreateManyInsumoInputEnvelope
    connect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
  }

  export type evento_insumoCreateNestedManyWithoutInsumoInput = {
    create?: XOR<evento_insumoCreateWithoutInsumoInput, evento_insumoUncheckedCreateWithoutInsumoInput> | evento_insumoCreateWithoutInsumoInput[] | evento_insumoUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: evento_insumoCreateOrConnectWithoutInsumoInput | evento_insumoCreateOrConnectWithoutInsumoInput[]
    createMany?: evento_insumoCreateManyInsumoInputEnvelope
    connect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
  }

  export type alimentacionCreateNestedManyWithoutInsumoInput = {
    create?: XOR<alimentacionCreateWithoutInsumoInput, alimentacionUncheckedCreateWithoutInsumoInput> | alimentacionCreateWithoutInsumoInput[] | alimentacionUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutInsumoInput | alimentacionCreateOrConnectWithoutInsumoInput[]
    createMany?: alimentacionCreateManyInsumoInputEnvelope
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
  }

  export type detalle_comprasUncheckedCreateNestedManyWithoutInsumoInput = {
    create?: XOR<detalle_comprasCreateWithoutInsumoInput, detalle_comprasUncheckedCreateWithoutInsumoInput> | detalle_comprasCreateWithoutInsumoInput[] | detalle_comprasUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: detalle_comprasCreateOrConnectWithoutInsumoInput | detalle_comprasCreateOrConnectWithoutInsumoInput[]
    createMany?: detalle_comprasCreateManyInsumoInputEnvelope
    connect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
  }

  export type evento_insumoUncheckedCreateNestedManyWithoutInsumoInput = {
    create?: XOR<evento_insumoCreateWithoutInsumoInput, evento_insumoUncheckedCreateWithoutInsumoInput> | evento_insumoCreateWithoutInsumoInput[] | evento_insumoUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: evento_insumoCreateOrConnectWithoutInsumoInput | evento_insumoCreateOrConnectWithoutInsumoInput[]
    createMany?: evento_insumoCreateManyInsumoInputEnvelope
    connect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
  }

  export type alimentacionUncheckedCreateNestedManyWithoutInsumoInput = {
    create?: XOR<alimentacionCreateWithoutInsumoInput, alimentacionUncheckedCreateWithoutInsumoInput> | alimentacionCreateWithoutInsumoInput[] | alimentacionUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutInsumoInput | alimentacionCreateOrConnectWithoutInsumoInput[]
    createMany?: alimentacionCreateManyInsumoInputEnvelope
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
  }

  export type tipo_insumoUpdateOneRequiredWithoutInsumosNestedInput = {
    create?: XOR<tipo_insumoCreateWithoutInsumosInput, tipo_insumoUncheckedCreateWithoutInsumosInput>
    connectOrCreate?: tipo_insumoCreateOrConnectWithoutInsumosInput
    upsert?: tipo_insumoUpsertWithoutInsumosInput
    connect?: tipo_insumoWhereUniqueInput
    update?: XOR<XOR<tipo_insumoUpdateToOneWithWhereWithoutInsumosInput, tipo_insumoUpdateWithoutInsumosInput>, tipo_insumoUncheckedUpdateWithoutInsumosInput>
  }

  export type unidadesUpdateOneRequiredWithoutInsumosNestedInput = {
    create?: XOR<unidadesCreateWithoutInsumosInput, unidadesUncheckedCreateWithoutInsumosInput>
    connectOrCreate?: unidadesCreateOrConnectWithoutInsumosInput
    upsert?: unidadesUpsertWithoutInsumosInput
    connect?: unidadesWhereUniqueInput
    update?: XOR<XOR<unidadesUpdateToOneWithWhereWithoutInsumosInput, unidadesUpdateWithoutInsumosInput>, unidadesUncheckedUpdateWithoutInsumosInput>
  }

  export type detalle_comprasUpdateManyWithoutInsumoNestedInput = {
    create?: XOR<detalle_comprasCreateWithoutInsumoInput, detalle_comprasUncheckedCreateWithoutInsumoInput> | detalle_comprasCreateWithoutInsumoInput[] | detalle_comprasUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: detalle_comprasCreateOrConnectWithoutInsumoInput | detalle_comprasCreateOrConnectWithoutInsumoInput[]
    upsert?: detalle_comprasUpsertWithWhereUniqueWithoutInsumoInput | detalle_comprasUpsertWithWhereUniqueWithoutInsumoInput[]
    createMany?: detalle_comprasCreateManyInsumoInputEnvelope
    set?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    disconnect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    delete?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    connect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    update?: detalle_comprasUpdateWithWhereUniqueWithoutInsumoInput | detalle_comprasUpdateWithWhereUniqueWithoutInsumoInput[]
    updateMany?: detalle_comprasUpdateManyWithWhereWithoutInsumoInput | detalle_comprasUpdateManyWithWhereWithoutInsumoInput[]
    deleteMany?: detalle_comprasScalarWhereInput | detalle_comprasScalarWhereInput[]
  }

  export type evento_insumoUpdateManyWithoutInsumoNestedInput = {
    create?: XOR<evento_insumoCreateWithoutInsumoInput, evento_insumoUncheckedCreateWithoutInsumoInput> | evento_insumoCreateWithoutInsumoInput[] | evento_insumoUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: evento_insumoCreateOrConnectWithoutInsumoInput | evento_insumoCreateOrConnectWithoutInsumoInput[]
    upsert?: evento_insumoUpsertWithWhereUniqueWithoutInsumoInput | evento_insumoUpsertWithWhereUniqueWithoutInsumoInput[]
    createMany?: evento_insumoCreateManyInsumoInputEnvelope
    set?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    disconnect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    delete?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    connect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    update?: evento_insumoUpdateWithWhereUniqueWithoutInsumoInput | evento_insumoUpdateWithWhereUniqueWithoutInsumoInput[]
    updateMany?: evento_insumoUpdateManyWithWhereWithoutInsumoInput | evento_insumoUpdateManyWithWhereWithoutInsumoInput[]
    deleteMany?: evento_insumoScalarWhereInput | evento_insumoScalarWhereInput[]
  }

  export type alimentacionUpdateManyWithoutInsumoNestedInput = {
    create?: XOR<alimentacionCreateWithoutInsumoInput, alimentacionUncheckedCreateWithoutInsumoInput> | alimentacionCreateWithoutInsumoInput[] | alimentacionUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutInsumoInput | alimentacionCreateOrConnectWithoutInsumoInput[]
    upsert?: alimentacionUpsertWithWhereUniqueWithoutInsumoInput | alimentacionUpsertWithWhereUniqueWithoutInsumoInput[]
    createMany?: alimentacionCreateManyInsumoInputEnvelope
    set?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    disconnect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    delete?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    update?: alimentacionUpdateWithWhereUniqueWithoutInsumoInput | alimentacionUpdateWithWhereUniqueWithoutInsumoInput[]
    updateMany?: alimentacionUpdateManyWithWhereWithoutInsumoInput | alimentacionUpdateManyWithWhereWithoutInsumoInput[]
    deleteMany?: alimentacionScalarWhereInput | alimentacionScalarWhereInput[]
  }

  export type detalle_comprasUncheckedUpdateManyWithoutInsumoNestedInput = {
    create?: XOR<detalle_comprasCreateWithoutInsumoInput, detalle_comprasUncheckedCreateWithoutInsumoInput> | detalle_comprasCreateWithoutInsumoInput[] | detalle_comprasUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: detalle_comprasCreateOrConnectWithoutInsumoInput | detalle_comprasCreateOrConnectWithoutInsumoInput[]
    upsert?: detalle_comprasUpsertWithWhereUniqueWithoutInsumoInput | detalle_comprasUpsertWithWhereUniqueWithoutInsumoInput[]
    createMany?: detalle_comprasCreateManyInsumoInputEnvelope
    set?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    disconnect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    delete?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    connect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    update?: detalle_comprasUpdateWithWhereUniqueWithoutInsumoInput | detalle_comprasUpdateWithWhereUniqueWithoutInsumoInput[]
    updateMany?: detalle_comprasUpdateManyWithWhereWithoutInsumoInput | detalle_comprasUpdateManyWithWhereWithoutInsumoInput[]
    deleteMany?: detalle_comprasScalarWhereInput | detalle_comprasScalarWhereInput[]
  }

  export type evento_insumoUncheckedUpdateManyWithoutInsumoNestedInput = {
    create?: XOR<evento_insumoCreateWithoutInsumoInput, evento_insumoUncheckedCreateWithoutInsumoInput> | evento_insumoCreateWithoutInsumoInput[] | evento_insumoUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: evento_insumoCreateOrConnectWithoutInsumoInput | evento_insumoCreateOrConnectWithoutInsumoInput[]
    upsert?: evento_insumoUpsertWithWhereUniqueWithoutInsumoInput | evento_insumoUpsertWithWhereUniqueWithoutInsumoInput[]
    createMany?: evento_insumoCreateManyInsumoInputEnvelope
    set?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    disconnect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    delete?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    connect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    update?: evento_insumoUpdateWithWhereUniqueWithoutInsumoInput | evento_insumoUpdateWithWhereUniqueWithoutInsumoInput[]
    updateMany?: evento_insumoUpdateManyWithWhereWithoutInsumoInput | evento_insumoUpdateManyWithWhereWithoutInsumoInput[]
    deleteMany?: evento_insumoScalarWhereInput | evento_insumoScalarWhereInput[]
  }

  export type alimentacionUncheckedUpdateManyWithoutInsumoNestedInput = {
    create?: XOR<alimentacionCreateWithoutInsumoInput, alimentacionUncheckedCreateWithoutInsumoInput> | alimentacionCreateWithoutInsumoInput[] | alimentacionUncheckedCreateWithoutInsumoInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutInsumoInput | alimentacionCreateOrConnectWithoutInsumoInput[]
    upsert?: alimentacionUpsertWithWhereUniqueWithoutInsumoInput | alimentacionUpsertWithWhereUniqueWithoutInsumoInput[]
    createMany?: alimentacionCreateManyInsumoInputEnvelope
    set?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    disconnect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    delete?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    update?: alimentacionUpdateWithWhereUniqueWithoutInsumoInput | alimentacionUpdateWithWhereUniqueWithoutInsumoInput[]
    updateMany?: alimentacionUpdateManyWithWhereWithoutInsumoInput | alimentacionUpdateManyWithWhereWithoutInsumoInput[]
    deleteMany?: alimentacionScalarWhereInput | alimentacionScalarWhereInput[]
  }

  export type tipo_eventoCreateNestedOneWithoutHijosInput = {
    create?: XOR<tipo_eventoCreateWithoutHijosInput, tipo_eventoUncheckedCreateWithoutHijosInput>
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutHijosInput
    connect?: tipo_eventoWhereUniqueInput
  }

  export type tipo_eventoCreateNestedManyWithoutPadreInput = {
    create?: XOR<tipo_eventoCreateWithoutPadreInput, tipo_eventoUncheckedCreateWithoutPadreInput> | tipo_eventoCreateWithoutPadreInput[] | tipo_eventoUncheckedCreateWithoutPadreInput[]
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutPadreInput | tipo_eventoCreateOrConnectWithoutPadreInput[]
    createMany?: tipo_eventoCreateManyPadreInputEnvelope
    connect?: tipo_eventoWhereUniqueInput | tipo_eventoWhereUniqueInput[]
  }

  export type evento_sanitarioCreateNestedManyWithoutTipo_eventoInput = {
    create?: XOR<evento_sanitarioCreateWithoutTipo_eventoInput, evento_sanitarioUncheckedCreateWithoutTipo_eventoInput> | evento_sanitarioCreateWithoutTipo_eventoInput[] | evento_sanitarioUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutTipo_eventoInput | evento_sanitarioCreateOrConnectWithoutTipo_eventoInput[]
    createMany?: evento_sanitarioCreateManyTipo_eventoInputEnvelope
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
  }

  export type evento_montaCreateNestedManyWithoutTipo_eventoInput = {
    create?: XOR<evento_montaCreateWithoutTipo_eventoInput, evento_montaUncheckedCreateWithoutTipo_eventoInput> | evento_montaCreateWithoutTipo_eventoInput[] | evento_montaUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutTipo_eventoInput | evento_montaCreateOrConnectWithoutTipo_eventoInput[]
    createMany?: evento_montaCreateManyTipo_eventoInputEnvelope
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
  }

  export type evento_partoCreateNestedManyWithoutTipo_eventoInput = {
    create?: XOR<evento_partoCreateWithoutTipo_eventoInput, evento_partoUncheckedCreateWithoutTipo_eventoInput> | evento_partoCreateWithoutTipo_eventoInput[] | evento_partoUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutTipo_eventoInput | evento_partoCreateOrConnectWithoutTipo_eventoInput[]
    createMany?: evento_partoCreateManyTipo_eventoInputEnvelope
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
  }

  export type tipo_eventoUncheckedCreateNestedManyWithoutPadreInput = {
    create?: XOR<tipo_eventoCreateWithoutPadreInput, tipo_eventoUncheckedCreateWithoutPadreInput> | tipo_eventoCreateWithoutPadreInput[] | tipo_eventoUncheckedCreateWithoutPadreInput[]
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutPadreInput | tipo_eventoCreateOrConnectWithoutPadreInput[]
    createMany?: tipo_eventoCreateManyPadreInputEnvelope
    connect?: tipo_eventoWhereUniqueInput | tipo_eventoWhereUniqueInput[]
  }

  export type evento_sanitarioUncheckedCreateNestedManyWithoutTipo_eventoInput = {
    create?: XOR<evento_sanitarioCreateWithoutTipo_eventoInput, evento_sanitarioUncheckedCreateWithoutTipo_eventoInput> | evento_sanitarioCreateWithoutTipo_eventoInput[] | evento_sanitarioUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutTipo_eventoInput | evento_sanitarioCreateOrConnectWithoutTipo_eventoInput[]
    createMany?: evento_sanitarioCreateManyTipo_eventoInputEnvelope
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
  }

  export type evento_montaUncheckedCreateNestedManyWithoutTipo_eventoInput = {
    create?: XOR<evento_montaCreateWithoutTipo_eventoInput, evento_montaUncheckedCreateWithoutTipo_eventoInput> | evento_montaCreateWithoutTipo_eventoInput[] | evento_montaUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutTipo_eventoInput | evento_montaCreateOrConnectWithoutTipo_eventoInput[]
    createMany?: evento_montaCreateManyTipo_eventoInputEnvelope
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
  }

  export type evento_partoUncheckedCreateNestedManyWithoutTipo_eventoInput = {
    create?: XOR<evento_partoCreateWithoutTipo_eventoInput, evento_partoUncheckedCreateWithoutTipo_eventoInput> | evento_partoCreateWithoutTipo_eventoInput[] | evento_partoUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutTipo_eventoInput | evento_partoCreateOrConnectWithoutTipo_eventoInput[]
    createMany?: evento_partoCreateManyTipo_eventoInputEnvelope
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
  }

  export type tipo_eventoUpdateOneWithoutHijosNestedInput = {
    create?: XOR<tipo_eventoCreateWithoutHijosInput, tipo_eventoUncheckedCreateWithoutHijosInput>
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutHijosInput
    upsert?: tipo_eventoUpsertWithoutHijosInput
    disconnect?: tipo_eventoWhereInput | boolean
    delete?: tipo_eventoWhereInput | boolean
    connect?: tipo_eventoWhereUniqueInput
    update?: XOR<XOR<tipo_eventoUpdateToOneWithWhereWithoutHijosInput, tipo_eventoUpdateWithoutHijosInput>, tipo_eventoUncheckedUpdateWithoutHijosInput>
  }

  export type tipo_eventoUpdateManyWithoutPadreNestedInput = {
    create?: XOR<tipo_eventoCreateWithoutPadreInput, tipo_eventoUncheckedCreateWithoutPadreInput> | tipo_eventoCreateWithoutPadreInput[] | tipo_eventoUncheckedCreateWithoutPadreInput[]
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutPadreInput | tipo_eventoCreateOrConnectWithoutPadreInput[]
    upsert?: tipo_eventoUpsertWithWhereUniqueWithoutPadreInput | tipo_eventoUpsertWithWhereUniqueWithoutPadreInput[]
    createMany?: tipo_eventoCreateManyPadreInputEnvelope
    set?: tipo_eventoWhereUniqueInput | tipo_eventoWhereUniqueInput[]
    disconnect?: tipo_eventoWhereUniqueInput | tipo_eventoWhereUniqueInput[]
    delete?: tipo_eventoWhereUniqueInput | tipo_eventoWhereUniqueInput[]
    connect?: tipo_eventoWhereUniqueInput | tipo_eventoWhereUniqueInput[]
    update?: tipo_eventoUpdateWithWhereUniqueWithoutPadreInput | tipo_eventoUpdateWithWhereUniqueWithoutPadreInput[]
    updateMany?: tipo_eventoUpdateManyWithWhereWithoutPadreInput | tipo_eventoUpdateManyWithWhereWithoutPadreInput[]
    deleteMany?: tipo_eventoScalarWhereInput | tipo_eventoScalarWhereInput[]
  }

  export type evento_sanitarioUpdateManyWithoutTipo_eventoNestedInput = {
    create?: XOR<evento_sanitarioCreateWithoutTipo_eventoInput, evento_sanitarioUncheckedCreateWithoutTipo_eventoInput> | evento_sanitarioCreateWithoutTipo_eventoInput[] | evento_sanitarioUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutTipo_eventoInput | evento_sanitarioCreateOrConnectWithoutTipo_eventoInput[]
    upsert?: evento_sanitarioUpsertWithWhereUniqueWithoutTipo_eventoInput | evento_sanitarioUpsertWithWhereUniqueWithoutTipo_eventoInput[]
    createMany?: evento_sanitarioCreateManyTipo_eventoInputEnvelope
    set?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    disconnect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    delete?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    update?: evento_sanitarioUpdateWithWhereUniqueWithoutTipo_eventoInput | evento_sanitarioUpdateWithWhereUniqueWithoutTipo_eventoInput[]
    updateMany?: evento_sanitarioUpdateManyWithWhereWithoutTipo_eventoInput | evento_sanitarioUpdateManyWithWhereWithoutTipo_eventoInput[]
    deleteMany?: evento_sanitarioScalarWhereInput | evento_sanitarioScalarWhereInput[]
  }

  export type evento_montaUpdateManyWithoutTipo_eventoNestedInput = {
    create?: XOR<evento_montaCreateWithoutTipo_eventoInput, evento_montaUncheckedCreateWithoutTipo_eventoInput> | evento_montaCreateWithoutTipo_eventoInput[] | evento_montaUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutTipo_eventoInput | evento_montaCreateOrConnectWithoutTipo_eventoInput[]
    upsert?: evento_montaUpsertWithWhereUniqueWithoutTipo_eventoInput | evento_montaUpsertWithWhereUniqueWithoutTipo_eventoInput[]
    createMany?: evento_montaCreateManyTipo_eventoInputEnvelope
    set?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    disconnect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    delete?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    update?: evento_montaUpdateWithWhereUniqueWithoutTipo_eventoInput | evento_montaUpdateWithWhereUniqueWithoutTipo_eventoInput[]
    updateMany?: evento_montaUpdateManyWithWhereWithoutTipo_eventoInput | evento_montaUpdateManyWithWhereWithoutTipo_eventoInput[]
    deleteMany?: evento_montaScalarWhereInput | evento_montaScalarWhereInput[]
  }

  export type evento_partoUpdateManyWithoutTipo_eventoNestedInput = {
    create?: XOR<evento_partoCreateWithoutTipo_eventoInput, evento_partoUncheckedCreateWithoutTipo_eventoInput> | evento_partoCreateWithoutTipo_eventoInput[] | evento_partoUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutTipo_eventoInput | evento_partoCreateOrConnectWithoutTipo_eventoInput[]
    upsert?: evento_partoUpsertWithWhereUniqueWithoutTipo_eventoInput | evento_partoUpsertWithWhereUniqueWithoutTipo_eventoInput[]
    createMany?: evento_partoCreateManyTipo_eventoInputEnvelope
    set?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    disconnect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    delete?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    update?: evento_partoUpdateWithWhereUniqueWithoutTipo_eventoInput | evento_partoUpdateWithWhereUniqueWithoutTipo_eventoInput[]
    updateMany?: evento_partoUpdateManyWithWhereWithoutTipo_eventoInput | evento_partoUpdateManyWithWhereWithoutTipo_eventoInput[]
    deleteMany?: evento_partoScalarWhereInput | evento_partoScalarWhereInput[]
  }

  export type tipo_eventoUncheckedUpdateManyWithoutPadreNestedInput = {
    create?: XOR<tipo_eventoCreateWithoutPadreInput, tipo_eventoUncheckedCreateWithoutPadreInput> | tipo_eventoCreateWithoutPadreInput[] | tipo_eventoUncheckedCreateWithoutPadreInput[]
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutPadreInput | tipo_eventoCreateOrConnectWithoutPadreInput[]
    upsert?: tipo_eventoUpsertWithWhereUniqueWithoutPadreInput | tipo_eventoUpsertWithWhereUniqueWithoutPadreInput[]
    createMany?: tipo_eventoCreateManyPadreInputEnvelope
    set?: tipo_eventoWhereUniqueInput | tipo_eventoWhereUniqueInput[]
    disconnect?: tipo_eventoWhereUniqueInput | tipo_eventoWhereUniqueInput[]
    delete?: tipo_eventoWhereUniqueInput | tipo_eventoWhereUniqueInput[]
    connect?: tipo_eventoWhereUniqueInput | tipo_eventoWhereUniqueInput[]
    update?: tipo_eventoUpdateWithWhereUniqueWithoutPadreInput | tipo_eventoUpdateWithWhereUniqueWithoutPadreInput[]
    updateMany?: tipo_eventoUpdateManyWithWhereWithoutPadreInput | tipo_eventoUpdateManyWithWhereWithoutPadreInput[]
    deleteMany?: tipo_eventoScalarWhereInput | tipo_eventoScalarWhereInput[]
  }

  export type evento_sanitarioUncheckedUpdateManyWithoutTipo_eventoNestedInput = {
    create?: XOR<evento_sanitarioCreateWithoutTipo_eventoInput, evento_sanitarioUncheckedCreateWithoutTipo_eventoInput> | evento_sanitarioCreateWithoutTipo_eventoInput[] | evento_sanitarioUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutTipo_eventoInput | evento_sanitarioCreateOrConnectWithoutTipo_eventoInput[]
    upsert?: evento_sanitarioUpsertWithWhereUniqueWithoutTipo_eventoInput | evento_sanitarioUpsertWithWhereUniqueWithoutTipo_eventoInput[]
    createMany?: evento_sanitarioCreateManyTipo_eventoInputEnvelope
    set?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    disconnect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    delete?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    update?: evento_sanitarioUpdateWithWhereUniqueWithoutTipo_eventoInput | evento_sanitarioUpdateWithWhereUniqueWithoutTipo_eventoInput[]
    updateMany?: evento_sanitarioUpdateManyWithWhereWithoutTipo_eventoInput | evento_sanitarioUpdateManyWithWhereWithoutTipo_eventoInput[]
    deleteMany?: evento_sanitarioScalarWhereInput | evento_sanitarioScalarWhereInput[]
  }

  export type evento_montaUncheckedUpdateManyWithoutTipo_eventoNestedInput = {
    create?: XOR<evento_montaCreateWithoutTipo_eventoInput, evento_montaUncheckedCreateWithoutTipo_eventoInput> | evento_montaCreateWithoutTipo_eventoInput[] | evento_montaUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutTipo_eventoInput | evento_montaCreateOrConnectWithoutTipo_eventoInput[]
    upsert?: evento_montaUpsertWithWhereUniqueWithoutTipo_eventoInput | evento_montaUpsertWithWhereUniqueWithoutTipo_eventoInput[]
    createMany?: evento_montaCreateManyTipo_eventoInputEnvelope
    set?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    disconnect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    delete?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    update?: evento_montaUpdateWithWhereUniqueWithoutTipo_eventoInput | evento_montaUpdateWithWhereUniqueWithoutTipo_eventoInput[]
    updateMany?: evento_montaUpdateManyWithWhereWithoutTipo_eventoInput | evento_montaUpdateManyWithWhereWithoutTipo_eventoInput[]
    deleteMany?: evento_montaScalarWhereInput | evento_montaScalarWhereInput[]
  }

  export type evento_partoUncheckedUpdateManyWithoutTipo_eventoNestedInput = {
    create?: XOR<evento_partoCreateWithoutTipo_eventoInput, evento_partoUncheckedCreateWithoutTipo_eventoInput> | evento_partoCreateWithoutTipo_eventoInput[] | evento_partoUncheckedCreateWithoutTipo_eventoInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutTipo_eventoInput | evento_partoCreateOrConnectWithoutTipo_eventoInput[]
    upsert?: evento_partoUpsertWithWhereUniqueWithoutTipo_eventoInput | evento_partoUpsertWithWhereUniqueWithoutTipo_eventoInput[]
    createMany?: evento_partoCreateManyTipo_eventoInputEnvelope
    set?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    disconnect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    delete?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    update?: evento_partoUpdateWithWhereUniqueWithoutTipo_eventoInput | evento_partoUpdateWithWhereUniqueWithoutTipo_eventoInput[]
    updateMany?: evento_partoUpdateManyWithWhereWithoutTipo_eventoInput | evento_partoUpdateManyWithWhereWithoutTipo_eventoInput[]
    deleteMany?: evento_partoScalarWhereInput | evento_partoScalarWhereInput[]
  }

  export type animalesCreateNestedManyWithoutRazaInput = {
    create?: XOR<animalesCreateWithoutRazaInput, animalesUncheckedCreateWithoutRazaInput> | animalesCreateWithoutRazaInput[] | animalesUncheckedCreateWithoutRazaInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutRazaInput | animalesCreateOrConnectWithoutRazaInput[]
    createMany?: animalesCreateManyRazaInputEnvelope
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
  }

  export type animalesUncheckedCreateNestedManyWithoutRazaInput = {
    create?: XOR<animalesCreateWithoutRazaInput, animalesUncheckedCreateWithoutRazaInput> | animalesCreateWithoutRazaInput[] | animalesUncheckedCreateWithoutRazaInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutRazaInput | animalesCreateOrConnectWithoutRazaInput[]
    createMany?: animalesCreateManyRazaInputEnvelope
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
  }

  export type animalesUpdateManyWithoutRazaNestedInput = {
    create?: XOR<animalesCreateWithoutRazaInput, animalesUncheckedCreateWithoutRazaInput> | animalesCreateWithoutRazaInput[] | animalesUncheckedCreateWithoutRazaInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutRazaInput | animalesCreateOrConnectWithoutRazaInput[]
    upsert?: animalesUpsertWithWhereUniqueWithoutRazaInput | animalesUpsertWithWhereUniqueWithoutRazaInput[]
    createMany?: animalesCreateManyRazaInputEnvelope
    set?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    disconnect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    delete?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    update?: animalesUpdateWithWhereUniqueWithoutRazaInput | animalesUpdateWithWhereUniqueWithoutRazaInput[]
    updateMany?: animalesUpdateManyWithWhereWithoutRazaInput | animalesUpdateManyWithWhereWithoutRazaInput[]
    deleteMany?: animalesScalarWhereInput | animalesScalarWhereInput[]
  }

  export type animalesUncheckedUpdateManyWithoutRazaNestedInput = {
    create?: XOR<animalesCreateWithoutRazaInput, animalesUncheckedCreateWithoutRazaInput> | animalesCreateWithoutRazaInput[] | animalesUncheckedCreateWithoutRazaInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutRazaInput | animalesCreateOrConnectWithoutRazaInput[]
    upsert?: animalesUpsertWithWhereUniqueWithoutRazaInput | animalesUpsertWithWhereUniqueWithoutRazaInput[]
    createMany?: animalesCreateManyRazaInputEnvelope
    set?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    disconnect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    delete?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    update?: animalesUpdateWithWhereUniqueWithoutRazaInput | animalesUpdateWithWhereUniqueWithoutRazaInput[]
    updateMany?: animalesUpdateManyWithWhereWithoutRazaInput | animalesUpdateManyWithWhereWithoutRazaInput[]
    deleteMany?: animalesScalarWhereInput | animalesScalarWhereInput[]
  }

  export type lotesCreateNestedManyWithoutPotreroInput = {
    create?: XOR<lotesCreateWithoutPotreroInput, lotesUncheckedCreateWithoutPotreroInput> | lotesCreateWithoutPotreroInput[] | lotesUncheckedCreateWithoutPotreroInput[]
    connectOrCreate?: lotesCreateOrConnectWithoutPotreroInput | lotesCreateOrConnectWithoutPotreroInput[]
    createMany?: lotesCreateManyPotreroInputEnvelope
    connect?: lotesWhereUniqueInput | lotesWhereUniqueInput[]
  }

  export type lotesUncheckedCreateNestedManyWithoutPotreroInput = {
    create?: XOR<lotesCreateWithoutPotreroInput, lotesUncheckedCreateWithoutPotreroInput> | lotesCreateWithoutPotreroInput[] | lotesUncheckedCreateWithoutPotreroInput[]
    connectOrCreate?: lotesCreateOrConnectWithoutPotreroInput | lotesCreateOrConnectWithoutPotreroInput[]
    createMany?: lotesCreateManyPotreroInputEnvelope
    connect?: lotesWhereUniqueInput | lotesWhereUniqueInput[]
  }

  export type lotesUpdateManyWithoutPotreroNestedInput = {
    create?: XOR<lotesCreateWithoutPotreroInput, lotesUncheckedCreateWithoutPotreroInput> | lotesCreateWithoutPotreroInput[] | lotesUncheckedCreateWithoutPotreroInput[]
    connectOrCreate?: lotesCreateOrConnectWithoutPotreroInput | lotesCreateOrConnectWithoutPotreroInput[]
    upsert?: lotesUpsertWithWhereUniqueWithoutPotreroInput | lotesUpsertWithWhereUniqueWithoutPotreroInput[]
    createMany?: lotesCreateManyPotreroInputEnvelope
    set?: lotesWhereUniqueInput | lotesWhereUniqueInput[]
    disconnect?: lotesWhereUniqueInput | lotesWhereUniqueInput[]
    delete?: lotesWhereUniqueInput | lotesWhereUniqueInput[]
    connect?: lotesWhereUniqueInput | lotesWhereUniqueInput[]
    update?: lotesUpdateWithWhereUniqueWithoutPotreroInput | lotesUpdateWithWhereUniqueWithoutPotreroInput[]
    updateMany?: lotesUpdateManyWithWhereWithoutPotreroInput | lotesUpdateManyWithWhereWithoutPotreroInput[]
    deleteMany?: lotesScalarWhereInput | lotesScalarWhereInput[]
  }

  export type lotesUncheckedUpdateManyWithoutPotreroNestedInput = {
    create?: XOR<lotesCreateWithoutPotreroInput, lotesUncheckedCreateWithoutPotreroInput> | lotesCreateWithoutPotreroInput[] | lotesUncheckedCreateWithoutPotreroInput[]
    connectOrCreate?: lotesCreateOrConnectWithoutPotreroInput | lotesCreateOrConnectWithoutPotreroInput[]
    upsert?: lotesUpsertWithWhereUniqueWithoutPotreroInput | lotesUpsertWithWhereUniqueWithoutPotreroInput[]
    createMany?: lotesCreateManyPotreroInputEnvelope
    set?: lotesWhereUniqueInput | lotesWhereUniqueInput[]
    disconnect?: lotesWhereUniqueInput | lotesWhereUniqueInput[]
    delete?: lotesWhereUniqueInput | lotesWhereUniqueInput[]
    connect?: lotesWhereUniqueInput | lotesWhereUniqueInput[]
    update?: lotesUpdateWithWhereUniqueWithoutPotreroInput | lotesUpdateWithWhereUniqueWithoutPotreroInput[]
    updateMany?: lotesUpdateManyWithWhereWithoutPotreroInput | lotesUpdateManyWithWhereWithoutPotreroInput[]
    deleteMany?: lotesScalarWhereInput | lotesScalarWhereInput[]
  }

  export type potrerosCreateNestedOneWithoutLotesInput = {
    create?: XOR<potrerosCreateWithoutLotesInput, potrerosUncheckedCreateWithoutLotesInput>
    connectOrCreate?: potrerosCreateOrConnectWithoutLotesInput
    connect?: potrerosWhereUniqueInput
  }

  export type animalesCreateNestedManyWithoutLoteInput = {
    create?: XOR<animalesCreateWithoutLoteInput, animalesUncheckedCreateWithoutLoteInput> | animalesCreateWithoutLoteInput[] | animalesUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutLoteInput | animalesCreateOrConnectWithoutLoteInput[]
    createMany?: animalesCreateManyLoteInputEnvelope
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
  }

  export type animalesUncheckedCreateNestedManyWithoutLoteInput = {
    create?: XOR<animalesCreateWithoutLoteInput, animalesUncheckedCreateWithoutLoteInput> | animalesCreateWithoutLoteInput[] | animalesUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutLoteInput | animalesCreateOrConnectWithoutLoteInput[]
    createMany?: animalesCreateManyLoteInputEnvelope
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
  }

  export type potrerosUpdateOneRequiredWithoutLotesNestedInput = {
    create?: XOR<potrerosCreateWithoutLotesInput, potrerosUncheckedCreateWithoutLotesInput>
    connectOrCreate?: potrerosCreateOrConnectWithoutLotesInput
    upsert?: potrerosUpsertWithoutLotesInput
    connect?: potrerosWhereUniqueInput
    update?: XOR<XOR<potrerosUpdateToOneWithWhereWithoutLotesInput, potrerosUpdateWithoutLotesInput>, potrerosUncheckedUpdateWithoutLotesInput>
  }

  export type animalesUpdateManyWithoutLoteNestedInput = {
    create?: XOR<animalesCreateWithoutLoteInput, animalesUncheckedCreateWithoutLoteInput> | animalesCreateWithoutLoteInput[] | animalesUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutLoteInput | animalesCreateOrConnectWithoutLoteInput[]
    upsert?: animalesUpsertWithWhereUniqueWithoutLoteInput | animalesUpsertWithWhereUniqueWithoutLoteInput[]
    createMany?: animalesCreateManyLoteInputEnvelope
    set?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    disconnect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    delete?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    update?: animalesUpdateWithWhereUniqueWithoutLoteInput | animalesUpdateWithWhereUniqueWithoutLoteInput[]
    updateMany?: animalesUpdateManyWithWhereWithoutLoteInput | animalesUpdateManyWithWhereWithoutLoteInput[]
    deleteMany?: animalesScalarWhereInput | animalesScalarWhereInput[]
  }

  export type animalesUncheckedUpdateManyWithoutLoteNestedInput = {
    create?: XOR<animalesCreateWithoutLoteInput, animalesUncheckedCreateWithoutLoteInput> | animalesCreateWithoutLoteInput[] | animalesUncheckedCreateWithoutLoteInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutLoteInput | animalesCreateOrConnectWithoutLoteInput[]
    upsert?: animalesUpsertWithWhereUniqueWithoutLoteInput | animalesUpsertWithWhereUniqueWithoutLoteInput[]
    createMany?: animalesCreateManyLoteInputEnvelope
    set?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    disconnect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    delete?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    update?: animalesUpdateWithWhereUniqueWithoutLoteInput | animalesUpdateWithWhereUniqueWithoutLoteInput[]
    updateMany?: animalesUpdateManyWithWhereWithoutLoteInput | animalesUpdateManyWithWhereWithoutLoteInput[]
    deleteMany?: animalesScalarWhereInput | animalesScalarWhereInput[]
  }

  export type animalesCreateNestedOneWithoutHijos_madreInput = {
    create?: XOR<animalesCreateWithoutHijos_madreInput, animalesUncheckedCreateWithoutHijos_madreInput>
    connectOrCreate?: animalesCreateOrConnectWithoutHijos_madreInput
    connect?: animalesWhereUniqueInput
  }

  export type animalesCreateNestedOneWithoutHijos_padreInput = {
    create?: XOR<animalesCreateWithoutHijos_padreInput, animalesUncheckedCreateWithoutHijos_padreInput>
    connectOrCreate?: animalesCreateOrConnectWithoutHijos_padreInput
    connect?: animalesWhereUniqueInput
  }

  export type animalesCreateNestedManyWithoutMadreInput = {
    create?: XOR<animalesCreateWithoutMadreInput, animalesUncheckedCreateWithoutMadreInput> | animalesCreateWithoutMadreInput[] | animalesUncheckedCreateWithoutMadreInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutMadreInput | animalesCreateOrConnectWithoutMadreInput[]
    createMany?: animalesCreateManyMadreInputEnvelope
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
  }

  export type animalesCreateNestedManyWithoutPadreInput = {
    create?: XOR<animalesCreateWithoutPadreInput, animalesUncheckedCreateWithoutPadreInput> | animalesCreateWithoutPadreInput[] | animalesUncheckedCreateWithoutPadreInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutPadreInput | animalesCreateOrConnectWithoutPadreInput[]
    createMany?: animalesCreateManyPadreInputEnvelope
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
  }

  export type lotesCreateNestedOneWithoutAnimalesInput = {
    create?: XOR<lotesCreateWithoutAnimalesInput, lotesUncheckedCreateWithoutAnimalesInput>
    connectOrCreate?: lotesCreateOrConnectWithoutAnimalesInput
    connect?: lotesWhereUniqueInput
  }

  export type razasCreateNestedOneWithoutAnimalesInput = {
    create?: XOR<razasCreateWithoutAnimalesInput, razasUncheckedCreateWithoutAnimalesInput>
    connectOrCreate?: razasCreateOrConnectWithoutAnimalesInput
    connect?: razasWhereUniqueInput
  }

  export type evento_sanitarioCreateNestedManyWithoutAnimalInput = {
    create?: XOR<evento_sanitarioCreateWithoutAnimalInput, evento_sanitarioUncheckedCreateWithoutAnimalInput> | evento_sanitarioCreateWithoutAnimalInput[] | evento_sanitarioUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutAnimalInput | evento_sanitarioCreateOrConnectWithoutAnimalInput[]
    createMany?: evento_sanitarioCreateManyAnimalInputEnvelope
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
  }

  export type alimentacionCreateNestedManyWithoutAnimalInput = {
    create?: XOR<alimentacionCreateWithoutAnimalInput, alimentacionUncheckedCreateWithoutAnimalInput> | alimentacionCreateWithoutAnimalInput[] | alimentacionUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutAnimalInput | alimentacionCreateOrConnectWithoutAnimalInput[]
    createMany?: alimentacionCreateManyAnimalInputEnvelope
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
  }

  export type pesajesCreateNestedManyWithoutAnimalInput = {
    create?: XOR<pesajesCreateWithoutAnimalInput, pesajesUncheckedCreateWithoutAnimalInput> | pesajesCreateWithoutAnimalInput[] | pesajesUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutAnimalInput | pesajesCreateOrConnectWithoutAnimalInput[]
    createMany?: pesajesCreateManyAnimalInputEnvelope
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
  }

  export type produccion_carneCreateNestedManyWithoutAnimalInput = {
    create?: XOR<produccion_carneCreateWithoutAnimalInput, produccion_carneUncheckedCreateWithoutAnimalInput> | produccion_carneCreateWithoutAnimalInput[] | produccion_carneUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: produccion_carneCreateOrConnectWithoutAnimalInput | produccion_carneCreateOrConnectWithoutAnimalInput[]
    createMany?: produccion_carneCreateManyAnimalInputEnvelope
    connect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
  }

  export type produccion_lecheraCreateNestedManyWithoutAnimalInput = {
    create?: XOR<produccion_lecheraCreateWithoutAnimalInput, produccion_lecheraUncheckedCreateWithoutAnimalInput> | produccion_lecheraCreateWithoutAnimalInput[] | produccion_lecheraUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutAnimalInput | produccion_lecheraCreateOrConnectWithoutAnimalInput[]
    createMany?: produccion_lecheraCreateManyAnimalInputEnvelope
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
  }

  export type evento_montaCreateNestedManyWithoutHembraInput = {
    create?: XOR<evento_montaCreateWithoutHembraInput, evento_montaUncheckedCreateWithoutHembraInput> | evento_montaCreateWithoutHembraInput[] | evento_montaUncheckedCreateWithoutHembraInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutHembraInput | evento_montaCreateOrConnectWithoutHembraInput[]
    createMany?: evento_montaCreateManyHembraInputEnvelope
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
  }

  export type evento_montaCreateNestedManyWithoutMachoInput = {
    create?: XOR<evento_montaCreateWithoutMachoInput, evento_montaUncheckedCreateWithoutMachoInput> | evento_montaCreateWithoutMachoInput[] | evento_montaUncheckedCreateWithoutMachoInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutMachoInput | evento_montaCreateOrConnectWithoutMachoInput[]
    createMany?: evento_montaCreateManyMachoInputEnvelope
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
  }

  export type evento_partoCreateNestedManyWithoutAnimalInput = {
    create?: XOR<evento_partoCreateWithoutAnimalInput, evento_partoUncheckedCreateWithoutAnimalInput> | evento_partoCreateWithoutAnimalInput[] | evento_partoUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutAnimalInput | evento_partoCreateOrConnectWithoutAnimalInput[]
    createMany?: evento_partoCreateManyAnimalInputEnvelope
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
  }

  export type animalesUncheckedCreateNestedManyWithoutMadreInput = {
    create?: XOR<animalesCreateWithoutMadreInput, animalesUncheckedCreateWithoutMadreInput> | animalesCreateWithoutMadreInput[] | animalesUncheckedCreateWithoutMadreInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutMadreInput | animalesCreateOrConnectWithoutMadreInput[]
    createMany?: animalesCreateManyMadreInputEnvelope
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
  }

  export type animalesUncheckedCreateNestedManyWithoutPadreInput = {
    create?: XOR<animalesCreateWithoutPadreInput, animalesUncheckedCreateWithoutPadreInput> | animalesCreateWithoutPadreInput[] | animalesUncheckedCreateWithoutPadreInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutPadreInput | animalesCreateOrConnectWithoutPadreInput[]
    createMany?: animalesCreateManyPadreInputEnvelope
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
  }

  export type evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput = {
    create?: XOR<evento_sanitarioCreateWithoutAnimalInput, evento_sanitarioUncheckedCreateWithoutAnimalInput> | evento_sanitarioCreateWithoutAnimalInput[] | evento_sanitarioUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutAnimalInput | evento_sanitarioCreateOrConnectWithoutAnimalInput[]
    createMany?: evento_sanitarioCreateManyAnimalInputEnvelope
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
  }

  export type alimentacionUncheckedCreateNestedManyWithoutAnimalInput = {
    create?: XOR<alimentacionCreateWithoutAnimalInput, alimentacionUncheckedCreateWithoutAnimalInput> | alimentacionCreateWithoutAnimalInput[] | alimentacionUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutAnimalInput | alimentacionCreateOrConnectWithoutAnimalInput[]
    createMany?: alimentacionCreateManyAnimalInputEnvelope
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
  }

  export type pesajesUncheckedCreateNestedManyWithoutAnimalInput = {
    create?: XOR<pesajesCreateWithoutAnimalInput, pesajesUncheckedCreateWithoutAnimalInput> | pesajesCreateWithoutAnimalInput[] | pesajesUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutAnimalInput | pesajesCreateOrConnectWithoutAnimalInput[]
    createMany?: pesajesCreateManyAnimalInputEnvelope
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
  }

  export type produccion_carneUncheckedCreateNestedManyWithoutAnimalInput = {
    create?: XOR<produccion_carneCreateWithoutAnimalInput, produccion_carneUncheckedCreateWithoutAnimalInput> | produccion_carneCreateWithoutAnimalInput[] | produccion_carneUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: produccion_carneCreateOrConnectWithoutAnimalInput | produccion_carneCreateOrConnectWithoutAnimalInput[]
    createMany?: produccion_carneCreateManyAnimalInputEnvelope
    connect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
  }

  export type produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput = {
    create?: XOR<produccion_lecheraCreateWithoutAnimalInput, produccion_lecheraUncheckedCreateWithoutAnimalInput> | produccion_lecheraCreateWithoutAnimalInput[] | produccion_lecheraUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutAnimalInput | produccion_lecheraCreateOrConnectWithoutAnimalInput[]
    createMany?: produccion_lecheraCreateManyAnimalInputEnvelope
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
  }

  export type evento_montaUncheckedCreateNestedManyWithoutHembraInput = {
    create?: XOR<evento_montaCreateWithoutHembraInput, evento_montaUncheckedCreateWithoutHembraInput> | evento_montaCreateWithoutHembraInput[] | evento_montaUncheckedCreateWithoutHembraInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutHembraInput | evento_montaCreateOrConnectWithoutHembraInput[]
    createMany?: evento_montaCreateManyHembraInputEnvelope
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
  }

  export type evento_montaUncheckedCreateNestedManyWithoutMachoInput = {
    create?: XOR<evento_montaCreateWithoutMachoInput, evento_montaUncheckedCreateWithoutMachoInput> | evento_montaCreateWithoutMachoInput[] | evento_montaUncheckedCreateWithoutMachoInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutMachoInput | evento_montaCreateOrConnectWithoutMachoInput[]
    createMany?: evento_montaCreateManyMachoInputEnvelope
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
  }

  export type evento_partoUncheckedCreateNestedManyWithoutAnimalInput = {
    create?: XOR<evento_partoCreateWithoutAnimalInput, evento_partoUncheckedCreateWithoutAnimalInput> | evento_partoCreateWithoutAnimalInput[] | evento_partoUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutAnimalInput | evento_partoCreateOrConnectWithoutAnimalInput[]
    createMany?: evento_partoCreateManyAnimalInputEnvelope
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type animalesUpdateOneWithoutHijos_madreNestedInput = {
    create?: XOR<animalesCreateWithoutHijos_madreInput, animalesUncheckedCreateWithoutHijos_madreInput>
    connectOrCreate?: animalesCreateOrConnectWithoutHijos_madreInput
    upsert?: animalesUpsertWithoutHijos_madreInput
    disconnect?: animalesWhereInput | boolean
    delete?: animalesWhereInput | boolean
    connect?: animalesWhereUniqueInput
    update?: XOR<XOR<animalesUpdateToOneWithWhereWithoutHijos_madreInput, animalesUpdateWithoutHijos_madreInput>, animalesUncheckedUpdateWithoutHijos_madreInput>
  }

  export type animalesUpdateOneWithoutHijos_padreNestedInput = {
    create?: XOR<animalesCreateWithoutHijos_padreInput, animalesUncheckedCreateWithoutHijos_padreInput>
    connectOrCreate?: animalesCreateOrConnectWithoutHijos_padreInput
    upsert?: animalesUpsertWithoutHijos_padreInput
    disconnect?: animalesWhereInput | boolean
    delete?: animalesWhereInput | boolean
    connect?: animalesWhereUniqueInput
    update?: XOR<XOR<animalesUpdateToOneWithWhereWithoutHijos_padreInput, animalesUpdateWithoutHijos_padreInput>, animalesUncheckedUpdateWithoutHijos_padreInput>
  }

  export type animalesUpdateManyWithoutMadreNestedInput = {
    create?: XOR<animalesCreateWithoutMadreInput, animalesUncheckedCreateWithoutMadreInput> | animalesCreateWithoutMadreInput[] | animalesUncheckedCreateWithoutMadreInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutMadreInput | animalesCreateOrConnectWithoutMadreInput[]
    upsert?: animalesUpsertWithWhereUniqueWithoutMadreInput | animalesUpsertWithWhereUniqueWithoutMadreInput[]
    createMany?: animalesCreateManyMadreInputEnvelope
    set?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    disconnect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    delete?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    update?: animalesUpdateWithWhereUniqueWithoutMadreInput | animalesUpdateWithWhereUniqueWithoutMadreInput[]
    updateMany?: animalesUpdateManyWithWhereWithoutMadreInput | animalesUpdateManyWithWhereWithoutMadreInput[]
    deleteMany?: animalesScalarWhereInput | animalesScalarWhereInput[]
  }

  export type animalesUpdateManyWithoutPadreNestedInput = {
    create?: XOR<animalesCreateWithoutPadreInput, animalesUncheckedCreateWithoutPadreInput> | animalesCreateWithoutPadreInput[] | animalesUncheckedCreateWithoutPadreInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutPadreInput | animalesCreateOrConnectWithoutPadreInput[]
    upsert?: animalesUpsertWithWhereUniqueWithoutPadreInput | animalesUpsertWithWhereUniqueWithoutPadreInput[]
    createMany?: animalesCreateManyPadreInputEnvelope
    set?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    disconnect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    delete?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    update?: animalesUpdateWithWhereUniqueWithoutPadreInput | animalesUpdateWithWhereUniqueWithoutPadreInput[]
    updateMany?: animalesUpdateManyWithWhereWithoutPadreInput | animalesUpdateManyWithWhereWithoutPadreInput[]
    deleteMany?: animalesScalarWhereInput | animalesScalarWhereInput[]
  }

  export type lotesUpdateOneWithoutAnimalesNestedInput = {
    create?: XOR<lotesCreateWithoutAnimalesInput, lotesUncheckedCreateWithoutAnimalesInput>
    connectOrCreate?: lotesCreateOrConnectWithoutAnimalesInput
    upsert?: lotesUpsertWithoutAnimalesInput
    disconnect?: lotesWhereInput | boolean
    delete?: lotesWhereInput | boolean
    connect?: lotesWhereUniqueInput
    update?: XOR<XOR<lotesUpdateToOneWithWhereWithoutAnimalesInput, lotesUpdateWithoutAnimalesInput>, lotesUncheckedUpdateWithoutAnimalesInput>
  }

  export type razasUpdateOneRequiredWithoutAnimalesNestedInput = {
    create?: XOR<razasCreateWithoutAnimalesInput, razasUncheckedCreateWithoutAnimalesInput>
    connectOrCreate?: razasCreateOrConnectWithoutAnimalesInput
    upsert?: razasUpsertWithoutAnimalesInput
    connect?: razasWhereUniqueInput
    update?: XOR<XOR<razasUpdateToOneWithWhereWithoutAnimalesInput, razasUpdateWithoutAnimalesInput>, razasUncheckedUpdateWithoutAnimalesInput>
  }

  export type evento_sanitarioUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<evento_sanitarioCreateWithoutAnimalInput, evento_sanitarioUncheckedCreateWithoutAnimalInput> | evento_sanitarioCreateWithoutAnimalInput[] | evento_sanitarioUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutAnimalInput | evento_sanitarioCreateOrConnectWithoutAnimalInput[]
    upsert?: evento_sanitarioUpsertWithWhereUniqueWithoutAnimalInput | evento_sanitarioUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: evento_sanitarioCreateManyAnimalInputEnvelope
    set?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    disconnect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    delete?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    update?: evento_sanitarioUpdateWithWhereUniqueWithoutAnimalInput | evento_sanitarioUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: evento_sanitarioUpdateManyWithWhereWithoutAnimalInput | evento_sanitarioUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: evento_sanitarioScalarWhereInput | evento_sanitarioScalarWhereInput[]
  }

  export type alimentacionUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<alimentacionCreateWithoutAnimalInput, alimentacionUncheckedCreateWithoutAnimalInput> | alimentacionCreateWithoutAnimalInput[] | alimentacionUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutAnimalInput | alimentacionCreateOrConnectWithoutAnimalInput[]
    upsert?: alimentacionUpsertWithWhereUniqueWithoutAnimalInput | alimentacionUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: alimentacionCreateManyAnimalInputEnvelope
    set?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    disconnect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    delete?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    update?: alimentacionUpdateWithWhereUniqueWithoutAnimalInput | alimentacionUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: alimentacionUpdateManyWithWhereWithoutAnimalInput | alimentacionUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: alimentacionScalarWhereInput | alimentacionScalarWhereInput[]
  }

  export type pesajesUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<pesajesCreateWithoutAnimalInput, pesajesUncheckedCreateWithoutAnimalInput> | pesajesCreateWithoutAnimalInput[] | pesajesUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutAnimalInput | pesajesCreateOrConnectWithoutAnimalInput[]
    upsert?: pesajesUpsertWithWhereUniqueWithoutAnimalInput | pesajesUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: pesajesCreateManyAnimalInputEnvelope
    set?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    disconnect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    delete?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    update?: pesajesUpdateWithWhereUniqueWithoutAnimalInput | pesajesUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: pesajesUpdateManyWithWhereWithoutAnimalInput | pesajesUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: pesajesScalarWhereInput | pesajesScalarWhereInput[]
  }

  export type produccion_carneUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<produccion_carneCreateWithoutAnimalInput, produccion_carneUncheckedCreateWithoutAnimalInput> | produccion_carneCreateWithoutAnimalInput[] | produccion_carneUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: produccion_carneCreateOrConnectWithoutAnimalInput | produccion_carneCreateOrConnectWithoutAnimalInput[]
    upsert?: produccion_carneUpsertWithWhereUniqueWithoutAnimalInput | produccion_carneUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: produccion_carneCreateManyAnimalInputEnvelope
    set?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    disconnect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    delete?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    connect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    update?: produccion_carneUpdateWithWhereUniqueWithoutAnimalInput | produccion_carneUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: produccion_carneUpdateManyWithWhereWithoutAnimalInput | produccion_carneUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: produccion_carneScalarWhereInput | produccion_carneScalarWhereInput[]
  }

  export type produccion_lecheraUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<produccion_lecheraCreateWithoutAnimalInput, produccion_lecheraUncheckedCreateWithoutAnimalInput> | produccion_lecheraCreateWithoutAnimalInput[] | produccion_lecheraUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutAnimalInput | produccion_lecheraCreateOrConnectWithoutAnimalInput[]
    upsert?: produccion_lecheraUpsertWithWhereUniqueWithoutAnimalInput | produccion_lecheraUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: produccion_lecheraCreateManyAnimalInputEnvelope
    set?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    disconnect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    delete?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    update?: produccion_lecheraUpdateWithWhereUniqueWithoutAnimalInput | produccion_lecheraUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: produccion_lecheraUpdateManyWithWhereWithoutAnimalInput | produccion_lecheraUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: produccion_lecheraScalarWhereInput | produccion_lecheraScalarWhereInput[]
  }

  export type evento_montaUpdateManyWithoutHembraNestedInput = {
    create?: XOR<evento_montaCreateWithoutHembraInput, evento_montaUncheckedCreateWithoutHembraInput> | evento_montaCreateWithoutHembraInput[] | evento_montaUncheckedCreateWithoutHembraInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutHembraInput | evento_montaCreateOrConnectWithoutHembraInput[]
    upsert?: evento_montaUpsertWithWhereUniqueWithoutHembraInput | evento_montaUpsertWithWhereUniqueWithoutHembraInput[]
    createMany?: evento_montaCreateManyHembraInputEnvelope
    set?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    disconnect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    delete?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    update?: evento_montaUpdateWithWhereUniqueWithoutHembraInput | evento_montaUpdateWithWhereUniqueWithoutHembraInput[]
    updateMany?: evento_montaUpdateManyWithWhereWithoutHembraInput | evento_montaUpdateManyWithWhereWithoutHembraInput[]
    deleteMany?: evento_montaScalarWhereInput | evento_montaScalarWhereInput[]
  }

  export type evento_montaUpdateManyWithoutMachoNestedInput = {
    create?: XOR<evento_montaCreateWithoutMachoInput, evento_montaUncheckedCreateWithoutMachoInput> | evento_montaCreateWithoutMachoInput[] | evento_montaUncheckedCreateWithoutMachoInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutMachoInput | evento_montaCreateOrConnectWithoutMachoInput[]
    upsert?: evento_montaUpsertWithWhereUniqueWithoutMachoInput | evento_montaUpsertWithWhereUniqueWithoutMachoInput[]
    createMany?: evento_montaCreateManyMachoInputEnvelope
    set?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    disconnect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    delete?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    update?: evento_montaUpdateWithWhereUniqueWithoutMachoInput | evento_montaUpdateWithWhereUniqueWithoutMachoInput[]
    updateMany?: evento_montaUpdateManyWithWhereWithoutMachoInput | evento_montaUpdateManyWithWhereWithoutMachoInput[]
    deleteMany?: evento_montaScalarWhereInput | evento_montaScalarWhereInput[]
  }

  export type evento_partoUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<evento_partoCreateWithoutAnimalInput, evento_partoUncheckedCreateWithoutAnimalInput> | evento_partoCreateWithoutAnimalInput[] | evento_partoUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutAnimalInput | evento_partoCreateOrConnectWithoutAnimalInput[]
    upsert?: evento_partoUpsertWithWhereUniqueWithoutAnimalInput | evento_partoUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: evento_partoCreateManyAnimalInputEnvelope
    set?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    disconnect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    delete?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    update?: evento_partoUpdateWithWhereUniqueWithoutAnimalInput | evento_partoUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: evento_partoUpdateManyWithWhereWithoutAnimalInput | evento_partoUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: evento_partoScalarWhereInput | evento_partoScalarWhereInput[]
  }

  export type animalesUncheckedUpdateManyWithoutMadreNestedInput = {
    create?: XOR<animalesCreateWithoutMadreInput, animalesUncheckedCreateWithoutMadreInput> | animalesCreateWithoutMadreInput[] | animalesUncheckedCreateWithoutMadreInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutMadreInput | animalesCreateOrConnectWithoutMadreInput[]
    upsert?: animalesUpsertWithWhereUniqueWithoutMadreInput | animalesUpsertWithWhereUniqueWithoutMadreInput[]
    createMany?: animalesCreateManyMadreInputEnvelope
    set?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    disconnect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    delete?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    update?: animalesUpdateWithWhereUniqueWithoutMadreInput | animalesUpdateWithWhereUniqueWithoutMadreInput[]
    updateMany?: animalesUpdateManyWithWhereWithoutMadreInput | animalesUpdateManyWithWhereWithoutMadreInput[]
    deleteMany?: animalesScalarWhereInput | animalesScalarWhereInput[]
  }

  export type animalesUncheckedUpdateManyWithoutPadreNestedInput = {
    create?: XOR<animalesCreateWithoutPadreInput, animalesUncheckedCreateWithoutPadreInput> | animalesCreateWithoutPadreInput[] | animalesUncheckedCreateWithoutPadreInput[]
    connectOrCreate?: animalesCreateOrConnectWithoutPadreInput | animalesCreateOrConnectWithoutPadreInput[]
    upsert?: animalesUpsertWithWhereUniqueWithoutPadreInput | animalesUpsertWithWhereUniqueWithoutPadreInput[]
    createMany?: animalesCreateManyPadreInputEnvelope
    set?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    disconnect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    delete?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    connect?: animalesWhereUniqueInput | animalesWhereUniqueInput[]
    update?: animalesUpdateWithWhereUniqueWithoutPadreInput | animalesUpdateWithWhereUniqueWithoutPadreInput[]
    updateMany?: animalesUpdateManyWithWhereWithoutPadreInput | animalesUpdateManyWithWhereWithoutPadreInput[]
    deleteMany?: animalesScalarWhereInput | animalesScalarWhereInput[]
  }

  export type evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<evento_sanitarioCreateWithoutAnimalInput, evento_sanitarioUncheckedCreateWithoutAnimalInput> | evento_sanitarioCreateWithoutAnimalInput[] | evento_sanitarioUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutAnimalInput | evento_sanitarioCreateOrConnectWithoutAnimalInput[]
    upsert?: evento_sanitarioUpsertWithWhereUniqueWithoutAnimalInput | evento_sanitarioUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: evento_sanitarioCreateManyAnimalInputEnvelope
    set?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    disconnect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    delete?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    connect?: evento_sanitarioWhereUniqueInput | evento_sanitarioWhereUniqueInput[]
    update?: evento_sanitarioUpdateWithWhereUniqueWithoutAnimalInput | evento_sanitarioUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: evento_sanitarioUpdateManyWithWhereWithoutAnimalInput | evento_sanitarioUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: evento_sanitarioScalarWhereInput | evento_sanitarioScalarWhereInput[]
  }

  export type alimentacionUncheckedUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<alimentacionCreateWithoutAnimalInput, alimentacionUncheckedCreateWithoutAnimalInput> | alimentacionCreateWithoutAnimalInput[] | alimentacionUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: alimentacionCreateOrConnectWithoutAnimalInput | alimentacionCreateOrConnectWithoutAnimalInput[]
    upsert?: alimentacionUpsertWithWhereUniqueWithoutAnimalInput | alimentacionUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: alimentacionCreateManyAnimalInputEnvelope
    set?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    disconnect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    delete?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    connect?: alimentacionWhereUniqueInput | alimentacionWhereUniqueInput[]
    update?: alimentacionUpdateWithWhereUniqueWithoutAnimalInput | alimentacionUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: alimentacionUpdateManyWithWhereWithoutAnimalInput | alimentacionUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: alimentacionScalarWhereInput | alimentacionScalarWhereInput[]
  }

  export type pesajesUncheckedUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<pesajesCreateWithoutAnimalInput, pesajesUncheckedCreateWithoutAnimalInput> | pesajesCreateWithoutAnimalInput[] | pesajesUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: pesajesCreateOrConnectWithoutAnimalInput | pesajesCreateOrConnectWithoutAnimalInput[]
    upsert?: pesajesUpsertWithWhereUniqueWithoutAnimalInput | pesajesUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: pesajesCreateManyAnimalInputEnvelope
    set?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    disconnect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    delete?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    connect?: pesajesWhereUniqueInput | pesajesWhereUniqueInput[]
    update?: pesajesUpdateWithWhereUniqueWithoutAnimalInput | pesajesUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: pesajesUpdateManyWithWhereWithoutAnimalInput | pesajesUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: pesajesScalarWhereInput | pesajesScalarWhereInput[]
  }

  export type produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<produccion_carneCreateWithoutAnimalInput, produccion_carneUncheckedCreateWithoutAnimalInput> | produccion_carneCreateWithoutAnimalInput[] | produccion_carneUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: produccion_carneCreateOrConnectWithoutAnimalInput | produccion_carneCreateOrConnectWithoutAnimalInput[]
    upsert?: produccion_carneUpsertWithWhereUniqueWithoutAnimalInput | produccion_carneUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: produccion_carneCreateManyAnimalInputEnvelope
    set?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    disconnect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    delete?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    connect?: produccion_carneWhereUniqueInput | produccion_carneWhereUniqueInput[]
    update?: produccion_carneUpdateWithWhereUniqueWithoutAnimalInput | produccion_carneUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: produccion_carneUpdateManyWithWhereWithoutAnimalInput | produccion_carneUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: produccion_carneScalarWhereInput | produccion_carneScalarWhereInput[]
  }

  export type produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<produccion_lecheraCreateWithoutAnimalInput, produccion_lecheraUncheckedCreateWithoutAnimalInput> | produccion_lecheraCreateWithoutAnimalInput[] | produccion_lecheraUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: produccion_lecheraCreateOrConnectWithoutAnimalInput | produccion_lecheraCreateOrConnectWithoutAnimalInput[]
    upsert?: produccion_lecheraUpsertWithWhereUniqueWithoutAnimalInput | produccion_lecheraUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: produccion_lecheraCreateManyAnimalInputEnvelope
    set?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    disconnect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    delete?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    connect?: produccion_lecheraWhereUniqueInput | produccion_lecheraWhereUniqueInput[]
    update?: produccion_lecheraUpdateWithWhereUniqueWithoutAnimalInput | produccion_lecheraUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: produccion_lecheraUpdateManyWithWhereWithoutAnimalInput | produccion_lecheraUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: produccion_lecheraScalarWhereInput | produccion_lecheraScalarWhereInput[]
  }

  export type evento_montaUncheckedUpdateManyWithoutHembraNestedInput = {
    create?: XOR<evento_montaCreateWithoutHembraInput, evento_montaUncheckedCreateWithoutHembraInput> | evento_montaCreateWithoutHembraInput[] | evento_montaUncheckedCreateWithoutHembraInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutHembraInput | evento_montaCreateOrConnectWithoutHembraInput[]
    upsert?: evento_montaUpsertWithWhereUniqueWithoutHembraInput | evento_montaUpsertWithWhereUniqueWithoutHembraInput[]
    createMany?: evento_montaCreateManyHembraInputEnvelope
    set?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    disconnect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    delete?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    update?: evento_montaUpdateWithWhereUniqueWithoutHembraInput | evento_montaUpdateWithWhereUniqueWithoutHembraInput[]
    updateMany?: evento_montaUpdateManyWithWhereWithoutHembraInput | evento_montaUpdateManyWithWhereWithoutHembraInput[]
    deleteMany?: evento_montaScalarWhereInput | evento_montaScalarWhereInput[]
  }

  export type evento_montaUncheckedUpdateManyWithoutMachoNestedInput = {
    create?: XOR<evento_montaCreateWithoutMachoInput, evento_montaUncheckedCreateWithoutMachoInput> | evento_montaCreateWithoutMachoInput[] | evento_montaUncheckedCreateWithoutMachoInput[]
    connectOrCreate?: evento_montaCreateOrConnectWithoutMachoInput | evento_montaCreateOrConnectWithoutMachoInput[]
    upsert?: evento_montaUpsertWithWhereUniqueWithoutMachoInput | evento_montaUpsertWithWhereUniqueWithoutMachoInput[]
    createMany?: evento_montaCreateManyMachoInputEnvelope
    set?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    disconnect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    delete?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    connect?: evento_montaWhereUniqueInput | evento_montaWhereUniqueInput[]
    update?: evento_montaUpdateWithWhereUniqueWithoutMachoInput | evento_montaUpdateWithWhereUniqueWithoutMachoInput[]
    updateMany?: evento_montaUpdateManyWithWhereWithoutMachoInput | evento_montaUpdateManyWithWhereWithoutMachoInput[]
    deleteMany?: evento_montaScalarWhereInput | evento_montaScalarWhereInput[]
  }

  export type evento_partoUncheckedUpdateManyWithoutAnimalNestedInput = {
    create?: XOR<evento_partoCreateWithoutAnimalInput, evento_partoUncheckedCreateWithoutAnimalInput> | evento_partoCreateWithoutAnimalInput[] | evento_partoUncheckedCreateWithoutAnimalInput[]
    connectOrCreate?: evento_partoCreateOrConnectWithoutAnimalInput | evento_partoCreateOrConnectWithoutAnimalInput[]
    upsert?: evento_partoUpsertWithWhereUniqueWithoutAnimalInput | evento_partoUpsertWithWhereUniqueWithoutAnimalInput[]
    createMany?: evento_partoCreateManyAnimalInputEnvelope
    set?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    disconnect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    delete?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    connect?: evento_partoWhereUniqueInput | evento_partoWhereUniqueInput[]
    update?: evento_partoUpdateWithWhereUniqueWithoutAnimalInput | evento_partoUpdateWithWhereUniqueWithoutAnimalInput[]
    updateMany?: evento_partoUpdateManyWithWhereWithoutAnimalInput | evento_partoUpdateManyWithWhereWithoutAnimalInput[]
    deleteMany?: evento_partoScalarWhereInput | evento_partoScalarWhereInput[]
  }

  export type comprasCreateNestedManyWithoutProveedorInput = {
    create?: XOR<comprasCreateWithoutProveedorInput, comprasUncheckedCreateWithoutProveedorInput> | comprasCreateWithoutProveedorInput[] | comprasUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: comprasCreateOrConnectWithoutProveedorInput | comprasCreateOrConnectWithoutProveedorInput[]
    createMany?: comprasCreateManyProveedorInputEnvelope
    connect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
  }

  export type comprasUncheckedCreateNestedManyWithoutProveedorInput = {
    create?: XOR<comprasCreateWithoutProveedorInput, comprasUncheckedCreateWithoutProveedorInput> | comprasCreateWithoutProveedorInput[] | comprasUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: comprasCreateOrConnectWithoutProveedorInput | comprasCreateOrConnectWithoutProveedorInput[]
    createMany?: comprasCreateManyProveedorInputEnvelope
    connect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
  }

  export type comprasUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<comprasCreateWithoutProveedorInput, comprasUncheckedCreateWithoutProveedorInput> | comprasCreateWithoutProveedorInput[] | comprasUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: comprasCreateOrConnectWithoutProveedorInput | comprasCreateOrConnectWithoutProveedorInput[]
    upsert?: comprasUpsertWithWhereUniqueWithoutProveedorInput | comprasUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: comprasCreateManyProveedorInputEnvelope
    set?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    disconnect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    delete?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    connect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    update?: comprasUpdateWithWhereUniqueWithoutProveedorInput | comprasUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: comprasUpdateManyWithWhereWithoutProveedorInput | comprasUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: comprasScalarWhereInput | comprasScalarWhereInput[]
  }

  export type comprasUncheckedUpdateManyWithoutProveedorNestedInput = {
    create?: XOR<comprasCreateWithoutProveedorInput, comprasUncheckedCreateWithoutProveedorInput> | comprasCreateWithoutProveedorInput[] | comprasUncheckedCreateWithoutProveedorInput[]
    connectOrCreate?: comprasCreateOrConnectWithoutProveedorInput | comprasCreateOrConnectWithoutProveedorInput[]
    upsert?: comprasUpsertWithWhereUniqueWithoutProveedorInput | comprasUpsertWithWhereUniqueWithoutProveedorInput[]
    createMany?: comprasCreateManyProveedorInputEnvelope
    set?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    disconnect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    delete?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    connect?: comprasWhereUniqueInput | comprasWhereUniqueInput[]
    update?: comprasUpdateWithWhereUniqueWithoutProveedorInput | comprasUpdateWithWhereUniqueWithoutProveedorInput[]
    updateMany?: comprasUpdateManyWithWhereWithoutProveedorInput | comprasUpdateManyWithWhereWithoutProveedorInput[]
    deleteMany?: comprasScalarWhereInput | comprasScalarWhereInput[]
  }

  export type usuariosCreateNestedOneWithoutCompras_realizadasInput = {
    create?: XOR<usuariosCreateWithoutCompras_realizadasInput, usuariosUncheckedCreateWithoutCompras_realizadasInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutCompras_realizadasInput
    connect?: usuariosWhereUniqueInput
  }

  export type proveedoresCreateNestedOneWithoutComprasInput = {
    create?: XOR<proveedoresCreateWithoutComprasInput, proveedoresUncheckedCreateWithoutComprasInput>
    connectOrCreate?: proveedoresCreateOrConnectWithoutComprasInput
    connect?: proveedoresWhereUniqueInput
  }

  export type detalle_comprasCreateNestedManyWithoutCompraInput = {
    create?: XOR<detalle_comprasCreateWithoutCompraInput, detalle_comprasUncheckedCreateWithoutCompraInput> | detalle_comprasCreateWithoutCompraInput[] | detalle_comprasUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: detalle_comprasCreateOrConnectWithoutCompraInput | detalle_comprasCreateOrConnectWithoutCompraInput[]
    createMany?: detalle_comprasCreateManyCompraInputEnvelope
    connect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
  }

  export type detalle_comprasUncheckedCreateNestedManyWithoutCompraInput = {
    create?: XOR<detalle_comprasCreateWithoutCompraInput, detalle_comprasUncheckedCreateWithoutCompraInput> | detalle_comprasCreateWithoutCompraInput[] | detalle_comprasUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: detalle_comprasCreateOrConnectWithoutCompraInput | detalle_comprasCreateOrConnectWithoutCompraInput[]
    createMany?: detalle_comprasCreateManyCompraInputEnvelope
    connect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
  }

  export type usuariosUpdateOneRequiredWithoutCompras_realizadasNestedInput = {
    create?: XOR<usuariosCreateWithoutCompras_realizadasInput, usuariosUncheckedCreateWithoutCompras_realizadasInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutCompras_realizadasInput
    upsert?: usuariosUpsertWithoutCompras_realizadasInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutCompras_realizadasInput, usuariosUpdateWithoutCompras_realizadasInput>, usuariosUncheckedUpdateWithoutCompras_realizadasInput>
  }

  export type proveedoresUpdateOneRequiredWithoutComprasNestedInput = {
    create?: XOR<proveedoresCreateWithoutComprasInput, proveedoresUncheckedCreateWithoutComprasInput>
    connectOrCreate?: proveedoresCreateOrConnectWithoutComprasInput
    upsert?: proveedoresUpsertWithoutComprasInput
    connect?: proveedoresWhereUniqueInput
    update?: XOR<XOR<proveedoresUpdateToOneWithWhereWithoutComprasInput, proveedoresUpdateWithoutComprasInput>, proveedoresUncheckedUpdateWithoutComprasInput>
  }

  export type detalle_comprasUpdateManyWithoutCompraNestedInput = {
    create?: XOR<detalle_comprasCreateWithoutCompraInput, detalle_comprasUncheckedCreateWithoutCompraInput> | detalle_comprasCreateWithoutCompraInput[] | detalle_comprasUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: detalle_comprasCreateOrConnectWithoutCompraInput | detalle_comprasCreateOrConnectWithoutCompraInput[]
    upsert?: detalle_comprasUpsertWithWhereUniqueWithoutCompraInput | detalle_comprasUpsertWithWhereUniqueWithoutCompraInput[]
    createMany?: detalle_comprasCreateManyCompraInputEnvelope
    set?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    disconnect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    delete?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    connect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    update?: detalle_comprasUpdateWithWhereUniqueWithoutCompraInput | detalle_comprasUpdateWithWhereUniqueWithoutCompraInput[]
    updateMany?: detalle_comprasUpdateManyWithWhereWithoutCompraInput | detalle_comprasUpdateManyWithWhereWithoutCompraInput[]
    deleteMany?: detalle_comprasScalarWhereInput | detalle_comprasScalarWhereInput[]
  }

  export type detalle_comprasUncheckedUpdateManyWithoutCompraNestedInput = {
    create?: XOR<detalle_comprasCreateWithoutCompraInput, detalle_comprasUncheckedCreateWithoutCompraInput> | detalle_comprasCreateWithoutCompraInput[] | detalle_comprasUncheckedCreateWithoutCompraInput[]
    connectOrCreate?: detalle_comprasCreateOrConnectWithoutCompraInput | detalle_comprasCreateOrConnectWithoutCompraInput[]
    upsert?: detalle_comprasUpsertWithWhereUniqueWithoutCompraInput | detalle_comprasUpsertWithWhereUniqueWithoutCompraInput[]
    createMany?: detalle_comprasCreateManyCompraInputEnvelope
    set?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    disconnect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    delete?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    connect?: detalle_comprasWhereUniqueInput | detalle_comprasWhereUniqueInput[]
    update?: detalle_comprasUpdateWithWhereUniqueWithoutCompraInput | detalle_comprasUpdateWithWhereUniqueWithoutCompraInput[]
    updateMany?: detalle_comprasUpdateManyWithWhereWithoutCompraInput | detalle_comprasUpdateManyWithWhereWithoutCompraInput[]
    deleteMany?: detalle_comprasScalarWhereInput | detalle_comprasScalarWhereInput[]
  }

  export type comprasCreateNestedOneWithoutDetalle_comprasInput = {
    create?: XOR<comprasCreateWithoutDetalle_comprasInput, comprasUncheckedCreateWithoutDetalle_comprasInput>
    connectOrCreate?: comprasCreateOrConnectWithoutDetalle_comprasInput
    connect?: comprasWhereUniqueInput
  }

  export type insumosCreateNestedOneWithoutDetalle_comprasInput = {
    create?: XOR<insumosCreateWithoutDetalle_comprasInput, insumosUncheckedCreateWithoutDetalle_comprasInput>
    connectOrCreate?: insumosCreateOrConnectWithoutDetalle_comprasInput
    connect?: insumosWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type comprasUpdateOneRequiredWithoutDetalle_comprasNestedInput = {
    create?: XOR<comprasCreateWithoutDetalle_comprasInput, comprasUncheckedCreateWithoutDetalle_comprasInput>
    connectOrCreate?: comprasCreateOrConnectWithoutDetalle_comprasInput
    upsert?: comprasUpsertWithoutDetalle_comprasInput
    connect?: comprasWhereUniqueInput
    update?: XOR<XOR<comprasUpdateToOneWithWhereWithoutDetalle_comprasInput, comprasUpdateWithoutDetalle_comprasInput>, comprasUncheckedUpdateWithoutDetalle_comprasInput>
  }

  export type insumosUpdateOneRequiredWithoutDetalle_comprasNestedInput = {
    create?: XOR<insumosCreateWithoutDetalle_comprasInput, insumosUncheckedCreateWithoutDetalle_comprasInput>
    connectOrCreate?: insumosCreateOrConnectWithoutDetalle_comprasInput
    upsert?: insumosUpsertWithoutDetalle_comprasInput
    connect?: insumosWhereUniqueInput
    update?: XOR<XOR<insumosUpdateToOneWithWhereWithoutDetalle_comprasInput, insumosUpdateWithoutDetalle_comprasInput>, insumosUncheckedUpdateWithoutDetalle_comprasInput>
  }

  export type animalesCreateNestedOneWithoutEventos_sanitariosInput = {
    create?: XOR<animalesCreateWithoutEventos_sanitariosInput, animalesUncheckedCreateWithoutEventos_sanitariosInput>
    connectOrCreate?: animalesCreateOrConnectWithoutEventos_sanitariosInput
    connect?: animalesWhereUniqueInput
  }

  export type tipo_eventoCreateNestedOneWithoutEventos_sanitariosInput = {
    create?: XOR<tipo_eventoCreateWithoutEventos_sanitariosInput, tipo_eventoUncheckedCreateWithoutEventos_sanitariosInput>
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutEventos_sanitariosInput
    connect?: tipo_eventoWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutEventos_veterinarioInput = {
    create?: XOR<usuariosCreateWithoutEventos_veterinarioInput, usuariosUncheckedCreateWithoutEventos_veterinarioInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutEventos_veterinarioInput
    connect?: usuariosWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutEventos_operadorInput = {
    create?: XOR<usuariosCreateWithoutEventos_operadorInput, usuariosUncheckedCreateWithoutEventos_operadorInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutEventos_operadorInput
    connect?: usuariosWhereUniqueInput
  }

  export type evento_insumoCreateNestedManyWithoutEvento_sanitarioInput = {
    create?: XOR<evento_insumoCreateWithoutEvento_sanitarioInput, evento_insumoUncheckedCreateWithoutEvento_sanitarioInput> | evento_insumoCreateWithoutEvento_sanitarioInput[] | evento_insumoUncheckedCreateWithoutEvento_sanitarioInput[]
    connectOrCreate?: evento_insumoCreateOrConnectWithoutEvento_sanitarioInput | evento_insumoCreateOrConnectWithoutEvento_sanitarioInput[]
    createMany?: evento_insumoCreateManyEvento_sanitarioInputEnvelope
    connect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
  }

  export type evento_insumoUncheckedCreateNestedManyWithoutEvento_sanitarioInput = {
    create?: XOR<evento_insumoCreateWithoutEvento_sanitarioInput, evento_insumoUncheckedCreateWithoutEvento_sanitarioInput> | evento_insumoCreateWithoutEvento_sanitarioInput[] | evento_insumoUncheckedCreateWithoutEvento_sanitarioInput[]
    connectOrCreate?: evento_insumoCreateOrConnectWithoutEvento_sanitarioInput | evento_insumoCreateOrConnectWithoutEvento_sanitarioInput[]
    createMany?: evento_insumoCreateManyEvento_sanitarioInputEnvelope
    connect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
  }

  export type animalesUpdateOneRequiredWithoutEventos_sanitariosNestedInput = {
    create?: XOR<animalesCreateWithoutEventos_sanitariosInput, animalesUncheckedCreateWithoutEventos_sanitariosInput>
    connectOrCreate?: animalesCreateOrConnectWithoutEventos_sanitariosInput
    upsert?: animalesUpsertWithoutEventos_sanitariosInput
    connect?: animalesWhereUniqueInput
    update?: XOR<XOR<animalesUpdateToOneWithWhereWithoutEventos_sanitariosInput, animalesUpdateWithoutEventos_sanitariosInput>, animalesUncheckedUpdateWithoutEventos_sanitariosInput>
  }

  export type tipo_eventoUpdateOneRequiredWithoutEventos_sanitariosNestedInput = {
    create?: XOR<tipo_eventoCreateWithoutEventos_sanitariosInput, tipo_eventoUncheckedCreateWithoutEventos_sanitariosInput>
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutEventos_sanitariosInput
    upsert?: tipo_eventoUpsertWithoutEventos_sanitariosInput
    connect?: tipo_eventoWhereUniqueInput
    update?: XOR<XOR<tipo_eventoUpdateToOneWithWhereWithoutEventos_sanitariosInput, tipo_eventoUpdateWithoutEventos_sanitariosInput>, tipo_eventoUncheckedUpdateWithoutEventos_sanitariosInput>
  }

  export type usuariosUpdateOneRequiredWithoutEventos_veterinarioNestedInput = {
    create?: XOR<usuariosCreateWithoutEventos_veterinarioInput, usuariosUncheckedCreateWithoutEventos_veterinarioInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutEventos_veterinarioInput
    upsert?: usuariosUpsertWithoutEventos_veterinarioInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutEventos_veterinarioInput, usuariosUpdateWithoutEventos_veterinarioInput>, usuariosUncheckedUpdateWithoutEventos_veterinarioInput>
  }

  export type usuariosUpdateOneRequiredWithoutEventos_operadorNestedInput = {
    create?: XOR<usuariosCreateWithoutEventos_operadorInput, usuariosUncheckedCreateWithoutEventos_operadorInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutEventos_operadorInput
    upsert?: usuariosUpsertWithoutEventos_operadorInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutEventos_operadorInput, usuariosUpdateWithoutEventos_operadorInput>, usuariosUncheckedUpdateWithoutEventos_operadorInput>
  }

  export type evento_insumoUpdateManyWithoutEvento_sanitarioNestedInput = {
    create?: XOR<evento_insumoCreateWithoutEvento_sanitarioInput, evento_insumoUncheckedCreateWithoutEvento_sanitarioInput> | evento_insumoCreateWithoutEvento_sanitarioInput[] | evento_insumoUncheckedCreateWithoutEvento_sanitarioInput[]
    connectOrCreate?: evento_insumoCreateOrConnectWithoutEvento_sanitarioInput | evento_insumoCreateOrConnectWithoutEvento_sanitarioInput[]
    upsert?: evento_insumoUpsertWithWhereUniqueWithoutEvento_sanitarioInput | evento_insumoUpsertWithWhereUniqueWithoutEvento_sanitarioInput[]
    createMany?: evento_insumoCreateManyEvento_sanitarioInputEnvelope
    set?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    disconnect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    delete?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    connect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    update?: evento_insumoUpdateWithWhereUniqueWithoutEvento_sanitarioInput | evento_insumoUpdateWithWhereUniqueWithoutEvento_sanitarioInput[]
    updateMany?: evento_insumoUpdateManyWithWhereWithoutEvento_sanitarioInput | evento_insumoUpdateManyWithWhereWithoutEvento_sanitarioInput[]
    deleteMany?: evento_insumoScalarWhereInput | evento_insumoScalarWhereInput[]
  }

  export type evento_insumoUncheckedUpdateManyWithoutEvento_sanitarioNestedInput = {
    create?: XOR<evento_insumoCreateWithoutEvento_sanitarioInput, evento_insumoUncheckedCreateWithoutEvento_sanitarioInput> | evento_insumoCreateWithoutEvento_sanitarioInput[] | evento_insumoUncheckedCreateWithoutEvento_sanitarioInput[]
    connectOrCreate?: evento_insumoCreateOrConnectWithoutEvento_sanitarioInput | evento_insumoCreateOrConnectWithoutEvento_sanitarioInput[]
    upsert?: evento_insumoUpsertWithWhereUniqueWithoutEvento_sanitarioInput | evento_insumoUpsertWithWhereUniqueWithoutEvento_sanitarioInput[]
    createMany?: evento_insumoCreateManyEvento_sanitarioInputEnvelope
    set?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    disconnect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    delete?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    connect?: evento_insumoWhereUniqueInput | evento_insumoWhereUniqueInput[]
    update?: evento_insumoUpdateWithWhereUniqueWithoutEvento_sanitarioInput | evento_insumoUpdateWithWhereUniqueWithoutEvento_sanitarioInput[]
    updateMany?: evento_insumoUpdateManyWithWhereWithoutEvento_sanitarioInput | evento_insumoUpdateManyWithWhereWithoutEvento_sanitarioInput[]
    deleteMany?: evento_insumoScalarWhereInput | evento_insumoScalarWhereInput[]
  }

  export type evento_sanitarioCreateNestedOneWithoutInsumos_usadosInput = {
    create?: XOR<evento_sanitarioCreateWithoutInsumos_usadosInput, evento_sanitarioUncheckedCreateWithoutInsumos_usadosInput>
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutInsumos_usadosInput
    connect?: evento_sanitarioWhereUniqueInput
  }

  export type insumosCreateNestedOneWithoutEvento_insumosInput = {
    create?: XOR<insumosCreateWithoutEvento_insumosInput, insumosUncheckedCreateWithoutEvento_insumosInput>
    connectOrCreate?: insumosCreateOrConnectWithoutEvento_insumosInput
    connect?: insumosWhereUniqueInput
  }

  export type evento_sanitarioUpdateOneRequiredWithoutInsumos_usadosNestedInput = {
    create?: XOR<evento_sanitarioCreateWithoutInsumos_usadosInput, evento_sanitarioUncheckedCreateWithoutInsumos_usadosInput>
    connectOrCreate?: evento_sanitarioCreateOrConnectWithoutInsumos_usadosInput
    upsert?: evento_sanitarioUpsertWithoutInsumos_usadosInput
    connect?: evento_sanitarioWhereUniqueInput
    update?: XOR<XOR<evento_sanitarioUpdateToOneWithWhereWithoutInsumos_usadosInput, evento_sanitarioUpdateWithoutInsumos_usadosInput>, evento_sanitarioUncheckedUpdateWithoutInsumos_usadosInput>
  }

  export type insumosUpdateOneRequiredWithoutEvento_insumosNestedInput = {
    create?: XOR<insumosCreateWithoutEvento_insumosInput, insumosUncheckedCreateWithoutEvento_insumosInput>
    connectOrCreate?: insumosCreateOrConnectWithoutEvento_insumosInput
    upsert?: insumosUpsertWithoutEvento_insumosInput
    connect?: insumosWhereUniqueInput
    update?: XOR<XOR<insumosUpdateToOneWithWhereWithoutEvento_insumosInput, insumosUpdateWithoutEvento_insumosInput>, insumosUncheckedUpdateWithoutEvento_insumosInput>
  }

  export type insumosCreateNestedOneWithoutAlimentacionesInput = {
    create?: XOR<insumosCreateWithoutAlimentacionesInput, insumosUncheckedCreateWithoutAlimentacionesInput>
    connectOrCreate?: insumosCreateOrConnectWithoutAlimentacionesInput
    connect?: insumosWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutAlimentacionesInput = {
    create?: XOR<usuariosCreateWithoutAlimentacionesInput, usuariosUncheckedCreateWithoutAlimentacionesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutAlimentacionesInput
    connect?: usuariosWhereUniqueInput
  }

  export type animalesCreateNestedOneWithoutAlimentacionesInput = {
    create?: XOR<animalesCreateWithoutAlimentacionesInput, animalesUncheckedCreateWithoutAlimentacionesInput>
    connectOrCreate?: animalesCreateOrConnectWithoutAlimentacionesInput
    connect?: animalesWhereUniqueInput
  }

  export type insumosUpdateOneRequiredWithoutAlimentacionesNestedInput = {
    create?: XOR<insumosCreateWithoutAlimentacionesInput, insumosUncheckedCreateWithoutAlimentacionesInput>
    connectOrCreate?: insumosCreateOrConnectWithoutAlimentacionesInput
    upsert?: insumosUpsertWithoutAlimentacionesInput
    connect?: insumosWhereUniqueInput
    update?: XOR<XOR<insumosUpdateToOneWithWhereWithoutAlimentacionesInput, insumosUpdateWithoutAlimentacionesInput>, insumosUncheckedUpdateWithoutAlimentacionesInput>
  }

  export type usuariosUpdateOneRequiredWithoutAlimentacionesNestedInput = {
    create?: XOR<usuariosCreateWithoutAlimentacionesInput, usuariosUncheckedCreateWithoutAlimentacionesInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutAlimentacionesInput
    upsert?: usuariosUpsertWithoutAlimentacionesInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutAlimentacionesInput, usuariosUpdateWithoutAlimentacionesInput>, usuariosUncheckedUpdateWithoutAlimentacionesInput>
  }

  export type animalesUpdateOneRequiredWithoutAlimentacionesNestedInput = {
    create?: XOR<animalesCreateWithoutAlimentacionesInput, animalesUncheckedCreateWithoutAlimentacionesInput>
    connectOrCreate?: animalesCreateOrConnectWithoutAlimentacionesInput
    upsert?: animalesUpsertWithoutAlimentacionesInput
    connect?: animalesWhereUniqueInput
    update?: XOR<XOR<animalesUpdateToOneWithWhereWithoutAlimentacionesInput, animalesUpdateWithoutAlimentacionesInput>, animalesUncheckedUpdateWithoutAlimentacionesInput>
  }

  export type usuariosCreateNestedOneWithoutPesajes_realizadosInput = {
    create?: XOR<usuariosCreateWithoutPesajes_realizadosInput, usuariosUncheckedCreateWithoutPesajes_realizadosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutPesajes_realizadosInput
    connect?: usuariosWhereUniqueInput
  }

  export type animalesCreateNestedOneWithoutPesajesInput = {
    create?: XOR<animalesCreateWithoutPesajesInput, animalesUncheckedCreateWithoutPesajesInput>
    connectOrCreate?: animalesCreateOrConnectWithoutPesajesInput
    connect?: animalesWhereUniqueInput
  }

  export type unidadesCreateNestedOneWithoutPesajesInput = {
    create?: XOR<unidadesCreateWithoutPesajesInput, unidadesUncheckedCreateWithoutPesajesInput>
    connectOrCreate?: unidadesCreateOrConnectWithoutPesajesInput
    connect?: unidadesWhereUniqueInput
  }

  export type usuariosUpdateOneRequiredWithoutPesajes_realizadosNestedInput = {
    create?: XOR<usuariosCreateWithoutPesajes_realizadosInput, usuariosUncheckedCreateWithoutPesajes_realizadosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutPesajes_realizadosInput
    upsert?: usuariosUpsertWithoutPesajes_realizadosInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutPesajes_realizadosInput, usuariosUpdateWithoutPesajes_realizadosInput>, usuariosUncheckedUpdateWithoutPesajes_realizadosInput>
  }

  export type animalesUpdateOneRequiredWithoutPesajesNestedInput = {
    create?: XOR<animalesCreateWithoutPesajesInput, animalesUncheckedCreateWithoutPesajesInput>
    connectOrCreate?: animalesCreateOrConnectWithoutPesajesInput
    upsert?: animalesUpsertWithoutPesajesInput
    connect?: animalesWhereUniqueInput
    update?: XOR<XOR<animalesUpdateToOneWithWhereWithoutPesajesInput, animalesUpdateWithoutPesajesInput>, animalesUncheckedUpdateWithoutPesajesInput>
  }

  export type unidadesUpdateOneRequiredWithoutPesajesNestedInput = {
    create?: XOR<unidadesCreateWithoutPesajesInput, unidadesUncheckedCreateWithoutPesajesInput>
    connectOrCreate?: unidadesCreateOrConnectWithoutPesajesInput
    upsert?: unidadesUpsertWithoutPesajesInput
    connect?: unidadesWhereUniqueInput
    update?: XOR<XOR<unidadesUpdateToOneWithWhereWithoutPesajesInput, unidadesUpdateWithoutPesajesInput>, unidadesUncheckedUpdateWithoutPesajesInput>
  }

  export type animalesCreateNestedOneWithoutProducciones_carneInput = {
    create?: XOR<animalesCreateWithoutProducciones_carneInput, animalesUncheckedCreateWithoutProducciones_carneInput>
    connectOrCreate?: animalesCreateOrConnectWithoutProducciones_carneInput
    connect?: animalesWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutProducciones_carneInput = {
    create?: XOR<usuariosCreateWithoutProducciones_carneInput, usuariosUncheckedCreateWithoutProducciones_carneInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutProducciones_carneInput
    connect?: usuariosWhereUniqueInput
  }

  export type animalesUpdateOneRequiredWithoutProducciones_carneNestedInput = {
    create?: XOR<animalesCreateWithoutProducciones_carneInput, animalesUncheckedCreateWithoutProducciones_carneInput>
    connectOrCreate?: animalesCreateOrConnectWithoutProducciones_carneInput
    upsert?: animalesUpsertWithoutProducciones_carneInput
    connect?: animalesWhereUniqueInput
    update?: XOR<XOR<animalesUpdateToOneWithWhereWithoutProducciones_carneInput, animalesUpdateWithoutProducciones_carneInput>, animalesUncheckedUpdateWithoutProducciones_carneInput>
  }

  export type usuariosUpdateOneRequiredWithoutProducciones_carneNestedInput = {
    create?: XOR<usuariosCreateWithoutProducciones_carneInput, usuariosUncheckedCreateWithoutProducciones_carneInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutProducciones_carneInput
    upsert?: usuariosUpsertWithoutProducciones_carneInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutProducciones_carneInput, usuariosUpdateWithoutProducciones_carneInput>, usuariosUncheckedUpdateWithoutProducciones_carneInput>
  }

  export type usuariosCreateNestedOneWithoutProducciones_lecheInput = {
    create?: XOR<usuariosCreateWithoutProducciones_lecheInput, usuariosUncheckedCreateWithoutProducciones_lecheInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutProducciones_lecheInput
    connect?: usuariosWhereUniqueInput
  }

  export type animalesCreateNestedOneWithoutProducciones_lecheInput = {
    create?: XOR<animalesCreateWithoutProducciones_lecheInput, animalesUncheckedCreateWithoutProducciones_lecheInput>
    connectOrCreate?: animalesCreateOrConnectWithoutProducciones_lecheInput
    connect?: animalesWhereUniqueInput
  }

  export type unidadesCreateNestedOneWithoutProducciones_lecheInput = {
    create?: XOR<unidadesCreateWithoutProducciones_lecheInput, unidadesUncheckedCreateWithoutProducciones_lecheInput>
    connectOrCreate?: unidadesCreateOrConnectWithoutProducciones_lecheInput
    connect?: unidadesWhereUniqueInput
  }

  export type usuariosUpdateOneRequiredWithoutProducciones_lecheNestedInput = {
    create?: XOR<usuariosCreateWithoutProducciones_lecheInput, usuariosUncheckedCreateWithoutProducciones_lecheInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutProducciones_lecheInput
    upsert?: usuariosUpsertWithoutProducciones_lecheInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutProducciones_lecheInput, usuariosUpdateWithoutProducciones_lecheInput>, usuariosUncheckedUpdateWithoutProducciones_lecheInput>
  }

  export type animalesUpdateOneRequiredWithoutProducciones_lecheNestedInput = {
    create?: XOR<animalesCreateWithoutProducciones_lecheInput, animalesUncheckedCreateWithoutProducciones_lecheInput>
    connectOrCreate?: animalesCreateOrConnectWithoutProducciones_lecheInput
    upsert?: animalesUpsertWithoutProducciones_lecheInput
    connect?: animalesWhereUniqueInput
    update?: XOR<XOR<animalesUpdateToOneWithWhereWithoutProducciones_lecheInput, animalesUpdateWithoutProducciones_lecheInput>, animalesUncheckedUpdateWithoutProducciones_lecheInput>
  }

  export type unidadesUpdateOneRequiredWithoutProducciones_lecheNestedInput = {
    create?: XOR<unidadesCreateWithoutProducciones_lecheInput, unidadesUncheckedCreateWithoutProducciones_lecheInput>
    connectOrCreate?: unidadesCreateOrConnectWithoutProducciones_lecheInput
    upsert?: unidadesUpsertWithoutProducciones_lecheInput
    connect?: unidadesWhereUniqueInput
    update?: XOR<XOR<unidadesUpdateToOneWithWhereWithoutProducciones_lecheInput, unidadesUpdateWithoutProducciones_lecheInput>, unidadesUncheckedUpdateWithoutProducciones_lecheInput>
  }

  export type usuariosCreateNestedOneWithoutMontas_supervisadasInput = {
    create?: XOR<usuariosCreateWithoutMontas_supervisadasInput, usuariosUncheckedCreateWithoutMontas_supervisadasInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutMontas_supervisadasInput
    connect?: usuariosWhereUniqueInput
  }

  export type animalesCreateNestedOneWithoutMontas_hembraInput = {
    create?: XOR<animalesCreateWithoutMontas_hembraInput, animalesUncheckedCreateWithoutMontas_hembraInput>
    connectOrCreate?: animalesCreateOrConnectWithoutMontas_hembraInput
    connect?: animalesWhereUniqueInput
  }

  export type animalesCreateNestedOneWithoutMontas_machoInput = {
    create?: XOR<animalesCreateWithoutMontas_machoInput, animalesUncheckedCreateWithoutMontas_machoInput>
    connectOrCreate?: animalesCreateOrConnectWithoutMontas_machoInput
    connect?: animalesWhereUniqueInput
  }

  export type tipo_eventoCreateNestedOneWithoutEventos_montaInput = {
    create?: XOR<tipo_eventoCreateWithoutEventos_montaInput, tipo_eventoUncheckedCreateWithoutEventos_montaInput>
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutEventos_montaInput
    connect?: tipo_eventoWhereUniqueInput
  }

  export type diagnostico_preñezCreateNestedManyWithoutMontaInput = {
    create?: XOR<diagnostico_preñezCreateWithoutMontaInput, diagnostico_preñezUncheckedCreateWithoutMontaInput> | diagnostico_preñezCreateWithoutMontaInput[] | diagnostico_preñezUncheckedCreateWithoutMontaInput[]
    connectOrCreate?: diagnostico_preñezCreateOrConnectWithoutMontaInput | diagnostico_preñezCreateOrConnectWithoutMontaInput[]
    createMany?: diagnostico_preñezCreateManyMontaInputEnvelope
    connect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
  }

  export type diagnostico_preñezUncheckedCreateNestedManyWithoutMontaInput = {
    create?: XOR<diagnostico_preñezCreateWithoutMontaInput, diagnostico_preñezUncheckedCreateWithoutMontaInput> | diagnostico_preñezCreateWithoutMontaInput[] | diagnostico_preñezUncheckedCreateWithoutMontaInput[]
    connectOrCreate?: diagnostico_preñezCreateOrConnectWithoutMontaInput | diagnostico_preñezCreateOrConnectWithoutMontaInput[]
    createMany?: diagnostico_preñezCreateManyMontaInputEnvelope
    connect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
  }

  export type usuariosUpdateOneRequiredWithoutMontas_supervisadasNestedInput = {
    create?: XOR<usuariosCreateWithoutMontas_supervisadasInput, usuariosUncheckedCreateWithoutMontas_supervisadasInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutMontas_supervisadasInput
    upsert?: usuariosUpsertWithoutMontas_supervisadasInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutMontas_supervisadasInput, usuariosUpdateWithoutMontas_supervisadasInput>, usuariosUncheckedUpdateWithoutMontas_supervisadasInput>
  }

  export type animalesUpdateOneRequiredWithoutMontas_hembraNestedInput = {
    create?: XOR<animalesCreateWithoutMontas_hembraInput, animalesUncheckedCreateWithoutMontas_hembraInput>
    connectOrCreate?: animalesCreateOrConnectWithoutMontas_hembraInput
    upsert?: animalesUpsertWithoutMontas_hembraInput
    connect?: animalesWhereUniqueInput
    update?: XOR<XOR<animalesUpdateToOneWithWhereWithoutMontas_hembraInput, animalesUpdateWithoutMontas_hembraInput>, animalesUncheckedUpdateWithoutMontas_hembraInput>
  }

  export type animalesUpdateOneRequiredWithoutMontas_machoNestedInput = {
    create?: XOR<animalesCreateWithoutMontas_machoInput, animalesUncheckedCreateWithoutMontas_machoInput>
    connectOrCreate?: animalesCreateOrConnectWithoutMontas_machoInput
    upsert?: animalesUpsertWithoutMontas_machoInput
    connect?: animalesWhereUniqueInput
    update?: XOR<XOR<animalesUpdateToOneWithWhereWithoutMontas_machoInput, animalesUpdateWithoutMontas_machoInput>, animalesUncheckedUpdateWithoutMontas_machoInput>
  }

  export type tipo_eventoUpdateOneRequiredWithoutEventos_montaNestedInput = {
    create?: XOR<tipo_eventoCreateWithoutEventos_montaInput, tipo_eventoUncheckedCreateWithoutEventos_montaInput>
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutEventos_montaInput
    upsert?: tipo_eventoUpsertWithoutEventos_montaInput
    connect?: tipo_eventoWhereUniqueInput
    update?: XOR<XOR<tipo_eventoUpdateToOneWithWhereWithoutEventos_montaInput, tipo_eventoUpdateWithoutEventos_montaInput>, tipo_eventoUncheckedUpdateWithoutEventos_montaInput>
  }

  export type diagnostico_preñezUpdateManyWithoutMontaNestedInput = {
    create?: XOR<diagnostico_preñezCreateWithoutMontaInput, diagnostico_preñezUncheckedCreateWithoutMontaInput> | diagnostico_preñezCreateWithoutMontaInput[] | diagnostico_preñezUncheckedCreateWithoutMontaInput[]
    connectOrCreate?: diagnostico_preñezCreateOrConnectWithoutMontaInput | diagnostico_preñezCreateOrConnectWithoutMontaInput[]
    upsert?: diagnostico_preñezUpsertWithWhereUniqueWithoutMontaInput | diagnostico_preñezUpsertWithWhereUniqueWithoutMontaInput[]
    createMany?: diagnostico_preñezCreateManyMontaInputEnvelope
    set?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    disconnect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    delete?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    connect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    update?: diagnostico_preñezUpdateWithWhereUniqueWithoutMontaInput | diagnostico_preñezUpdateWithWhereUniqueWithoutMontaInput[]
    updateMany?: diagnostico_preñezUpdateManyWithWhereWithoutMontaInput | diagnostico_preñezUpdateManyWithWhereWithoutMontaInput[]
    deleteMany?: diagnostico_preñezScalarWhereInput | diagnostico_preñezScalarWhereInput[]
  }

  export type diagnostico_preñezUncheckedUpdateManyWithoutMontaNestedInput = {
    create?: XOR<diagnostico_preñezCreateWithoutMontaInput, diagnostico_preñezUncheckedCreateWithoutMontaInput> | diagnostico_preñezCreateWithoutMontaInput[] | diagnostico_preñezUncheckedCreateWithoutMontaInput[]
    connectOrCreate?: diagnostico_preñezCreateOrConnectWithoutMontaInput | diagnostico_preñezCreateOrConnectWithoutMontaInput[]
    upsert?: diagnostico_preñezUpsertWithWhereUniqueWithoutMontaInput | diagnostico_preñezUpsertWithWhereUniqueWithoutMontaInput[]
    createMany?: diagnostico_preñezCreateManyMontaInputEnvelope
    set?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    disconnect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    delete?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    connect?: diagnostico_preñezWhereUniqueInput | diagnostico_preñezWhereUniqueInput[]
    update?: diagnostico_preñezUpdateWithWhereUniqueWithoutMontaInput | diagnostico_preñezUpdateWithWhereUniqueWithoutMontaInput[]
    updateMany?: diagnostico_preñezUpdateManyWithWhereWithoutMontaInput | diagnostico_preñezUpdateManyWithWhereWithoutMontaInput[]
    deleteMany?: diagnostico_preñezScalarWhereInput | diagnostico_preñezScalarWhereInput[]
  }

  export type evento_montaCreateNestedOneWithoutDiagnosticosInput = {
    create?: XOR<evento_montaCreateWithoutDiagnosticosInput, evento_montaUncheckedCreateWithoutDiagnosticosInput>
    connectOrCreate?: evento_montaCreateOrConnectWithoutDiagnosticosInput
    connect?: evento_montaWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutDiagnosticosInput = {
    create?: XOR<usuariosCreateWithoutDiagnosticosInput, usuariosUncheckedCreateWithoutDiagnosticosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutDiagnosticosInput
    connect?: usuariosWhereUniqueInput
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type evento_montaUpdateOneRequiredWithoutDiagnosticosNestedInput = {
    create?: XOR<evento_montaCreateWithoutDiagnosticosInput, evento_montaUncheckedCreateWithoutDiagnosticosInput>
    connectOrCreate?: evento_montaCreateOrConnectWithoutDiagnosticosInput
    upsert?: evento_montaUpsertWithoutDiagnosticosInput
    connect?: evento_montaWhereUniqueInput
    update?: XOR<XOR<evento_montaUpdateToOneWithWhereWithoutDiagnosticosInput, evento_montaUpdateWithoutDiagnosticosInput>, evento_montaUncheckedUpdateWithoutDiagnosticosInput>
  }

  export type usuariosUpdateOneRequiredWithoutDiagnosticosNestedInput = {
    create?: XOR<usuariosCreateWithoutDiagnosticosInput, usuariosUncheckedCreateWithoutDiagnosticosInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutDiagnosticosInput
    upsert?: usuariosUpsertWithoutDiagnosticosInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutDiagnosticosInput, usuariosUpdateWithoutDiagnosticosInput>, usuariosUncheckedUpdateWithoutDiagnosticosInput>
  }

  export type animalesCreateNestedOneWithoutPartosInput = {
    create?: XOR<animalesCreateWithoutPartosInput, animalesUncheckedCreateWithoutPartosInput>
    connectOrCreate?: animalesCreateOrConnectWithoutPartosInput
    connect?: animalesWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutPartos_veterinarioInput = {
    create?: XOR<usuariosCreateWithoutPartos_veterinarioInput, usuariosUncheckedCreateWithoutPartos_veterinarioInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutPartos_veterinarioInput
    connect?: usuariosWhereUniqueInput
  }

  export type usuariosCreateNestedOneWithoutPartos_operadorInput = {
    create?: XOR<usuariosCreateWithoutPartos_operadorInput, usuariosUncheckedCreateWithoutPartos_operadorInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutPartos_operadorInput
    connect?: usuariosWhereUniqueInput
  }

  export type tipo_eventoCreateNestedOneWithoutEventos_partoInput = {
    create?: XOR<tipo_eventoCreateWithoutEventos_partoInput, tipo_eventoUncheckedCreateWithoutEventos_partoInput>
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutEventos_partoInput
    connect?: tipo_eventoWhereUniqueInput
  }

  export type animalesUpdateOneRequiredWithoutPartosNestedInput = {
    create?: XOR<animalesCreateWithoutPartosInput, animalesUncheckedCreateWithoutPartosInput>
    connectOrCreate?: animalesCreateOrConnectWithoutPartosInput
    upsert?: animalesUpsertWithoutPartosInput
    connect?: animalesWhereUniqueInput
    update?: XOR<XOR<animalesUpdateToOneWithWhereWithoutPartosInput, animalesUpdateWithoutPartosInput>, animalesUncheckedUpdateWithoutPartosInput>
  }

  export type usuariosUpdateOneRequiredWithoutPartos_veterinarioNestedInput = {
    create?: XOR<usuariosCreateWithoutPartos_veterinarioInput, usuariosUncheckedCreateWithoutPartos_veterinarioInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutPartos_veterinarioInput
    upsert?: usuariosUpsertWithoutPartos_veterinarioInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutPartos_veterinarioInput, usuariosUpdateWithoutPartos_veterinarioInput>, usuariosUncheckedUpdateWithoutPartos_veterinarioInput>
  }

  export type usuariosUpdateOneRequiredWithoutPartos_operadorNestedInput = {
    create?: XOR<usuariosCreateWithoutPartos_operadorInput, usuariosUncheckedCreateWithoutPartos_operadorInput>
    connectOrCreate?: usuariosCreateOrConnectWithoutPartos_operadorInput
    upsert?: usuariosUpsertWithoutPartos_operadorInput
    connect?: usuariosWhereUniqueInput
    update?: XOR<XOR<usuariosUpdateToOneWithWhereWithoutPartos_operadorInput, usuariosUpdateWithoutPartos_operadorInput>, usuariosUncheckedUpdateWithoutPartos_operadorInput>
  }

  export type tipo_eventoUpdateOneRequiredWithoutEventos_partoNestedInput = {
    create?: XOR<tipo_eventoCreateWithoutEventos_partoInput, tipo_eventoUncheckedCreateWithoutEventos_partoInput>
    connectOrCreate?: tipo_eventoCreateOrConnectWithoutEventos_partoInput
    upsert?: tipo_eventoUpsertWithoutEventos_partoInput
    connect?: tipo_eventoWhereUniqueInput
    update?: XOR<XOR<tipo_eventoUpdateToOneWithWhereWithoutEventos_partoInput, tipo_eventoUpdateWithoutEventos_partoInput>, tipo_eventoUncheckedUpdateWithoutEventos_partoInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type usuariosCreateWithoutRolInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutRolInput = {
    usuario_id?: number
    finca_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutRolInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutRolInput, usuariosUncheckedCreateWithoutRolInput>
  }

  export type usuariosCreateManyRolInputEnvelope = {
    data: usuariosCreateManyRolInput | usuariosCreateManyRolInput[]
    skipDuplicates?: boolean
  }

  export type usuariosUpsertWithWhereUniqueWithoutRolInput = {
    where: usuariosWhereUniqueInput
    update: XOR<usuariosUpdateWithoutRolInput, usuariosUncheckedUpdateWithoutRolInput>
    create: XOR<usuariosCreateWithoutRolInput, usuariosUncheckedCreateWithoutRolInput>
  }

  export type usuariosUpdateWithWhereUniqueWithoutRolInput = {
    where: usuariosWhereUniqueInput
    data: XOR<usuariosUpdateWithoutRolInput, usuariosUncheckedUpdateWithoutRolInput>
  }

  export type usuariosUpdateManyWithWhereWithoutRolInput = {
    where: usuariosScalarWhereInput
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyWithoutRolInput>
  }

  export type usuariosScalarWhereInput = {
    AND?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
    OR?: usuariosScalarWhereInput[]
    NOT?: usuariosScalarWhereInput | usuariosScalarWhereInput[]
    usuario_id?: IntFilter<"usuarios"> | number
    finca_id?: IntNullableFilter<"usuarios"> | number | null
    rol_id?: IntNullableFilter<"usuarios"> | number | null
    nombre?: StringFilter<"usuarios"> | string
    correo?: StringFilter<"usuarios"> | string
    contraseña?: StringNullableFilter<"usuarios"> | string | null
    deleted_at?: DateTimeNullableFilter<"usuarios"> | Date | string | null
  }

  export type usuariosCreateWithoutFincaInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutFincaInput = {
    usuario_id?: number
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutFincaInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutFincaInput, usuariosUncheckedCreateWithoutFincaInput>
  }

  export type usuariosCreateManyFincaInputEnvelope = {
    data: usuariosCreateManyFincaInput | usuariosCreateManyFincaInput[]
    skipDuplicates?: boolean
  }

  export type usuariosUpsertWithWhereUniqueWithoutFincaInput = {
    where: usuariosWhereUniqueInput
    update: XOR<usuariosUpdateWithoutFincaInput, usuariosUncheckedUpdateWithoutFincaInput>
    create: XOR<usuariosCreateWithoutFincaInput, usuariosUncheckedCreateWithoutFincaInput>
  }

  export type usuariosUpdateWithWhereUniqueWithoutFincaInput = {
    where: usuariosWhereUniqueInput
    data: XOR<usuariosUpdateWithoutFincaInput, usuariosUncheckedUpdateWithoutFincaInput>
  }

  export type usuariosUpdateManyWithWhereWithoutFincaInput = {
    where: usuariosScalarWhereInput
    data: XOR<usuariosUpdateManyMutationInput, usuariosUncheckedUpdateManyWithoutFincaInput>
  }

  export type fincaCreateWithoutUsuariosInput = {
    nombre: string
    descripcion?: string | null
    ubicacion?: string | null
    deleted_at?: Date | string | null
  }

  export type fincaUncheckedCreateWithoutUsuariosInput = {
    finca_id?: number
    nombre: string
    descripcion?: string | null
    ubicacion?: string | null
    deleted_at?: Date | string | null
  }

  export type fincaCreateOrConnectWithoutUsuariosInput = {
    where: fincaWhereUniqueInput
    create: XOR<fincaCreateWithoutUsuariosInput, fincaUncheckedCreateWithoutUsuariosInput>
  }

  export type rolesCreateWithoutUsuariosInput = {
    nombre: string
    deleted_at?: Date | string | null
  }

  export type rolesUncheckedCreateWithoutUsuariosInput = {
    rol_id?: number
    nombre: string
    deleted_at?: Date | string | null
  }

  export type rolesCreateOrConnectWithoutUsuariosInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutUsuariosInput, rolesUncheckedCreateWithoutUsuariosInput>
  }

  export type evento_sanitarioCreateWithoutVeterinarioInput = {
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutEventos_sanitariosInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_sanitariosInput
    operador: usuariosCreateNestedOneWithoutEventos_operadorInput
    insumos_usados?: evento_insumoCreateNestedManyWithoutEvento_sanitarioInput
  }

  export type evento_sanitarioUncheckedCreateWithoutVeterinarioInput = {
    evento_sanitario_id?: number
    animal_id: number
    tipo_evento_id: number
    usuario_operador_id: number
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    insumos_usados?: evento_insumoUncheckedCreateNestedManyWithoutEvento_sanitarioInput
  }

  export type evento_sanitarioCreateOrConnectWithoutVeterinarioInput = {
    where: evento_sanitarioWhereUniqueInput
    create: XOR<evento_sanitarioCreateWithoutVeterinarioInput, evento_sanitarioUncheckedCreateWithoutVeterinarioInput>
  }

  export type evento_sanitarioCreateManyVeterinarioInputEnvelope = {
    data: evento_sanitarioCreateManyVeterinarioInput | evento_sanitarioCreateManyVeterinarioInput[]
    skipDuplicates?: boolean
  }

  export type evento_sanitarioCreateWithoutOperadorInput = {
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutEventos_sanitariosInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_sanitariosInput
    veterinario: usuariosCreateNestedOneWithoutEventos_veterinarioInput
    insumos_usados?: evento_insumoCreateNestedManyWithoutEvento_sanitarioInput
  }

  export type evento_sanitarioUncheckedCreateWithoutOperadorInput = {
    evento_sanitario_id?: number
    animal_id: number
    tipo_evento_id: number
    usuario_veterinario_id: number
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    insumos_usados?: evento_insumoUncheckedCreateNestedManyWithoutEvento_sanitarioInput
  }

  export type evento_sanitarioCreateOrConnectWithoutOperadorInput = {
    where: evento_sanitarioWhereUniqueInput
    create: XOR<evento_sanitarioCreateWithoutOperadorInput, evento_sanitarioUncheckedCreateWithoutOperadorInput>
  }

  export type evento_sanitarioCreateManyOperadorInputEnvelope = {
    data: evento_sanitarioCreateManyOperadorInput | evento_sanitarioCreateManyOperadorInput[]
    skipDuplicates?: boolean
  }

  export type alimentacionCreateWithoutUsuarioInput = {
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
    insumo: insumosCreateNestedOneWithoutAlimentacionesInput
    animal: animalesCreateNestedOneWithoutAlimentacionesInput
  }

  export type alimentacionUncheckedCreateWithoutUsuarioInput = {
    alimentacion_id?: number
    insumo_id: number
    animal_id: number
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type alimentacionCreateOrConnectWithoutUsuarioInput = {
    where: alimentacionWhereUniqueInput
    create: XOR<alimentacionCreateWithoutUsuarioInput, alimentacionUncheckedCreateWithoutUsuarioInput>
  }

  export type alimentacionCreateManyUsuarioInputEnvelope = {
    data: alimentacionCreateManyUsuarioInput | alimentacionCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type pesajesCreateWithoutUsuarioInput = {
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutPesajesInput
    unidad: unidadesCreateNestedOneWithoutPesajesInput
  }

  export type pesajesUncheckedCreateWithoutUsuarioInput = {
    pesaje_id?: number
    animal_id: number
    unidad_id: number
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type pesajesCreateOrConnectWithoutUsuarioInput = {
    where: pesajesWhereUniqueInput
    create: XOR<pesajesCreateWithoutUsuarioInput, pesajesUncheckedCreateWithoutUsuarioInput>
  }

  export type pesajesCreateManyUsuarioInputEnvelope = {
    data: pesajesCreateManyUsuarioInput | pesajesCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type comprasCreateWithoutUsuario_contableInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    proveedor: proveedoresCreateNestedOneWithoutComprasInput
    detalle_compras?: detalle_comprasCreateNestedManyWithoutCompraInput
  }

  export type comprasUncheckedCreateWithoutUsuario_contableInput = {
    compra_id?: number
    proveedor_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
    detalle_compras?: detalle_comprasUncheckedCreateNestedManyWithoutCompraInput
  }

  export type comprasCreateOrConnectWithoutUsuario_contableInput = {
    where: comprasWhereUniqueInput
    create: XOR<comprasCreateWithoutUsuario_contableInput, comprasUncheckedCreateWithoutUsuario_contableInput>
  }

  export type comprasCreateManyUsuario_contableInputEnvelope = {
    data: comprasCreateManyUsuario_contableInput | comprasCreateManyUsuario_contableInput[]
    skipDuplicates?: boolean
  }

  export type produccion_carneCreateWithoutUsuarioInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutProducciones_carneInput
  }

  export type produccion_carneUncheckedCreateWithoutUsuarioInput = {
    produccion_id?: number
    animal_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type produccion_carneCreateOrConnectWithoutUsuarioInput = {
    where: produccion_carneWhereUniqueInput
    create: XOR<produccion_carneCreateWithoutUsuarioInput, produccion_carneUncheckedCreateWithoutUsuarioInput>
  }

  export type produccion_carneCreateManyUsuarioInputEnvelope = {
    data: produccion_carneCreateManyUsuarioInput | produccion_carneCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type produccion_lecheraCreateWithoutUsuarioInput = {
    cantidad: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutProducciones_lecheInput
    unidad: unidadesCreateNestedOneWithoutProducciones_lecheInput
  }

  export type produccion_lecheraUncheckedCreateWithoutUsuarioInput = {
    produccion_id?: number
    animal_id: number
    cantidad: number
    unidad_id: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type produccion_lecheraCreateOrConnectWithoutUsuarioInput = {
    where: produccion_lecheraWhereUniqueInput
    create: XOR<produccion_lecheraCreateWithoutUsuarioInput, produccion_lecheraUncheckedCreateWithoutUsuarioInput>
  }

  export type produccion_lecheraCreateManyUsuarioInputEnvelope = {
    data: produccion_lecheraCreateManyUsuarioInput | produccion_lecheraCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type evento_montaCreateWithoutVeterinarioInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    hembra: animalesCreateNestedOneWithoutMontas_hembraInput
    macho: animalesCreateNestedOneWithoutMontas_machoInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_montaInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutMontaInput
  }

  export type evento_montaUncheckedCreateWithoutVeterinarioInput = {
    monta_id?: number
    animal_hembra_id: number
    animal_macho_id: number
    tipo_evento_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutMontaInput
  }

  export type evento_montaCreateOrConnectWithoutVeterinarioInput = {
    where: evento_montaWhereUniqueInput
    create: XOR<evento_montaCreateWithoutVeterinarioInput, evento_montaUncheckedCreateWithoutVeterinarioInput>
  }

  export type evento_montaCreateManyVeterinarioInputEnvelope = {
    data: evento_montaCreateManyVeterinarioInput | evento_montaCreateManyVeterinarioInput[]
    skipDuplicates?: boolean
  }

  export type diagnostico_preñezCreateWithoutVeterinarioInput = {
    metodo?: string | null
    resultado?: boolean | null
    fecha_probable_parto?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    monta: evento_montaCreateNestedOneWithoutDiagnosticosInput
  }

  export type diagnostico_preñezUncheckedCreateWithoutVeterinarioInput = {
    preñez_id?: number
    monta_id: number
    metodo?: string | null
    resultado?: boolean | null
    fecha_probable_parto?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type diagnostico_preñezCreateOrConnectWithoutVeterinarioInput = {
    where: diagnostico_preñezWhereUniqueInput
    create: XOR<diagnostico_preñezCreateWithoutVeterinarioInput, diagnostico_preñezUncheckedCreateWithoutVeterinarioInput>
  }

  export type diagnostico_preñezCreateManyVeterinarioInputEnvelope = {
    data: diagnostico_preñezCreateManyVeterinarioInput | diagnostico_preñezCreateManyVeterinarioInput[]
    skipDuplicates?: boolean
  }

  export type evento_partoCreateWithoutVeterinarioInput = {
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutPartosInput
    operador: usuariosCreateNestedOneWithoutPartos_operadorInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_partoInput
  }

  export type evento_partoUncheckedCreateWithoutVeterinarioInput = {
    evento_id?: number
    animal_id: number
    usuario_operador_id: number
    tipo_evento_id: number
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_partoCreateOrConnectWithoutVeterinarioInput = {
    where: evento_partoWhereUniqueInput
    create: XOR<evento_partoCreateWithoutVeterinarioInput, evento_partoUncheckedCreateWithoutVeterinarioInput>
  }

  export type evento_partoCreateManyVeterinarioInputEnvelope = {
    data: evento_partoCreateManyVeterinarioInput | evento_partoCreateManyVeterinarioInput[]
    skipDuplicates?: boolean
  }

  export type evento_partoCreateWithoutOperadorInput = {
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutPartosInput
    veterinario: usuariosCreateNestedOneWithoutPartos_veterinarioInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_partoInput
  }

  export type evento_partoUncheckedCreateWithoutOperadorInput = {
    evento_id?: number
    animal_id: number
    usuario_veterinario_id: number
    tipo_evento_id: number
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_partoCreateOrConnectWithoutOperadorInput = {
    where: evento_partoWhereUniqueInput
    create: XOR<evento_partoCreateWithoutOperadorInput, evento_partoUncheckedCreateWithoutOperadorInput>
  }

  export type evento_partoCreateManyOperadorInputEnvelope = {
    data: evento_partoCreateManyOperadorInput | evento_partoCreateManyOperadorInput[]
    skipDuplicates?: boolean
  }

  export type fincaUpsertWithoutUsuariosInput = {
    update: XOR<fincaUpdateWithoutUsuariosInput, fincaUncheckedUpdateWithoutUsuariosInput>
    create: XOR<fincaCreateWithoutUsuariosInput, fincaUncheckedCreateWithoutUsuariosInput>
    where?: fincaWhereInput
  }

  export type fincaUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: fincaWhereInput
    data: XOR<fincaUpdateWithoutUsuariosInput, fincaUncheckedUpdateWithoutUsuariosInput>
  }

  export type fincaUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type fincaUncheckedUpdateWithoutUsuariosInput = {
    finca_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    ubicacion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolesUpsertWithoutUsuariosInput = {
    update: XOR<rolesUpdateWithoutUsuariosInput, rolesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<rolesCreateWithoutUsuariosInput, rolesUncheckedCreateWithoutUsuariosInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutUsuariosInput, rolesUncheckedUpdateWithoutUsuariosInput>
  }

  export type rolesUpdateWithoutUsuariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type rolesUncheckedUpdateWithoutUsuariosInput = {
    rol_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_sanitarioUpsertWithWhereUniqueWithoutVeterinarioInput = {
    where: evento_sanitarioWhereUniqueInput
    update: XOR<evento_sanitarioUpdateWithoutVeterinarioInput, evento_sanitarioUncheckedUpdateWithoutVeterinarioInput>
    create: XOR<evento_sanitarioCreateWithoutVeterinarioInput, evento_sanitarioUncheckedCreateWithoutVeterinarioInput>
  }

  export type evento_sanitarioUpdateWithWhereUniqueWithoutVeterinarioInput = {
    where: evento_sanitarioWhereUniqueInput
    data: XOR<evento_sanitarioUpdateWithoutVeterinarioInput, evento_sanitarioUncheckedUpdateWithoutVeterinarioInput>
  }

  export type evento_sanitarioUpdateManyWithWhereWithoutVeterinarioInput = {
    where: evento_sanitarioScalarWhereInput
    data: XOR<evento_sanitarioUpdateManyMutationInput, evento_sanitarioUncheckedUpdateManyWithoutVeterinarioInput>
  }

  export type evento_sanitarioScalarWhereInput = {
    AND?: evento_sanitarioScalarWhereInput | evento_sanitarioScalarWhereInput[]
    OR?: evento_sanitarioScalarWhereInput[]
    NOT?: evento_sanitarioScalarWhereInput | evento_sanitarioScalarWhereInput[]
    evento_sanitario_id?: IntFilter<"evento_sanitario"> | number
    animal_id?: IntFilter<"evento_sanitario"> | number
    tipo_evento_id?: IntFilter<"evento_sanitario"> | number
    usuario_veterinario_id?: IntFilter<"evento_sanitario"> | number
    usuario_operador_id?: IntFilter<"evento_sanitario"> | number
    estado?: StringNullableFilter<"evento_sanitario"> | string | null
    diagnostico?: StringNullableFilter<"evento_sanitario"> | string | null
    tratamiento?: StringNullableFilter<"evento_sanitario"> | string | null
    fecha_diagnostico?: DateTimeNullableFilter<"evento_sanitario"> | Date | string | null
    fecha?: DateTimeFilter<"evento_sanitario"> | Date | string
    deleted_at?: DateTimeNullableFilter<"evento_sanitario"> | Date | string | null
  }

  export type evento_sanitarioUpsertWithWhereUniqueWithoutOperadorInput = {
    where: evento_sanitarioWhereUniqueInput
    update: XOR<evento_sanitarioUpdateWithoutOperadorInput, evento_sanitarioUncheckedUpdateWithoutOperadorInput>
    create: XOR<evento_sanitarioCreateWithoutOperadorInput, evento_sanitarioUncheckedCreateWithoutOperadorInput>
  }

  export type evento_sanitarioUpdateWithWhereUniqueWithoutOperadorInput = {
    where: evento_sanitarioWhereUniqueInput
    data: XOR<evento_sanitarioUpdateWithoutOperadorInput, evento_sanitarioUncheckedUpdateWithoutOperadorInput>
  }

  export type evento_sanitarioUpdateManyWithWhereWithoutOperadorInput = {
    where: evento_sanitarioScalarWhereInput
    data: XOR<evento_sanitarioUpdateManyMutationInput, evento_sanitarioUncheckedUpdateManyWithoutOperadorInput>
  }

  export type alimentacionUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: alimentacionWhereUniqueInput
    update: XOR<alimentacionUpdateWithoutUsuarioInput, alimentacionUncheckedUpdateWithoutUsuarioInput>
    create: XOR<alimentacionCreateWithoutUsuarioInput, alimentacionUncheckedCreateWithoutUsuarioInput>
  }

  export type alimentacionUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: alimentacionWhereUniqueInput
    data: XOR<alimentacionUpdateWithoutUsuarioInput, alimentacionUncheckedUpdateWithoutUsuarioInput>
  }

  export type alimentacionUpdateManyWithWhereWithoutUsuarioInput = {
    where: alimentacionScalarWhereInput
    data: XOR<alimentacionUpdateManyMutationInput, alimentacionUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type alimentacionScalarWhereInput = {
    AND?: alimentacionScalarWhereInput | alimentacionScalarWhereInput[]
    OR?: alimentacionScalarWhereInput[]
    NOT?: alimentacionScalarWhereInput | alimentacionScalarWhereInput[]
    alimentacion_id?: IntFilter<"alimentacion"> | number
    insumo_id?: IntFilter<"alimentacion"> | number
    usuario_operador_id?: IntFilter<"alimentacion"> | number
    animal_id?: IntFilter<"alimentacion"> | number
    cantidad?: IntFilter<"alimentacion"> | number
    fecha?: DateTimeFilter<"alimentacion"> | Date | string
    deleted_at?: DateTimeNullableFilter<"alimentacion"> | Date | string | null
  }

  export type pesajesUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: pesajesWhereUniqueInput
    update: XOR<pesajesUpdateWithoutUsuarioInput, pesajesUncheckedUpdateWithoutUsuarioInput>
    create: XOR<pesajesCreateWithoutUsuarioInput, pesajesUncheckedCreateWithoutUsuarioInput>
  }

  export type pesajesUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: pesajesWhereUniqueInput
    data: XOR<pesajesUpdateWithoutUsuarioInput, pesajesUncheckedUpdateWithoutUsuarioInput>
  }

  export type pesajesUpdateManyWithWhereWithoutUsuarioInput = {
    where: pesajesScalarWhereInput
    data: XOR<pesajesUpdateManyMutationInput, pesajesUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type pesajesScalarWhereInput = {
    AND?: pesajesScalarWhereInput | pesajesScalarWhereInput[]
    OR?: pesajesScalarWhereInput[]
    NOT?: pesajesScalarWhereInput | pesajesScalarWhereInput[]
    pesaje_id?: IntFilter<"pesajes"> | number
    usuario_operador_id?: IntFilter<"pesajes"> | number
    animal_id?: IntFilter<"pesajes"> | number
    unidad_id?: IntFilter<"pesajes"> | number
    peso?: DecimalFilter<"pesajes"> | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFilter<"pesajes"> | Date | string
    deleted_at?: DateTimeNullableFilter<"pesajes"> | Date | string | null
  }

  export type comprasUpsertWithWhereUniqueWithoutUsuario_contableInput = {
    where: comprasWhereUniqueInput
    update: XOR<comprasUpdateWithoutUsuario_contableInput, comprasUncheckedUpdateWithoutUsuario_contableInput>
    create: XOR<comprasCreateWithoutUsuario_contableInput, comprasUncheckedCreateWithoutUsuario_contableInput>
  }

  export type comprasUpdateWithWhereUniqueWithoutUsuario_contableInput = {
    where: comprasWhereUniqueInput
    data: XOR<comprasUpdateWithoutUsuario_contableInput, comprasUncheckedUpdateWithoutUsuario_contableInput>
  }

  export type comprasUpdateManyWithWhereWithoutUsuario_contableInput = {
    where: comprasScalarWhereInput
    data: XOR<comprasUpdateManyMutationInput, comprasUncheckedUpdateManyWithoutUsuario_contableInput>
  }

  export type comprasScalarWhereInput = {
    AND?: comprasScalarWhereInput | comprasScalarWhereInput[]
    OR?: comprasScalarWhereInput[]
    NOT?: comprasScalarWhereInput | comprasScalarWhereInput[]
    compra_id?: IntFilter<"compras"> | number
    usuario_contable_id?: IntFilter<"compras"> | number
    proveedor_id?: IntFilter<"compras"> | number
    fecha?: DateTimeFilter<"compras"> | Date | string
    deleted_at?: DateTimeNullableFilter<"compras"> | Date | string | null
  }

  export type produccion_carneUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: produccion_carneWhereUniqueInput
    update: XOR<produccion_carneUpdateWithoutUsuarioInput, produccion_carneUncheckedUpdateWithoutUsuarioInput>
    create: XOR<produccion_carneCreateWithoutUsuarioInput, produccion_carneUncheckedCreateWithoutUsuarioInput>
  }

  export type produccion_carneUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: produccion_carneWhereUniqueInput
    data: XOR<produccion_carneUpdateWithoutUsuarioInput, produccion_carneUncheckedUpdateWithoutUsuarioInput>
  }

  export type produccion_carneUpdateManyWithWhereWithoutUsuarioInput = {
    where: produccion_carneScalarWhereInput
    data: XOR<produccion_carneUpdateManyMutationInput, produccion_carneUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type produccion_carneScalarWhereInput = {
    AND?: produccion_carneScalarWhereInput | produccion_carneScalarWhereInput[]
    OR?: produccion_carneScalarWhereInput[]
    NOT?: produccion_carneScalarWhereInput | produccion_carneScalarWhereInput[]
    produccion_id?: IntFilter<"produccion_carne"> | number
    animal_id?: IntFilter<"produccion_carne"> | number
    usuario_operador_id?: IntFilter<"produccion_carne"> | number
    fecha?: DateTimeFilter<"produccion_carne"> | Date | string
    deleted_at?: DateTimeNullableFilter<"produccion_carne"> | Date | string | null
  }

  export type produccion_lecheraUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: produccion_lecheraWhereUniqueInput
    update: XOR<produccion_lecheraUpdateWithoutUsuarioInput, produccion_lecheraUncheckedUpdateWithoutUsuarioInput>
    create: XOR<produccion_lecheraCreateWithoutUsuarioInput, produccion_lecheraUncheckedCreateWithoutUsuarioInput>
  }

  export type produccion_lecheraUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: produccion_lecheraWhereUniqueInput
    data: XOR<produccion_lecheraUpdateWithoutUsuarioInput, produccion_lecheraUncheckedUpdateWithoutUsuarioInput>
  }

  export type produccion_lecheraUpdateManyWithWhereWithoutUsuarioInput = {
    where: produccion_lecheraScalarWhereInput
    data: XOR<produccion_lecheraUpdateManyMutationInput, produccion_lecheraUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type produccion_lecheraScalarWhereInput = {
    AND?: produccion_lecheraScalarWhereInput | produccion_lecheraScalarWhereInput[]
    OR?: produccion_lecheraScalarWhereInput[]
    NOT?: produccion_lecheraScalarWhereInput | produccion_lecheraScalarWhereInput[]
    produccion_id?: IntFilter<"produccion_lechera"> | number
    usuario_ordeño_id?: IntFilter<"produccion_lechera"> | number
    animal_id?: IntFilter<"produccion_lechera"> | number
    cantidad?: IntFilter<"produccion_lechera"> | number
    unidad_id?: IntFilter<"produccion_lechera"> | number
    fecha?: DateTimeFilter<"produccion_lechera"> | Date | string
    descripcion?: StringNullableFilter<"produccion_lechera"> | string | null
    deleted_at?: DateTimeNullableFilter<"produccion_lechera"> | Date | string | null
  }

  export type evento_montaUpsertWithWhereUniqueWithoutVeterinarioInput = {
    where: evento_montaWhereUniqueInput
    update: XOR<evento_montaUpdateWithoutVeterinarioInput, evento_montaUncheckedUpdateWithoutVeterinarioInput>
    create: XOR<evento_montaCreateWithoutVeterinarioInput, evento_montaUncheckedCreateWithoutVeterinarioInput>
  }

  export type evento_montaUpdateWithWhereUniqueWithoutVeterinarioInput = {
    where: evento_montaWhereUniqueInput
    data: XOR<evento_montaUpdateWithoutVeterinarioInput, evento_montaUncheckedUpdateWithoutVeterinarioInput>
  }

  export type evento_montaUpdateManyWithWhereWithoutVeterinarioInput = {
    where: evento_montaScalarWhereInput
    data: XOR<evento_montaUpdateManyMutationInput, evento_montaUncheckedUpdateManyWithoutVeterinarioInput>
  }

  export type evento_montaScalarWhereInput = {
    AND?: evento_montaScalarWhereInput | evento_montaScalarWhereInput[]
    OR?: evento_montaScalarWhereInput[]
    NOT?: evento_montaScalarWhereInput | evento_montaScalarWhereInput[]
    monta_id?: IntFilter<"evento_monta"> | number
    usuario_veterinario_id?: IntFilter<"evento_monta"> | number
    animal_hembra_id?: IntFilter<"evento_monta"> | number
    animal_macho_id?: IntFilter<"evento_monta"> | number
    tipo_evento_id?: IntFilter<"evento_monta"> | number
    fecha?: DateTimeFilter<"evento_monta"> | Date | string
    deleted_at?: DateTimeNullableFilter<"evento_monta"> | Date | string | null
  }

  export type diagnostico_preñezUpsertWithWhereUniqueWithoutVeterinarioInput = {
    where: diagnostico_preñezWhereUniqueInput
    update: XOR<diagnostico_preñezUpdateWithoutVeterinarioInput, diagnostico_preñezUncheckedUpdateWithoutVeterinarioInput>
    create: XOR<diagnostico_preñezCreateWithoutVeterinarioInput, diagnostico_preñezUncheckedCreateWithoutVeterinarioInput>
  }

  export type diagnostico_preñezUpdateWithWhereUniqueWithoutVeterinarioInput = {
    where: diagnostico_preñezWhereUniqueInput
    data: XOR<diagnostico_preñezUpdateWithoutVeterinarioInput, diagnostico_preñezUncheckedUpdateWithoutVeterinarioInput>
  }

  export type diagnostico_preñezUpdateManyWithWhereWithoutVeterinarioInput = {
    where: diagnostico_preñezScalarWhereInput
    data: XOR<diagnostico_preñezUpdateManyMutationInput, diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioInput>
  }

  export type diagnostico_preñezScalarWhereInput = {
    AND?: diagnostico_preñezScalarWhereInput | diagnostico_preñezScalarWhereInput[]
    OR?: diagnostico_preñezScalarWhereInput[]
    NOT?: diagnostico_preñezScalarWhereInput | diagnostico_preñezScalarWhereInput[]
    preñez_id?: IntFilter<"diagnostico_preñez"> | number
    monta_id?: IntFilter<"diagnostico_preñez"> | number
    usuario_veterinario_id?: IntFilter<"diagnostico_preñez"> | number
    metodo?: StringNullableFilter<"diagnostico_preñez"> | string | null
    resultado?: BoolNullableFilter<"diagnostico_preñez"> | boolean | null
    fecha_probable_parto?: DateTimeNullableFilter<"diagnostico_preñez"> | Date | string | null
    fecha?: DateTimeFilter<"diagnostico_preñez"> | Date | string
    deleted_at?: DateTimeNullableFilter<"diagnostico_preñez"> | Date | string | null
  }

  export type evento_partoUpsertWithWhereUniqueWithoutVeterinarioInput = {
    where: evento_partoWhereUniqueInput
    update: XOR<evento_partoUpdateWithoutVeterinarioInput, evento_partoUncheckedUpdateWithoutVeterinarioInput>
    create: XOR<evento_partoCreateWithoutVeterinarioInput, evento_partoUncheckedCreateWithoutVeterinarioInput>
  }

  export type evento_partoUpdateWithWhereUniqueWithoutVeterinarioInput = {
    where: evento_partoWhereUniqueInput
    data: XOR<evento_partoUpdateWithoutVeterinarioInput, evento_partoUncheckedUpdateWithoutVeterinarioInput>
  }

  export type evento_partoUpdateManyWithWhereWithoutVeterinarioInput = {
    where: evento_partoScalarWhereInput
    data: XOR<evento_partoUpdateManyMutationInput, evento_partoUncheckedUpdateManyWithoutVeterinarioInput>
  }

  export type evento_partoScalarWhereInput = {
    AND?: evento_partoScalarWhereInput | evento_partoScalarWhereInput[]
    OR?: evento_partoScalarWhereInput[]
    NOT?: evento_partoScalarWhereInput | evento_partoScalarWhereInput[]
    evento_id?: IntFilter<"evento_parto"> | number
    animal_id?: IntFilter<"evento_parto"> | number
    usuario_veterinario_id?: IntFilter<"evento_parto"> | number
    usuario_operador_id?: IntFilter<"evento_parto"> | number
    tipo_evento_id?: IntFilter<"evento_parto"> | number
    descripcion?: StringNullableFilter<"evento_parto"> | string | null
    fecha?: DateTimeFilter<"evento_parto"> | Date | string
    deleted_at?: DateTimeNullableFilter<"evento_parto"> | Date | string | null
  }

  export type evento_partoUpsertWithWhereUniqueWithoutOperadorInput = {
    where: evento_partoWhereUniqueInput
    update: XOR<evento_partoUpdateWithoutOperadorInput, evento_partoUncheckedUpdateWithoutOperadorInput>
    create: XOR<evento_partoCreateWithoutOperadorInput, evento_partoUncheckedCreateWithoutOperadorInput>
  }

  export type evento_partoUpdateWithWhereUniqueWithoutOperadorInput = {
    where: evento_partoWhereUniqueInput
    data: XOR<evento_partoUpdateWithoutOperadorInput, evento_partoUncheckedUpdateWithoutOperadorInput>
  }

  export type evento_partoUpdateManyWithWhereWithoutOperadorInput = {
    where: evento_partoScalarWhereInput
    data: XOR<evento_partoUpdateManyMutationInput, evento_partoUncheckedUpdateManyWithoutOperadorInput>
  }

  export type insumosCreateWithoutUnidadInput = {
    nombre: string
    cantidad: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    tipo_insumo: tipo_insumoCreateNestedOneWithoutInsumosInput
    detalle_compras?: detalle_comprasCreateNestedManyWithoutInsumoInput
    evento_insumos?: evento_insumoCreateNestedManyWithoutInsumoInput
    alimentaciones?: alimentacionCreateNestedManyWithoutInsumoInput
  }

  export type insumosUncheckedCreateWithoutUnidadInput = {
    insumo_id?: number
    tipo_insumo_id: number
    nombre: string
    cantidad: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    detalle_compras?: detalle_comprasUncheckedCreateNestedManyWithoutInsumoInput
    evento_insumos?: evento_insumoUncheckedCreateNestedManyWithoutInsumoInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutInsumoInput
  }

  export type insumosCreateOrConnectWithoutUnidadInput = {
    where: insumosWhereUniqueInput
    create: XOR<insumosCreateWithoutUnidadInput, insumosUncheckedCreateWithoutUnidadInput>
  }

  export type insumosCreateManyUnidadInputEnvelope = {
    data: insumosCreateManyUnidadInput | insumosCreateManyUnidadInput[]
    skipDuplicates?: boolean
  }

  export type pesajesCreateWithoutUnidadInput = {
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
    usuario: usuariosCreateNestedOneWithoutPesajes_realizadosInput
    animal: animalesCreateNestedOneWithoutPesajesInput
  }

  export type pesajesUncheckedCreateWithoutUnidadInput = {
    pesaje_id?: number
    usuario_operador_id: number
    animal_id: number
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type pesajesCreateOrConnectWithoutUnidadInput = {
    where: pesajesWhereUniqueInput
    create: XOR<pesajesCreateWithoutUnidadInput, pesajesUncheckedCreateWithoutUnidadInput>
  }

  export type pesajesCreateManyUnidadInputEnvelope = {
    data: pesajesCreateManyUnidadInput | pesajesCreateManyUnidadInput[]
    skipDuplicates?: boolean
  }

  export type produccion_lecheraCreateWithoutUnidadInput = {
    cantidad: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
    usuario: usuariosCreateNestedOneWithoutProducciones_lecheInput
    animal: animalesCreateNestedOneWithoutProducciones_lecheInput
  }

  export type produccion_lecheraUncheckedCreateWithoutUnidadInput = {
    produccion_id?: number
    usuario_ordeño_id: number
    animal_id: number
    cantidad: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type produccion_lecheraCreateOrConnectWithoutUnidadInput = {
    where: produccion_lecheraWhereUniqueInput
    create: XOR<produccion_lecheraCreateWithoutUnidadInput, produccion_lecheraUncheckedCreateWithoutUnidadInput>
  }

  export type produccion_lecheraCreateManyUnidadInputEnvelope = {
    data: produccion_lecheraCreateManyUnidadInput | produccion_lecheraCreateManyUnidadInput[]
    skipDuplicates?: boolean
  }

  export type insumosUpsertWithWhereUniqueWithoutUnidadInput = {
    where: insumosWhereUniqueInput
    update: XOR<insumosUpdateWithoutUnidadInput, insumosUncheckedUpdateWithoutUnidadInput>
    create: XOR<insumosCreateWithoutUnidadInput, insumosUncheckedCreateWithoutUnidadInput>
  }

  export type insumosUpdateWithWhereUniqueWithoutUnidadInput = {
    where: insumosWhereUniqueInput
    data: XOR<insumosUpdateWithoutUnidadInput, insumosUncheckedUpdateWithoutUnidadInput>
  }

  export type insumosUpdateManyWithWhereWithoutUnidadInput = {
    where: insumosScalarWhereInput
    data: XOR<insumosUpdateManyMutationInput, insumosUncheckedUpdateManyWithoutUnidadInput>
  }

  export type insumosScalarWhereInput = {
    AND?: insumosScalarWhereInput | insumosScalarWhereInput[]
    OR?: insumosScalarWhereInput[]
    NOT?: insumosScalarWhereInput | insumosScalarWhereInput[]
    insumo_id?: IntFilter<"insumos"> | number
    tipo_insumo_id?: IntFilter<"insumos"> | number
    nombre?: StringFilter<"insumos"> | string
    cantidad?: IntFilter<"insumos"> | number
    unidad_id?: IntFilter<"insumos"> | number
    descripcion?: StringNullableFilter<"insumos"> | string | null
    deleted_at?: DateTimeNullableFilter<"insumos"> | Date | string | null
  }

  export type pesajesUpsertWithWhereUniqueWithoutUnidadInput = {
    where: pesajesWhereUniqueInput
    update: XOR<pesajesUpdateWithoutUnidadInput, pesajesUncheckedUpdateWithoutUnidadInput>
    create: XOR<pesajesCreateWithoutUnidadInput, pesajesUncheckedCreateWithoutUnidadInput>
  }

  export type pesajesUpdateWithWhereUniqueWithoutUnidadInput = {
    where: pesajesWhereUniqueInput
    data: XOR<pesajesUpdateWithoutUnidadInput, pesajesUncheckedUpdateWithoutUnidadInput>
  }

  export type pesajesUpdateManyWithWhereWithoutUnidadInput = {
    where: pesajesScalarWhereInput
    data: XOR<pesajesUpdateManyMutationInput, pesajesUncheckedUpdateManyWithoutUnidadInput>
  }

  export type produccion_lecheraUpsertWithWhereUniqueWithoutUnidadInput = {
    where: produccion_lecheraWhereUniqueInput
    update: XOR<produccion_lecheraUpdateWithoutUnidadInput, produccion_lecheraUncheckedUpdateWithoutUnidadInput>
    create: XOR<produccion_lecheraCreateWithoutUnidadInput, produccion_lecheraUncheckedCreateWithoutUnidadInput>
  }

  export type produccion_lecheraUpdateWithWhereUniqueWithoutUnidadInput = {
    where: produccion_lecheraWhereUniqueInput
    data: XOR<produccion_lecheraUpdateWithoutUnidadInput, produccion_lecheraUncheckedUpdateWithoutUnidadInput>
  }

  export type produccion_lecheraUpdateManyWithWhereWithoutUnidadInput = {
    where: produccion_lecheraScalarWhereInput
    data: XOR<produccion_lecheraUpdateManyMutationInput, produccion_lecheraUncheckedUpdateManyWithoutUnidadInput>
  }

  export type insumosCreateWithoutTipo_insumoInput = {
    nombre: string
    cantidad: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    unidad: unidadesCreateNestedOneWithoutInsumosInput
    detalle_compras?: detalle_comprasCreateNestedManyWithoutInsumoInput
    evento_insumos?: evento_insumoCreateNestedManyWithoutInsumoInput
    alimentaciones?: alimentacionCreateNestedManyWithoutInsumoInput
  }

  export type insumosUncheckedCreateWithoutTipo_insumoInput = {
    insumo_id?: number
    nombre: string
    cantidad: number
    unidad_id: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    detalle_compras?: detalle_comprasUncheckedCreateNestedManyWithoutInsumoInput
    evento_insumos?: evento_insumoUncheckedCreateNestedManyWithoutInsumoInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutInsumoInput
  }

  export type insumosCreateOrConnectWithoutTipo_insumoInput = {
    where: insumosWhereUniqueInput
    create: XOR<insumosCreateWithoutTipo_insumoInput, insumosUncheckedCreateWithoutTipo_insumoInput>
  }

  export type insumosCreateManyTipo_insumoInputEnvelope = {
    data: insumosCreateManyTipo_insumoInput | insumosCreateManyTipo_insumoInput[]
    skipDuplicates?: boolean
  }

  export type insumosUpsertWithWhereUniqueWithoutTipo_insumoInput = {
    where: insumosWhereUniqueInput
    update: XOR<insumosUpdateWithoutTipo_insumoInput, insumosUncheckedUpdateWithoutTipo_insumoInput>
    create: XOR<insumosCreateWithoutTipo_insumoInput, insumosUncheckedCreateWithoutTipo_insumoInput>
  }

  export type insumosUpdateWithWhereUniqueWithoutTipo_insumoInput = {
    where: insumosWhereUniqueInput
    data: XOR<insumosUpdateWithoutTipo_insumoInput, insumosUncheckedUpdateWithoutTipo_insumoInput>
  }

  export type insumosUpdateManyWithWhereWithoutTipo_insumoInput = {
    where: insumosScalarWhereInput
    data: XOR<insumosUpdateManyMutationInput, insumosUncheckedUpdateManyWithoutTipo_insumoInput>
  }

  export type tipo_insumoCreateWithoutInsumosInput = {
    nombre: string
    deleted_at?: Date | string | null
  }

  export type tipo_insumoUncheckedCreateWithoutInsumosInput = {
    tipo_insumo_id?: number
    nombre: string
    deleted_at?: Date | string | null
  }

  export type tipo_insumoCreateOrConnectWithoutInsumosInput = {
    where: tipo_insumoWhereUniqueInput
    create: XOR<tipo_insumoCreateWithoutInsumosInput, tipo_insumoUncheckedCreateWithoutInsumosInput>
  }

  export type unidadesCreateWithoutInsumosInput = {
    nombre: string
    deleted_at?: Date | string | null
    pesajes?: pesajesCreateNestedManyWithoutUnidadInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUnidadInput
  }

  export type unidadesUncheckedCreateWithoutInsumosInput = {
    unidad_id?: number
    nombre: string
    deleted_at?: Date | string | null
    pesajes?: pesajesUncheckedCreateNestedManyWithoutUnidadInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUnidadInput
  }

  export type unidadesCreateOrConnectWithoutInsumosInput = {
    where: unidadesWhereUniqueInput
    create: XOR<unidadesCreateWithoutInsumosInput, unidadesUncheckedCreateWithoutInsumosInput>
  }

  export type detalle_comprasCreateWithoutInsumoInput = {
    precio: Decimal | DecimalJsLike | number | string
    cantidad: number
    deleted_at?: Date | string | null
    compra: comprasCreateNestedOneWithoutDetalle_comprasInput
  }

  export type detalle_comprasUncheckedCreateWithoutInsumoInput = {
    detalle_id?: number
    compra_id: number
    precio: Decimal | DecimalJsLike | number | string
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type detalle_comprasCreateOrConnectWithoutInsumoInput = {
    where: detalle_comprasWhereUniqueInput
    create: XOR<detalle_comprasCreateWithoutInsumoInput, detalle_comprasUncheckedCreateWithoutInsumoInput>
  }

  export type detalle_comprasCreateManyInsumoInputEnvelope = {
    data: detalle_comprasCreateManyInsumoInput | detalle_comprasCreateManyInsumoInput[]
    skipDuplicates?: boolean
  }

  export type evento_insumoCreateWithoutInsumoInput = {
    cantidad: number
    deleted_at?: Date | string | null
    evento_sanitario: evento_sanitarioCreateNestedOneWithoutInsumos_usadosInput
  }

  export type evento_insumoUncheckedCreateWithoutInsumoInput = {
    evento_sanitario_id: number
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type evento_insumoCreateOrConnectWithoutInsumoInput = {
    where: evento_insumoWhereUniqueInput
    create: XOR<evento_insumoCreateWithoutInsumoInput, evento_insumoUncheckedCreateWithoutInsumoInput>
  }

  export type evento_insumoCreateManyInsumoInputEnvelope = {
    data: evento_insumoCreateManyInsumoInput | evento_insumoCreateManyInsumoInput[]
    skipDuplicates?: boolean
  }

  export type alimentacionCreateWithoutInsumoInput = {
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
    usuario: usuariosCreateNestedOneWithoutAlimentacionesInput
    animal: animalesCreateNestedOneWithoutAlimentacionesInput
  }

  export type alimentacionUncheckedCreateWithoutInsumoInput = {
    alimentacion_id?: number
    usuario_operador_id: number
    animal_id: number
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type alimentacionCreateOrConnectWithoutInsumoInput = {
    where: alimentacionWhereUniqueInput
    create: XOR<alimentacionCreateWithoutInsumoInput, alimentacionUncheckedCreateWithoutInsumoInput>
  }

  export type alimentacionCreateManyInsumoInputEnvelope = {
    data: alimentacionCreateManyInsumoInput | alimentacionCreateManyInsumoInput[]
    skipDuplicates?: boolean
  }

  export type tipo_insumoUpsertWithoutInsumosInput = {
    update: XOR<tipo_insumoUpdateWithoutInsumosInput, tipo_insumoUncheckedUpdateWithoutInsumosInput>
    create: XOR<tipo_insumoCreateWithoutInsumosInput, tipo_insumoUncheckedCreateWithoutInsumosInput>
    where?: tipo_insumoWhereInput
  }

  export type tipo_insumoUpdateToOneWithWhereWithoutInsumosInput = {
    where?: tipo_insumoWhereInput
    data: XOR<tipo_insumoUpdateWithoutInsumosInput, tipo_insumoUncheckedUpdateWithoutInsumosInput>
  }

  export type tipo_insumoUpdateWithoutInsumosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_insumoUncheckedUpdateWithoutInsumosInput = {
    tipo_insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type unidadesUpsertWithoutInsumosInput = {
    update: XOR<unidadesUpdateWithoutInsumosInput, unidadesUncheckedUpdateWithoutInsumosInput>
    create: XOR<unidadesCreateWithoutInsumosInput, unidadesUncheckedCreateWithoutInsumosInput>
    where?: unidadesWhereInput
  }

  export type unidadesUpdateToOneWithWhereWithoutInsumosInput = {
    where?: unidadesWhereInput
    data: XOR<unidadesUpdateWithoutInsumosInput, unidadesUncheckedUpdateWithoutInsumosInput>
  }

  export type unidadesUpdateWithoutInsumosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pesajes?: pesajesUpdateManyWithoutUnidadNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUnidadNestedInput
  }

  export type unidadesUncheckedUpdateWithoutInsumosInput = {
    unidad_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pesajes?: pesajesUncheckedUpdateManyWithoutUnidadNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUnidadNestedInput
  }

  export type detalle_comprasUpsertWithWhereUniqueWithoutInsumoInput = {
    where: detalle_comprasWhereUniqueInput
    update: XOR<detalle_comprasUpdateWithoutInsumoInput, detalle_comprasUncheckedUpdateWithoutInsumoInput>
    create: XOR<detalle_comprasCreateWithoutInsumoInput, detalle_comprasUncheckedCreateWithoutInsumoInput>
  }

  export type detalle_comprasUpdateWithWhereUniqueWithoutInsumoInput = {
    where: detalle_comprasWhereUniqueInput
    data: XOR<detalle_comprasUpdateWithoutInsumoInput, detalle_comprasUncheckedUpdateWithoutInsumoInput>
  }

  export type detalle_comprasUpdateManyWithWhereWithoutInsumoInput = {
    where: detalle_comprasScalarWhereInput
    data: XOR<detalle_comprasUpdateManyMutationInput, detalle_comprasUncheckedUpdateManyWithoutInsumoInput>
  }

  export type detalle_comprasScalarWhereInput = {
    AND?: detalle_comprasScalarWhereInput | detalle_comprasScalarWhereInput[]
    OR?: detalle_comprasScalarWhereInput[]
    NOT?: detalle_comprasScalarWhereInput | detalle_comprasScalarWhereInput[]
    detalle_id?: IntFilter<"detalle_compras"> | number
    compra_id?: IntFilter<"detalle_compras"> | number
    insumo_id?: IntFilter<"detalle_compras"> | number
    precio?: DecimalFilter<"detalle_compras"> | Decimal | DecimalJsLike | number | string
    cantidad?: IntFilter<"detalle_compras"> | number
    deleted_at?: DateTimeNullableFilter<"detalle_compras"> | Date | string | null
  }

  export type evento_insumoUpsertWithWhereUniqueWithoutInsumoInput = {
    where: evento_insumoWhereUniqueInput
    update: XOR<evento_insumoUpdateWithoutInsumoInput, evento_insumoUncheckedUpdateWithoutInsumoInput>
    create: XOR<evento_insumoCreateWithoutInsumoInput, evento_insumoUncheckedCreateWithoutInsumoInput>
  }

  export type evento_insumoUpdateWithWhereUniqueWithoutInsumoInput = {
    where: evento_insumoWhereUniqueInput
    data: XOR<evento_insumoUpdateWithoutInsumoInput, evento_insumoUncheckedUpdateWithoutInsumoInput>
  }

  export type evento_insumoUpdateManyWithWhereWithoutInsumoInput = {
    where: evento_insumoScalarWhereInput
    data: XOR<evento_insumoUpdateManyMutationInput, evento_insumoUncheckedUpdateManyWithoutInsumoInput>
  }

  export type evento_insumoScalarWhereInput = {
    AND?: evento_insumoScalarWhereInput | evento_insumoScalarWhereInput[]
    OR?: evento_insumoScalarWhereInput[]
    NOT?: evento_insumoScalarWhereInput | evento_insumoScalarWhereInput[]
    evento_sanitario_id?: IntFilter<"evento_insumo"> | number
    insumo_id?: IntFilter<"evento_insumo"> | number
    cantidad?: IntFilter<"evento_insumo"> | number
    deleted_at?: DateTimeNullableFilter<"evento_insumo"> | Date | string | null
  }

  export type alimentacionUpsertWithWhereUniqueWithoutInsumoInput = {
    where: alimentacionWhereUniqueInput
    update: XOR<alimentacionUpdateWithoutInsumoInput, alimentacionUncheckedUpdateWithoutInsumoInput>
    create: XOR<alimentacionCreateWithoutInsumoInput, alimentacionUncheckedCreateWithoutInsumoInput>
  }

  export type alimentacionUpdateWithWhereUniqueWithoutInsumoInput = {
    where: alimentacionWhereUniqueInput
    data: XOR<alimentacionUpdateWithoutInsumoInput, alimentacionUncheckedUpdateWithoutInsumoInput>
  }

  export type alimentacionUpdateManyWithWhereWithoutInsumoInput = {
    where: alimentacionScalarWhereInput
    data: XOR<alimentacionUpdateManyMutationInput, alimentacionUncheckedUpdateManyWithoutInsumoInput>
  }

  export type tipo_eventoCreateWithoutHijosInput = {
    nombre: string
    deleted_at?: Date | string | null
    padre?: tipo_eventoCreateNestedOneWithoutHijosInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutTipo_eventoInput
    eventos_monta?: evento_montaCreateNestedManyWithoutTipo_eventoInput
    eventos_parto?: evento_partoCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoUncheckedCreateWithoutHijosInput = {
    tipo_evento_id?: number
    nombre: string
    padre_id?: number | null
    deleted_at?: Date | string | null
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutTipo_eventoInput
    eventos_monta?: evento_montaUncheckedCreateNestedManyWithoutTipo_eventoInput
    eventos_parto?: evento_partoUncheckedCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoCreateOrConnectWithoutHijosInput = {
    where: tipo_eventoWhereUniqueInput
    create: XOR<tipo_eventoCreateWithoutHijosInput, tipo_eventoUncheckedCreateWithoutHijosInput>
  }

  export type tipo_eventoCreateWithoutPadreInput = {
    nombre: string
    deleted_at?: Date | string | null
    hijos?: tipo_eventoCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutTipo_eventoInput
    eventos_monta?: evento_montaCreateNestedManyWithoutTipo_eventoInput
    eventos_parto?: evento_partoCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoUncheckedCreateWithoutPadreInput = {
    tipo_evento_id?: number
    nombre: string
    deleted_at?: Date | string | null
    hijos?: tipo_eventoUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutTipo_eventoInput
    eventos_monta?: evento_montaUncheckedCreateNestedManyWithoutTipo_eventoInput
    eventos_parto?: evento_partoUncheckedCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoCreateOrConnectWithoutPadreInput = {
    where: tipo_eventoWhereUniqueInput
    create: XOR<tipo_eventoCreateWithoutPadreInput, tipo_eventoUncheckedCreateWithoutPadreInput>
  }

  export type tipo_eventoCreateManyPadreInputEnvelope = {
    data: tipo_eventoCreateManyPadreInput | tipo_eventoCreateManyPadreInput[]
    skipDuplicates?: boolean
  }

  export type evento_sanitarioCreateWithoutTipo_eventoInput = {
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutEventos_sanitariosInput
    veterinario: usuariosCreateNestedOneWithoutEventos_veterinarioInput
    operador: usuariosCreateNestedOneWithoutEventos_operadorInput
    insumos_usados?: evento_insumoCreateNestedManyWithoutEvento_sanitarioInput
  }

  export type evento_sanitarioUncheckedCreateWithoutTipo_eventoInput = {
    evento_sanitario_id?: number
    animal_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    insumos_usados?: evento_insumoUncheckedCreateNestedManyWithoutEvento_sanitarioInput
  }

  export type evento_sanitarioCreateOrConnectWithoutTipo_eventoInput = {
    where: evento_sanitarioWhereUniqueInput
    create: XOR<evento_sanitarioCreateWithoutTipo_eventoInput, evento_sanitarioUncheckedCreateWithoutTipo_eventoInput>
  }

  export type evento_sanitarioCreateManyTipo_eventoInputEnvelope = {
    data: evento_sanitarioCreateManyTipo_eventoInput | evento_sanitarioCreateManyTipo_eventoInput[]
    skipDuplicates?: boolean
  }

  export type evento_montaCreateWithoutTipo_eventoInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    veterinario: usuariosCreateNestedOneWithoutMontas_supervisadasInput
    hembra: animalesCreateNestedOneWithoutMontas_hembraInput
    macho: animalesCreateNestedOneWithoutMontas_machoInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutMontaInput
  }

  export type evento_montaUncheckedCreateWithoutTipo_eventoInput = {
    monta_id?: number
    usuario_veterinario_id: number
    animal_hembra_id: number
    animal_macho_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutMontaInput
  }

  export type evento_montaCreateOrConnectWithoutTipo_eventoInput = {
    where: evento_montaWhereUniqueInput
    create: XOR<evento_montaCreateWithoutTipo_eventoInput, evento_montaUncheckedCreateWithoutTipo_eventoInput>
  }

  export type evento_montaCreateManyTipo_eventoInputEnvelope = {
    data: evento_montaCreateManyTipo_eventoInput | evento_montaCreateManyTipo_eventoInput[]
    skipDuplicates?: boolean
  }

  export type evento_partoCreateWithoutTipo_eventoInput = {
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutPartosInput
    veterinario: usuariosCreateNestedOneWithoutPartos_veterinarioInput
    operador: usuariosCreateNestedOneWithoutPartos_operadorInput
  }

  export type evento_partoUncheckedCreateWithoutTipo_eventoInput = {
    evento_id?: number
    animal_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_partoCreateOrConnectWithoutTipo_eventoInput = {
    where: evento_partoWhereUniqueInput
    create: XOR<evento_partoCreateWithoutTipo_eventoInput, evento_partoUncheckedCreateWithoutTipo_eventoInput>
  }

  export type evento_partoCreateManyTipo_eventoInputEnvelope = {
    data: evento_partoCreateManyTipo_eventoInput | evento_partoCreateManyTipo_eventoInput[]
    skipDuplicates?: boolean
  }

  export type tipo_eventoUpsertWithoutHijosInput = {
    update: XOR<tipo_eventoUpdateWithoutHijosInput, tipo_eventoUncheckedUpdateWithoutHijosInput>
    create: XOR<tipo_eventoCreateWithoutHijosInput, tipo_eventoUncheckedCreateWithoutHijosInput>
    where?: tipo_eventoWhereInput
  }

  export type tipo_eventoUpdateToOneWithWhereWithoutHijosInput = {
    where?: tipo_eventoWhereInput
    data: XOR<tipo_eventoUpdateWithoutHijosInput, tipo_eventoUncheckedUpdateWithoutHijosInput>
  }

  export type tipo_eventoUpdateWithoutHijosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    padre?: tipo_eventoUpdateOneWithoutHijosNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutTipo_eventoNestedInput
    eventos_monta?: evento_montaUpdateManyWithoutTipo_eventoNestedInput
    eventos_parto?: evento_partoUpdateManyWithoutTipo_eventoNestedInput
  }

  export type tipo_eventoUncheckedUpdateWithoutHijosInput = {
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutTipo_eventoNestedInput
    eventos_monta?: evento_montaUncheckedUpdateManyWithoutTipo_eventoNestedInput
    eventos_parto?: evento_partoUncheckedUpdateManyWithoutTipo_eventoNestedInput
  }

  export type tipo_eventoUpsertWithWhereUniqueWithoutPadreInput = {
    where: tipo_eventoWhereUniqueInput
    update: XOR<tipo_eventoUpdateWithoutPadreInput, tipo_eventoUncheckedUpdateWithoutPadreInput>
    create: XOR<tipo_eventoCreateWithoutPadreInput, tipo_eventoUncheckedCreateWithoutPadreInput>
  }

  export type tipo_eventoUpdateWithWhereUniqueWithoutPadreInput = {
    where: tipo_eventoWhereUniqueInput
    data: XOR<tipo_eventoUpdateWithoutPadreInput, tipo_eventoUncheckedUpdateWithoutPadreInput>
  }

  export type tipo_eventoUpdateManyWithWhereWithoutPadreInput = {
    where: tipo_eventoScalarWhereInput
    data: XOR<tipo_eventoUpdateManyMutationInput, tipo_eventoUncheckedUpdateManyWithoutPadreInput>
  }

  export type tipo_eventoScalarWhereInput = {
    AND?: tipo_eventoScalarWhereInput | tipo_eventoScalarWhereInput[]
    OR?: tipo_eventoScalarWhereInput[]
    NOT?: tipo_eventoScalarWhereInput | tipo_eventoScalarWhereInput[]
    tipo_evento_id?: IntFilter<"tipo_evento"> | number
    nombre?: StringFilter<"tipo_evento"> | string
    padre_id?: IntNullableFilter<"tipo_evento"> | number | null
    deleted_at?: DateTimeNullableFilter<"tipo_evento"> | Date | string | null
  }

  export type evento_sanitarioUpsertWithWhereUniqueWithoutTipo_eventoInput = {
    where: evento_sanitarioWhereUniqueInput
    update: XOR<evento_sanitarioUpdateWithoutTipo_eventoInput, evento_sanitarioUncheckedUpdateWithoutTipo_eventoInput>
    create: XOR<evento_sanitarioCreateWithoutTipo_eventoInput, evento_sanitarioUncheckedCreateWithoutTipo_eventoInput>
  }

  export type evento_sanitarioUpdateWithWhereUniqueWithoutTipo_eventoInput = {
    where: evento_sanitarioWhereUniqueInput
    data: XOR<evento_sanitarioUpdateWithoutTipo_eventoInput, evento_sanitarioUncheckedUpdateWithoutTipo_eventoInput>
  }

  export type evento_sanitarioUpdateManyWithWhereWithoutTipo_eventoInput = {
    where: evento_sanitarioScalarWhereInput
    data: XOR<evento_sanitarioUpdateManyMutationInput, evento_sanitarioUncheckedUpdateManyWithoutTipo_eventoInput>
  }

  export type evento_montaUpsertWithWhereUniqueWithoutTipo_eventoInput = {
    where: evento_montaWhereUniqueInput
    update: XOR<evento_montaUpdateWithoutTipo_eventoInput, evento_montaUncheckedUpdateWithoutTipo_eventoInput>
    create: XOR<evento_montaCreateWithoutTipo_eventoInput, evento_montaUncheckedCreateWithoutTipo_eventoInput>
  }

  export type evento_montaUpdateWithWhereUniqueWithoutTipo_eventoInput = {
    where: evento_montaWhereUniqueInput
    data: XOR<evento_montaUpdateWithoutTipo_eventoInput, evento_montaUncheckedUpdateWithoutTipo_eventoInput>
  }

  export type evento_montaUpdateManyWithWhereWithoutTipo_eventoInput = {
    where: evento_montaScalarWhereInput
    data: XOR<evento_montaUpdateManyMutationInput, evento_montaUncheckedUpdateManyWithoutTipo_eventoInput>
  }

  export type evento_partoUpsertWithWhereUniqueWithoutTipo_eventoInput = {
    where: evento_partoWhereUniqueInput
    update: XOR<evento_partoUpdateWithoutTipo_eventoInput, evento_partoUncheckedUpdateWithoutTipo_eventoInput>
    create: XOR<evento_partoCreateWithoutTipo_eventoInput, evento_partoUncheckedCreateWithoutTipo_eventoInput>
  }

  export type evento_partoUpdateWithWhereUniqueWithoutTipo_eventoInput = {
    where: evento_partoWhereUniqueInput
    data: XOR<evento_partoUpdateWithoutTipo_eventoInput, evento_partoUncheckedUpdateWithoutTipo_eventoInput>
  }

  export type evento_partoUpdateManyWithWhereWithoutTipo_eventoInput = {
    where: evento_partoScalarWhereInput
    data: XOR<evento_partoUpdateManyMutationInput, evento_partoUncheckedUpdateManyWithoutTipo_eventoInput>
  }

  export type animalesCreateWithoutRazaInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutRazaInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutRazaInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutRazaInput, animalesUncheckedCreateWithoutRazaInput>
  }

  export type animalesCreateManyRazaInputEnvelope = {
    data: animalesCreateManyRazaInput | animalesCreateManyRazaInput[]
    skipDuplicates?: boolean
  }

  export type animalesUpsertWithWhereUniqueWithoutRazaInput = {
    where: animalesWhereUniqueInput
    update: XOR<animalesUpdateWithoutRazaInput, animalesUncheckedUpdateWithoutRazaInput>
    create: XOR<animalesCreateWithoutRazaInput, animalesUncheckedCreateWithoutRazaInput>
  }

  export type animalesUpdateWithWhereUniqueWithoutRazaInput = {
    where: animalesWhereUniqueInput
    data: XOR<animalesUpdateWithoutRazaInput, animalesUncheckedUpdateWithoutRazaInput>
  }

  export type animalesUpdateManyWithWhereWithoutRazaInput = {
    where: animalesScalarWhereInput
    data: XOR<animalesUpdateManyMutationInput, animalesUncheckedUpdateManyWithoutRazaInput>
  }

  export type animalesScalarWhereInput = {
    AND?: animalesScalarWhereInput | animalesScalarWhereInput[]
    OR?: animalesScalarWhereInput[]
    NOT?: animalesScalarWhereInput | animalesScalarWhereInput[]
    animal_id?: IntFilter<"animales"> | number
    animal_madre_id?: IntNullableFilter<"animales"> | number | null
    animal_padre_id?: IntNullableFilter<"animales"> | number | null
    lote_id?: IntNullableFilter<"animales"> | number | null
    raza_id?: IntFilter<"animales"> | number
    animal_img?: StringNullableFilter<"animales"> | string | null
    arete?: StringFilter<"animales"> | string
    sexo?: StringFilter<"animales"> | string
    fecha_destete?: DateTimeNullableFilter<"animales"> | Date | string | null
    fecha_nacimiento?: DateTimeFilter<"animales"> | Date | string
    deleted_at?: DateTimeNullableFilter<"animales"> | Date | string | null
  }

  export type lotesCreateWithoutPotreroInput = {
    descripcion?: string | null
    deleted_at?: Date | string | null
    animales?: animalesCreateNestedManyWithoutLoteInput
  }

  export type lotesUncheckedCreateWithoutPotreroInput = {
    lote_id?: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    animales?: animalesUncheckedCreateNestedManyWithoutLoteInput
  }

  export type lotesCreateOrConnectWithoutPotreroInput = {
    where: lotesWhereUniqueInput
    create: XOR<lotesCreateWithoutPotreroInput, lotesUncheckedCreateWithoutPotreroInput>
  }

  export type lotesCreateManyPotreroInputEnvelope = {
    data: lotesCreateManyPotreroInput | lotesCreateManyPotreroInput[]
    skipDuplicates?: boolean
  }

  export type lotesUpsertWithWhereUniqueWithoutPotreroInput = {
    where: lotesWhereUniqueInput
    update: XOR<lotesUpdateWithoutPotreroInput, lotesUncheckedUpdateWithoutPotreroInput>
    create: XOR<lotesCreateWithoutPotreroInput, lotesUncheckedCreateWithoutPotreroInput>
  }

  export type lotesUpdateWithWhereUniqueWithoutPotreroInput = {
    where: lotesWhereUniqueInput
    data: XOR<lotesUpdateWithoutPotreroInput, lotesUncheckedUpdateWithoutPotreroInput>
  }

  export type lotesUpdateManyWithWhereWithoutPotreroInput = {
    where: lotesScalarWhereInput
    data: XOR<lotesUpdateManyMutationInput, lotesUncheckedUpdateManyWithoutPotreroInput>
  }

  export type lotesScalarWhereInput = {
    AND?: lotesScalarWhereInput | lotesScalarWhereInput[]
    OR?: lotesScalarWhereInput[]
    NOT?: lotesScalarWhereInput | lotesScalarWhereInput[]
    lote_id?: IntFilter<"lotes"> | number
    potrero_id?: IntFilter<"lotes"> | number
    descripcion?: StringNullableFilter<"lotes"> | string | null
    deleted_at?: DateTimeNullableFilter<"lotes"> | Date | string | null
  }

  export type potrerosCreateWithoutLotesInput = {
    ubicacion: string
    deleted_at?: Date | string | null
  }

  export type potrerosUncheckedCreateWithoutLotesInput = {
    potrero_id?: number
    ubicacion: string
    deleted_at?: Date | string | null
  }

  export type potrerosCreateOrConnectWithoutLotesInput = {
    where: potrerosWhereUniqueInput
    create: XOR<potrerosCreateWithoutLotesInput, potrerosUncheckedCreateWithoutLotesInput>
  }

  export type animalesCreateWithoutLoteInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutLoteInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutLoteInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutLoteInput, animalesUncheckedCreateWithoutLoteInput>
  }

  export type animalesCreateManyLoteInputEnvelope = {
    data: animalesCreateManyLoteInput | animalesCreateManyLoteInput[]
    skipDuplicates?: boolean
  }

  export type potrerosUpsertWithoutLotesInput = {
    update: XOR<potrerosUpdateWithoutLotesInput, potrerosUncheckedUpdateWithoutLotesInput>
    create: XOR<potrerosCreateWithoutLotesInput, potrerosUncheckedCreateWithoutLotesInput>
    where?: potrerosWhereInput
  }

  export type potrerosUpdateToOneWithWhereWithoutLotesInput = {
    where?: potrerosWhereInput
    data: XOR<potrerosUpdateWithoutLotesInput, potrerosUncheckedUpdateWithoutLotesInput>
  }

  export type potrerosUpdateWithoutLotesInput = {
    ubicacion?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type potrerosUncheckedUpdateWithoutLotesInput = {
    potrero_id?: IntFieldUpdateOperationsInput | number
    ubicacion?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type animalesUpsertWithWhereUniqueWithoutLoteInput = {
    where: animalesWhereUniqueInput
    update: XOR<animalesUpdateWithoutLoteInput, animalesUncheckedUpdateWithoutLoteInput>
    create: XOR<animalesCreateWithoutLoteInput, animalesUncheckedCreateWithoutLoteInput>
  }

  export type animalesUpdateWithWhereUniqueWithoutLoteInput = {
    where: animalesWhereUniqueInput
    data: XOR<animalesUpdateWithoutLoteInput, animalesUncheckedUpdateWithoutLoteInput>
  }

  export type animalesUpdateManyWithWhereWithoutLoteInput = {
    where: animalesScalarWhereInput
    data: XOR<animalesUpdateManyMutationInput, animalesUncheckedUpdateManyWithoutLoteInput>
  }

  export type animalesCreateWithoutHijos_madreInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutHijos_madreInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutHijos_madreInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutHijos_madreInput, animalesUncheckedCreateWithoutHijos_madreInput>
  }

  export type animalesCreateWithoutHijos_padreInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutHijos_padreInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutHijos_padreInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutHijos_padreInput, animalesUncheckedCreateWithoutHijos_padreInput>
  }

  export type animalesCreateWithoutMadreInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutMadreInput = {
    animal_id?: number
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutMadreInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutMadreInput, animalesUncheckedCreateWithoutMadreInput>
  }

  export type animalesCreateManyMadreInputEnvelope = {
    data: animalesCreateManyMadreInput | animalesCreateManyMadreInput[]
    skipDuplicates?: boolean
  }

  export type animalesCreateWithoutPadreInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutPadreInput = {
    animal_id?: number
    animal_madre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutPadreInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutPadreInput, animalesUncheckedCreateWithoutPadreInput>
  }

  export type animalesCreateManyPadreInputEnvelope = {
    data: animalesCreateManyPadreInput | animalesCreateManyPadreInput[]
    skipDuplicates?: boolean
  }

  export type lotesCreateWithoutAnimalesInput = {
    descripcion?: string | null
    deleted_at?: Date | string | null
    potrero: potrerosCreateNestedOneWithoutLotesInput
  }

  export type lotesUncheckedCreateWithoutAnimalesInput = {
    lote_id?: number
    potrero_id: number
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type lotesCreateOrConnectWithoutAnimalesInput = {
    where: lotesWhereUniqueInput
    create: XOR<lotesCreateWithoutAnimalesInput, lotesUncheckedCreateWithoutAnimalesInput>
  }

  export type razasCreateWithoutAnimalesInput = {
    nombre: string
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type razasUncheckedCreateWithoutAnimalesInput = {
    raza_id?: number
    nombre: string
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type razasCreateOrConnectWithoutAnimalesInput = {
    where: razasWhereUniqueInput
    create: XOR<razasCreateWithoutAnimalesInput, razasUncheckedCreateWithoutAnimalesInput>
  }

  export type evento_sanitarioCreateWithoutAnimalInput = {
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_sanitariosInput
    veterinario: usuariosCreateNestedOneWithoutEventos_veterinarioInput
    operador: usuariosCreateNestedOneWithoutEventos_operadorInput
    insumos_usados?: evento_insumoCreateNestedManyWithoutEvento_sanitarioInput
  }

  export type evento_sanitarioUncheckedCreateWithoutAnimalInput = {
    evento_sanitario_id?: number
    tipo_evento_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    insumos_usados?: evento_insumoUncheckedCreateNestedManyWithoutEvento_sanitarioInput
  }

  export type evento_sanitarioCreateOrConnectWithoutAnimalInput = {
    where: evento_sanitarioWhereUniqueInput
    create: XOR<evento_sanitarioCreateWithoutAnimalInput, evento_sanitarioUncheckedCreateWithoutAnimalInput>
  }

  export type evento_sanitarioCreateManyAnimalInputEnvelope = {
    data: evento_sanitarioCreateManyAnimalInput | evento_sanitarioCreateManyAnimalInput[]
    skipDuplicates?: boolean
  }

  export type alimentacionCreateWithoutAnimalInput = {
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
    insumo: insumosCreateNestedOneWithoutAlimentacionesInput
    usuario: usuariosCreateNestedOneWithoutAlimentacionesInput
  }

  export type alimentacionUncheckedCreateWithoutAnimalInput = {
    alimentacion_id?: number
    insumo_id: number
    usuario_operador_id: number
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type alimentacionCreateOrConnectWithoutAnimalInput = {
    where: alimentacionWhereUniqueInput
    create: XOR<alimentacionCreateWithoutAnimalInput, alimentacionUncheckedCreateWithoutAnimalInput>
  }

  export type alimentacionCreateManyAnimalInputEnvelope = {
    data: alimentacionCreateManyAnimalInput | alimentacionCreateManyAnimalInput[]
    skipDuplicates?: boolean
  }

  export type pesajesCreateWithoutAnimalInput = {
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
    usuario: usuariosCreateNestedOneWithoutPesajes_realizadosInput
    unidad: unidadesCreateNestedOneWithoutPesajesInput
  }

  export type pesajesUncheckedCreateWithoutAnimalInput = {
    pesaje_id?: number
    usuario_operador_id: number
    unidad_id: number
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type pesajesCreateOrConnectWithoutAnimalInput = {
    where: pesajesWhereUniqueInput
    create: XOR<pesajesCreateWithoutAnimalInput, pesajesUncheckedCreateWithoutAnimalInput>
  }

  export type pesajesCreateManyAnimalInputEnvelope = {
    data: pesajesCreateManyAnimalInput | pesajesCreateManyAnimalInput[]
    skipDuplicates?: boolean
  }

  export type produccion_carneCreateWithoutAnimalInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    usuario: usuariosCreateNestedOneWithoutProducciones_carneInput
  }

  export type produccion_carneUncheckedCreateWithoutAnimalInput = {
    produccion_id?: number
    usuario_operador_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type produccion_carneCreateOrConnectWithoutAnimalInput = {
    where: produccion_carneWhereUniqueInput
    create: XOR<produccion_carneCreateWithoutAnimalInput, produccion_carneUncheckedCreateWithoutAnimalInput>
  }

  export type produccion_carneCreateManyAnimalInputEnvelope = {
    data: produccion_carneCreateManyAnimalInput | produccion_carneCreateManyAnimalInput[]
    skipDuplicates?: boolean
  }

  export type produccion_lecheraCreateWithoutAnimalInput = {
    cantidad: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
    usuario: usuariosCreateNestedOneWithoutProducciones_lecheInput
    unidad: unidadesCreateNestedOneWithoutProducciones_lecheInput
  }

  export type produccion_lecheraUncheckedCreateWithoutAnimalInput = {
    produccion_id?: number
    usuario_ordeño_id: number
    cantidad: number
    unidad_id: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type produccion_lecheraCreateOrConnectWithoutAnimalInput = {
    where: produccion_lecheraWhereUniqueInput
    create: XOR<produccion_lecheraCreateWithoutAnimalInput, produccion_lecheraUncheckedCreateWithoutAnimalInput>
  }

  export type produccion_lecheraCreateManyAnimalInputEnvelope = {
    data: produccion_lecheraCreateManyAnimalInput | produccion_lecheraCreateManyAnimalInput[]
    skipDuplicates?: boolean
  }

  export type evento_montaCreateWithoutHembraInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    veterinario: usuariosCreateNestedOneWithoutMontas_supervisadasInput
    macho: animalesCreateNestedOneWithoutMontas_machoInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_montaInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutMontaInput
  }

  export type evento_montaUncheckedCreateWithoutHembraInput = {
    monta_id?: number
    usuario_veterinario_id: number
    animal_macho_id: number
    tipo_evento_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutMontaInput
  }

  export type evento_montaCreateOrConnectWithoutHembraInput = {
    where: evento_montaWhereUniqueInput
    create: XOR<evento_montaCreateWithoutHembraInput, evento_montaUncheckedCreateWithoutHembraInput>
  }

  export type evento_montaCreateManyHembraInputEnvelope = {
    data: evento_montaCreateManyHembraInput | evento_montaCreateManyHembraInput[]
    skipDuplicates?: boolean
  }

  export type evento_montaCreateWithoutMachoInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    veterinario: usuariosCreateNestedOneWithoutMontas_supervisadasInput
    hembra: animalesCreateNestedOneWithoutMontas_hembraInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_montaInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutMontaInput
  }

  export type evento_montaUncheckedCreateWithoutMachoInput = {
    monta_id?: number
    usuario_veterinario_id: number
    animal_hembra_id: number
    tipo_evento_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutMontaInput
  }

  export type evento_montaCreateOrConnectWithoutMachoInput = {
    where: evento_montaWhereUniqueInput
    create: XOR<evento_montaCreateWithoutMachoInput, evento_montaUncheckedCreateWithoutMachoInput>
  }

  export type evento_montaCreateManyMachoInputEnvelope = {
    data: evento_montaCreateManyMachoInput | evento_montaCreateManyMachoInput[]
    skipDuplicates?: boolean
  }

  export type evento_partoCreateWithoutAnimalInput = {
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    veterinario: usuariosCreateNestedOneWithoutPartos_veterinarioInput
    operador: usuariosCreateNestedOneWithoutPartos_operadorInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_partoInput
  }

  export type evento_partoUncheckedCreateWithoutAnimalInput = {
    evento_id?: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    tipo_evento_id: number
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_partoCreateOrConnectWithoutAnimalInput = {
    where: evento_partoWhereUniqueInput
    create: XOR<evento_partoCreateWithoutAnimalInput, evento_partoUncheckedCreateWithoutAnimalInput>
  }

  export type evento_partoCreateManyAnimalInputEnvelope = {
    data: evento_partoCreateManyAnimalInput | evento_partoCreateManyAnimalInput[]
    skipDuplicates?: boolean
  }

  export type animalesUpsertWithoutHijos_madreInput = {
    update: XOR<animalesUpdateWithoutHijos_madreInput, animalesUncheckedUpdateWithoutHijos_madreInput>
    create: XOR<animalesCreateWithoutHijos_madreInput, animalesUncheckedCreateWithoutHijos_madreInput>
    where?: animalesWhereInput
  }

  export type animalesUpdateToOneWithWhereWithoutHijos_madreInput = {
    where?: animalesWhereInput
    data: XOR<animalesUpdateWithoutHijos_madreInput, animalesUncheckedUpdateWithoutHijos_madreInput>
  }

  export type animalesUpdateWithoutHijos_madreInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutHijos_madreInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUpsertWithoutHijos_padreInput = {
    update: XOR<animalesUpdateWithoutHijos_padreInput, animalesUncheckedUpdateWithoutHijos_padreInput>
    create: XOR<animalesCreateWithoutHijos_padreInput, animalesUncheckedCreateWithoutHijos_padreInput>
    where?: animalesWhereInput
  }

  export type animalesUpdateToOneWithWhereWithoutHijos_padreInput = {
    where?: animalesWhereInput
    data: XOR<animalesUpdateWithoutHijos_padreInput, animalesUncheckedUpdateWithoutHijos_padreInput>
  }

  export type animalesUpdateWithoutHijos_padreInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutHijos_padreInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUpsertWithWhereUniqueWithoutMadreInput = {
    where: animalesWhereUniqueInput
    update: XOR<animalesUpdateWithoutMadreInput, animalesUncheckedUpdateWithoutMadreInput>
    create: XOR<animalesCreateWithoutMadreInput, animalesUncheckedCreateWithoutMadreInput>
  }

  export type animalesUpdateWithWhereUniqueWithoutMadreInput = {
    where: animalesWhereUniqueInput
    data: XOR<animalesUpdateWithoutMadreInput, animalesUncheckedUpdateWithoutMadreInput>
  }

  export type animalesUpdateManyWithWhereWithoutMadreInput = {
    where: animalesScalarWhereInput
    data: XOR<animalesUpdateManyMutationInput, animalesUncheckedUpdateManyWithoutMadreInput>
  }

  export type animalesUpsertWithWhereUniqueWithoutPadreInput = {
    where: animalesWhereUniqueInput
    update: XOR<animalesUpdateWithoutPadreInput, animalesUncheckedUpdateWithoutPadreInput>
    create: XOR<animalesCreateWithoutPadreInput, animalesUncheckedCreateWithoutPadreInput>
  }

  export type animalesUpdateWithWhereUniqueWithoutPadreInput = {
    where: animalesWhereUniqueInput
    data: XOR<animalesUpdateWithoutPadreInput, animalesUncheckedUpdateWithoutPadreInput>
  }

  export type animalesUpdateManyWithWhereWithoutPadreInput = {
    where: animalesScalarWhereInput
    data: XOR<animalesUpdateManyMutationInput, animalesUncheckedUpdateManyWithoutPadreInput>
  }

  export type lotesUpsertWithoutAnimalesInput = {
    update: XOR<lotesUpdateWithoutAnimalesInput, lotesUncheckedUpdateWithoutAnimalesInput>
    create: XOR<lotesCreateWithoutAnimalesInput, lotesUncheckedCreateWithoutAnimalesInput>
    where?: lotesWhereInput
  }

  export type lotesUpdateToOneWithWhereWithoutAnimalesInput = {
    where?: lotesWhereInput
    data: XOR<lotesUpdateWithoutAnimalesInput, lotesUncheckedUpdateWithoutAnimalesInput>
  }

  export type lotesUpdateWithoutAnimalesInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    potrero?: potrerosUpdateOneRequiredWithoutLotesNestedInput
  }

  export type lotesUncheckedUpdateWithoutAnimalesInput = {
    lote_id?: IntFieldUpdateOperationsInput | number
    potrero_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type razasUpsertWithoutAnimalesInput = {
    update: XOR<razasUpdateWithoutAnimalesInput, razasUncheckedUpdateWithoutAnimalesInput>
    create: XOR<razasCreateWithoutAnimalesInput, razasUncheckedCreateWithoutAnimalesInput>
    where?: razasWhereInput
  }

  export type razasUpdateToOneWithWhereWithoutAnimalesInput = {
    where?: razasWhereInput
    data: XOR<razasUpdateWithoutAnimalesInput, razasUncheckedUpdateWithoutAnimalesInput>
  }

  export type razasUpdateWithoutAnimalesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type razasUncheckedUpdateWithoutAnimalesInput = {
    raza_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_sanitarioUpsertWithWhereUniqueWithoutAnimalInput = {
    where: evento_sanitarioWhereUniqueInput
    update: XOR<evento_sanitarioUpdateWithoutAnimalInput, evento_sanitarioUncheckedUpdateWithoutAnimalInput>
    create: XOR<evento_sanitarioCreateWithoutAnimalInput, evento_sanitarioUncheckedCreateWithoutAnimalInput>
  }

  export type evento_sanitarioUpdateWithWhereUniqueWithoutAnimalInput = {
    where: evento_sanitarioWhereUniqueInput
    data: XOR<evento_sanitarioUpdateWithoutAnimalInput, evento_sanitarioUncheckedUpdateWithoutAnimalInput>
  }

  export type evento_sanitarioUpdateManyWithWhereWithoutAnimalInput = {
    where: evento_sanitarioScalarWhereInput
    data: XOR<evento_sanitarioUpdateManyMutationInput, evento_sanitarioUncheckedUpdateManyWithoutAnimalInput>
  }

  export type alimentacionUpsertWithWhereUniqueWithoutAnimalInput = {
    where: alimentacionWhereUniqueInput
    update: XOR<alimentacionUpdateWithoutAnimalInput, alimentacionUncheckedUpdateWithoutAnimalInput>
    create: XOR<alimentacionCreateWithoutAnimalInput, alimentacionUncheckedCreateWithoutAnimalInput>
  }

  export type alimentacionUpdateWithWhereUniqueWithoutAnimalInput = {
    where: alimentacionWhereUniqueInput
    data: XOR<alimentacionUpdateWithoutAnimalInput, alimentacionUncheckedUpdateWithoutAnimalInput>
  }

  export type alimentacionUpdateManyWithWhereWithoutAnimalInput = {
    where: alimentacionScalarWhereInput
    data: XOR<alimentacionUpdateManyMutationInput, alimentacionUncheckedUpdateManyWithoutAnimalInput>
  }

  export type pesajesUpsertWithWhereUniqueWithoutAnimalInput = {
    where: pesajesWhereUniqueInput
    update: XOR<pesajesUpdateWithoutAnimalInput, pesajesUncheckedUpdateWithoutAnimalInput>
    create: XOR<pesajesCreateWithoutAnimalInput, pesajesUncheckedCreateWithoutAnimalInput>
  }

  export type pesajesUpdateWithWhereUniqueWithoutAnimalInput = {
    where: pesajesWhereUniqueInput
    data: XOR<pesajesUpdateWithoutAnimalInput, pesajesUncheckedUpdateWithoutAnimalInput>
  }

  export type pesajesUpdateManyWithWhereWithoutAnimalInput = {
    where: pesajesScalarWhereInput
    data: XOR<pesajesUpdateManyMutationInput, pesajesUncheckedUpdateManyWithoutAnimalInput>
  }

  export type produccion_carneUpsertWithWhereUniqueWithoutAnimalInput = {
    where: produccion_carneWhereUniqueInput
    update: XOR<produccion_carneUpdateWithoutAnimalInput, produccion_carneUncheckedUpdateWithoutAnimalInput>
    create: XOR<produccion_carneCreateWithoutAnimalInput, produccion_carneUncheckedCreateWithoutAnimalInput>
  }

  export type produccion_carneUpdateWithWhereUniqueWithoutAnimalInput = {
    where: produccion_carneWhereUniqueInput
    data: XOR<produccion_carneUpdateWithoutAnimalInput, produccion_carneUncheckedUpdateWithoutAnimalInput>
  }

  export type produccion_carneUpdateManyWithWhereWithoutAnimalInput = {
    where: produccion_carneScalarWhereInput
    data: XOR<produccion_carneUpdateManyMutationInput, produccion_carneUncheckedUpdateManyWithoutAnimalInput>
  }

  export type produccion_lecheraUpsertWithWhereUniqueWithoutAnimalInput = {
    where: produccion_lecheraWhereUniqueInput
    update: XOR<produccion_lecheraUpdateWithoutAnimalInput, produccion_lecheraUncheckedUpdateWithoutAnimalInput>
    create: XOR<produccion_lecheraCreateWithoutAnimalInput, produccion_lecheraUncheckedCreateWithoutAnimalInput>
  }

  export type produccion_lecheraUpdateWithWhereUniqueWithoutAnimalInput = {
    where: produccion_lecheraWhereUniqueInput
    data: XOR<produccion_lecheraUpdateWithoutAnimalInput, produccion_lecheraUncheckedUpdateWithoutAnimalInput>
  }

  export type produccion_lecheraUpdateManyWithWhereWithoutAnimalInput = {
    where: produccion_lecheraScalarWhereInput
    data: XOR<produccion_lecheraUpdateManyMutationInput, produccion_lecheraUncheckedUpdateManyWithoutAnimalInput>
  }

  export type evento_montaUpsertWithWhereUniqueWithoutHembraInput = {
    where: evento_montaWhereUniqueInput
    update: XOR<evento_montaUpdateWithoutHembraInput, evento_montaUncheckedUpdateWithoutHembraInput>
    create: XOR<evento_montaCreateWithoutHembraInput, evento_montaUncheckedCreateWithoutHembraInput>
  }

  export type evento_montaUpdateWithWhereUniqueWithoutHembraInput = {
    where: evento_montaWhereUniqueInput
    data: XOR<evento_montaUpdateWithoutHembraInput, evento_montaUncheckedUpdateWithoutHembraInput>
  }

  export type evento_montaUpdateManyWithWhereWithoutHembraInput = {
    where: evento_montaScalarWhereInput
    data: XOR<evento_montaUpdateManyMutationInput, evento_montaUncheckedUpdateManyWithoutHembraInput>
  }

  export type evento_montaUpsertWithWhereUniqueWithoutMachoInput = {
    where: evento_montaWhereUniqueInput
    update: XOR<evento_montaUpdateWithoutMachoInput, evento_montaUncheckedUpdateWithoutMachoInput>
    create: XOR<evento_montaCreateWithoutMachoInput, evento_montaUncheckedCreateWithoutMachoInput>
  }

  export type evento_montaUpdateWithWhereUniqueWithoutMachoInput = {
    where: evento_montaWhereUniqueInput
    data: XOR<evento_montaUpdateWithoutMachoInput, evento_montaUncheckedUpdateWithoutMachoInput>
  }

  export type evento_montaUpdateManyWithWhereWithoutMachoInput = {
    where: evento_montaScalarWhereInput
    data: XOR<evento_montaUpdateManyMutationInput, evento_montaUncheckedUpdateManyWithoutMachoInput>
  }

  export type evento_partoUpsertWithWhereUniqueWithoutAnimalInput = {
    where: evento_partoWhereUniqueInput
    update: XOR<evento_partoUpdateWithoutAnimalInput, evento_partoUncheckedUpdateWithoutAnimalInput>
    create: XOR<evento_partoCreateWithoutAnimalInput, evento_partoUncheckedCreateWithoutAnimalInput>
  }

  export type evento_partoUpdateWithWhereUniqueWithoutAnimalInput = {
    where: evento_partoWhereUniqueInput
    data: XOR<evento_partoUpdateWithoutAnimalInput, evento_partoUncheckedUpdateWithoutAnimalInput>
  }

  export type evento_partoUpdateManyWithWhereWithoutAnimalInput = {
    where: evento_partoScalarWhereInput
    data: XOR<evento_partoUpdateManyMutationInput, evento_partoUncheckedUpdateManyWithoutAnimalInput>
  }

  export type comprasCreateWithoutProveedorInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    usuario_contable: usuariosCreateNestedOneWithoutCompras_realizadasInput
    detalle_compras?: detalle_comprasCreateNestedManyWithoutCompraInput
  }

  export type comprasUncheckedCreateWithoutProveedorInput = {
    compra_id?: number
    usuario_contable_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
    detalle_compras?: detalle_comprasUncheckedCreateNestedManyWithoutCompraInput
  }

  export type comprasCreateOrConnectWithoutProveedorInput = {
    where: comprasWhereUniqueInput
    create: XOR<comprasCreateWithoutProveedorInput, comprasUncheckedCreateWithoutProveedorInput>
  }

  export type comprasCreateManyProveedorInputEnvelope = {
    data: comprasCreateManyProveedorInput | comprasCreateManyProveedorInput[]
    skipDuplicates?: boolean
  }

  export type comprasUpsertWithWhereUniqueWithoutProveedorInput = {
    where: comprasWhereUniqueInput
    update: XOR<comprasUpdateWithoutProveedorInput, comprasUncheckedUpdateWithoutProveedorInput>
    create: XOR<comprasCreateWithoutProveedorInput, comprasUncheckedCreateWithoutProveedorInput>
  }

  export type comprasUpdateWithWhereUniqueWithoutProveedorInput = {
    where: comprasWhereUniqueInput
    data: XOR<comprasUpdateWithoutProveedorInput, comprasUncheckedUpdateWithoutProveedorInput>
  }

  export type comprasUpdateManyWithWhereWithoutProveedorInput = {
    where: comprasScalarWhereInput
    data: XOR<comprasUpdateManyMutationInput, comprasUncheckedUpdateManyWithoutProveedorInput>
  }

  export type usuariosCreateWithoutCompras_realizadasInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutCompras_realizadasInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutCompras_realizadasInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutCompras_realizadasInput, usuariosUncheckedCreateWithoutCompras_realizadasInput>
  }

  export type proveedoresCreateWithoutComprasInput = {
    nombre_compañia: string
    nombre_contacto?: string | null
    telefono?: string | null
    deleted_at?: Date | string | null
  }

  export type proveedoresUncheckedCreateWithoutComprasInput = {
    proveedor_id?: number
    nombre_compañia: string
    nombre_contacto?: string | null
    telefono?: string | null
    deleted_at?: Date | string | null
  }

  export type proveedoresCreateOrConnectWithoutComprasInput = {
    where: proveedoresWhereUniqueInput
    create: XOR<proveedoresCreateWithoutComprasInput, proveedoresUncheckedCreateWithoutComprasInput>
  }

  export type detalle_comprasCreateWithoutCompraInput = {
    precio: Decimal | DecimalJsLike | number | string
    cantidad: number
    deleted_at?: Date | string | null
    insumo: insumosCreateNestedOneWithoutDetalle_comprasInput
  }

  export type detalle_comprasUncheckedCreateWithoutCompraInput = {
    detalle_id?: number
    insumo_id: number
    precio: Decimal | DecimalJsLike | number | string
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type detalle_comprasCreateOrConnectWithoutCompraInput = {
    where: detalle_comprasWhereUniqueInput
    create: XOR<detalle_comprasCreateWithoutCompraInput, detalle_comprasUncheckedCreateWithoutCompraInput>
  }

  export type detalle_comprasCreateManyCompraInputEnvelope = {
    data: detalle_comprasCreateManyCompraInput | detalle_comprasCreateManyCompraInput[]
    skipDuplicates?: boolean
  }

  export type usuariosUpsertWithoutCompras_realizadasInput = {
    update: XOR<usuariosUpdateWithoutCompras_realizadasInput, usuariosUncheckedUpdateWithoutCompras_realizadasInput>
    create: XOR<usuariosCreateWithoutCompras_realizadasInput, usuariosUncheckedCreateWithoutCompras_realizadasInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutCompras_realizadasInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutCompras_realizadasInput, usuariosUncheckedUpdateWithoutCompras_realizadasInput>
  }

  export type usuariosUpdateWithoutCompras_realizadasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutCompras_realizadasInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type proveedoresUpsertWithoutComprasInput = {
    update: XOR<proveedoresUpdateWithoutComprasInput, proveedoresUncheckedUpdateWithoutComprasInput>
    create: XOR<proveedoresCreateWithoutComprasInput, proveedoresUncheckedCreateWithoutComprasInput>
    where?: proveedoresWhereInput
  }

  export type proveedoresUpdateToOneWithWhereWithoutComprasInput = {
    where?: proveedoresWhereInput
    data: XOR<proveedoresUpdateWithoutComprasInput, proveedoresUncheckedUpdateWithoutComprasInput>
  }

  export type proveedoresUpdateWithoutComprasInput = {
    nombre_compañia?: StringFieldUpdateOperationsInput | string
    nombre_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type proveedoresUncheckedUpdateWithoutComprasInput = {
    proveedor_id?: IntFieldUpdateOperationsInput | number
    nombre_compañia?: StringFieldUpdateOperationsInput | string
    nombre_contacto?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalle_comprasUpsertWithWhereUniqueWithoutCompraInput = {
    where: detalle_comprasWhereUniqueInput
    update: XOR<detalle_comprasUpdateWithoutCompraInput, detalle_comprasUncheckedUpdateWithoutCompraInput>
    create: XOR<detalle_comprasCreateWithoutCompraInput, detalle_comprasUncheckedCreateWithoutCompraInput>
  }

  export type detalle_comprasUpdateWithWhereUniqueWithoutCompraInput = {
    where: detalle_comprasWhereUniqueInput
    data: XOR<detalle_comprasUpdateWithoutCompraInput, detalle_comprasUncheckedUpdateWithoutCompraInput>
  }

  export type detalle_comprasUpdateManyWithWhereWithoutCompraInput = {
    where: detalle_comprasScalarWhereInput
    data: XOR<detalle_comprasUpdateManyMutationInput, detalle_comprasUncheckedUpdateManyWithoutCompraInput>
  }

  export type comprasCreateWithoutDetalle_comprasInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    usuario_contable: usuariosCreateNestedOneWithoutCompras_realizadasInput
    proveedor: proveedoresCreateNestedOneWithoutComprasInput
  }

  export type comprasUncheckedCreateWithoutDetalle_comprasInput = {
    compra_id?: number
    usuario_contable_id: number
    proveedor_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type comprasCreateOrConnectWithoutDetalle_comprasInput = {
    where: comprasWhereUniqueInput
    create: XOR<comprasCreateWithoutDetalle_comprasInput, comprasUncheckedCreateWithoutDetalle_comprasInput>
  }

  export type insumosCreateWithoutDetalle_comprasInput = {
    nombre: string
    cantidad: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    tipo_insumo: tipo_insumoCreateNestedOneWithoutInsumosInput
    unidad: unidadesCreateNestedOneWithoutInsumosInput
    evento_insumos?: evento_insumoCreateNestedManyWithoutInsumoInput
    alimentaciones?: alimentacionCreateNestedManyWithoutInsumoInput
  }

  export type insumosUncheckedCreateWithoutDetalle_comprasInput = {
    insumo_id?: number
    tipo_insumo_id: number
    nombre: string
    cantidad: number
    unidad_id: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    evento_insumos?: evento_insumoUncheckedCreateNestedManyWithoutInsumoInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutInsumoInput
  }

  export type insumosCreateOrConnectWithoutDetalle_comprasInput = {
    where: insumosWhereUniqueInput
    create: XOR<insumosCreateWithoutDetalle_comprasInput, insumosUncheckedCreateWithoutDetalle_comprasInput>
  }

  export type comprasUpsertWithoutDetalle_comprasInput = {
    update: XOR<comprasUpdateWithoutDetalle_comprasInput, comprasUncheckedUpdateWithoutDetalle_comprasInput>
    create: XOR<comprasCreateWithoutDetalle_comprasInput, comprasUncheckedCreateWithoutDetalle_comprasInput>
    where?: comprasWhereInput
  }

  export type comprasUpdateToOneWithWhereWithoutDetalle_comprasInput = {
    where?: comprasWhereInput
    data: XOR<comprasUpdateWithoutDetalle_comprasInput, comprasUncheckedUpdateWithoutDetalle_comprasInput>
  }

  export type comprasUpdateWithoutDetalle_comprasInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario_contable?: usuariosUpdateOneRequiredWithoutCompras_realizadasNestedInput
    proveedor?: proveedoresUpdateOneRequiredWithoutComprasNestedInput
  }

  export type comprasUncheckedUpdateWithoutDetalle_comprasInput = {
    compra_id?: IntFieldUpdateOperationsInput | number
    usuario_contable_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type insumosUpsertWithoutDetalle_comprasInput = {
    update: XOR<insumosUpdateWithoutDetalle_comprasInput, insumosUncheckedUpdateWithoutDetalle_comprasInput>
    create: XOR<insumosCreateWithoutDetalle_comprasInput, insumosUncheckedCreateWithoutDetalle_comprasInput>
    where?: insumosWhereInput
  }

  export type insumosUpdateToOneWithWhereWithoutDetalle_comprasInput = {
    where?: insumosWhereInput
    data: XOR<insumosUpdateWithoutDetalle_comprasInput, insumosUncheckedUpdateWithoutDetalle_comprasInput>
  }

  export type insumosUpdateWithoutDetalle_comprasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_insumo?: tipo_insumoUpdateOneRequiredWithoutInsumosNestedInput
    unidad?: unidadesUpdateOneRequiredWithoutInsumosNestedInput
    evento_insumos?: evento_insumoUpdateManyWithoutInsumoNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutInsumoNestedInput
  }

  export type insumosUncheckedUpdateWithoutDetalle_comprasInput = {
    insumo_id?: IntFieldUpdateOperationsInput | number
    tipo_insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evento_insumos?: evento_insumoUncheckedUpdateManyWithoutInsumoNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutInsumoNestedInput
  }

  export type animalesCreateWithoutEventos_sanitariosInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutEventos_sanitariosInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutEventos_sanitariosInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutEventos_sanitariosInput, animalesUncheckedCreateWithoutEventos_sanitariosInput>
  }

  export type tipo_eventoCreateWithoutEventos_sanitariosInput = {
    nombre: string
    deleted_at?: Date | string | null
    padre?: tipo_eventoCreateNestedOneWithoutHijosInput
    hijos?: tipo_eventoCreateNestedManyWithoutPadreInput
    eventos_monta?: evento_montaCreateNestedManyWithoutTipo_eventoInput
    eventos_parto?: evento_partoCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoUncheckedCreateWithoutEventos_sanitariosInput = {
    tipo_evento_id?: number
    nombre: string
    padre_id?: number | null
    deleted_at?: Date | string | null
    hijos?: tipo_eventoUncheckedCreateNestedManyWithoutPadreInput
    eventos_monta?: evento_montaUncheckedCreateNestedManyWithoutTipo_eventoInput
    eventos_parto?: evento_partoUncheckedCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoCreateOrConnectWithoutEventos_sanitariosInput = {
    where: tipo_eventoWhereUniqueInput
    create: XOR<tipo_eventoCreateWithoutEventos_sanitariosInput, tipo_eventoUncheckedCreateWithoutEventos_sanitariosInput>
  }

  export type usuariosCreateWithoutEventos_veterinarioInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutEventos_veterinarioInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutEventos_veterinarioInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutEventos_veterinarioInput, usuariosUncheckedCreateWithoutEventos_veterinarioInput>
  }

  export type usuariosCreateWithoutEventos_operadorInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutEventos_operadorInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutEventos_operadorInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutEventos_operadorInput, usuariosUncheckedCreateWithoutEventos_operadorInput>
  }

  export type evento_insumoCreateWithoutEvento_sanitarioInput = {
    cantidad: number
    deleted_at?: Date | string | null
    insumo: insumosCreateNestedOneWithoutEvento_insumosInput
  }

  export type evento_insumoUncheckedCreateWithoutEvento_sanitarioInput = {
    insumo_id: number
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type evento_insumoCreateOrConnectWithoutEvento_sanitarioInput = {
    where: evento_insumoWhereUniqueInput
    create: XOR<evento_insumoCreateWithoutEvento_sanitarioInput, evento_insumoUncheckedCreateWithoutEvento_sanitarioInput>
  }

  export type evento_insumoCreateManyEvento_sanitarioInputEnvelope = {
    data: evento_insumoCreateManyEvento_sanitarioInput | evento_insumoCreateManyEvento_sanitarioInput[]
    skipDuplicates?: boolean
  }

  export type animalesUpsertWithoutEventos_sanitariosInput = {
    update: XOR<animalesUpdateWithoutEventos_sanitariosInput, animalesUncheckedUpdateWithoutEventos_sanitariosInput>
    create: XOR<animalesCreateWithoutEventos_sanitariosInput, animalesUncheckedCreateWithoutEventos_sanitariosInput>
    where?: animalesWhereInput
  }

  export type animalesUpdateToOneWithWhereWithoutEventos_sanitariosInput = {
    where?: animalesWhereInput
    data: XOR<animalesUpdateWithoutEventos_sanitariosInput, animalesUncheckedUpdateWithoutEventos_sanitariosInput>
  }

  export type animalesUpdateWithoutEventos_sanitariosInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutEventos_sanitariosInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type tipo_eventoUpsertWithoutEventos_sanitariosInput = {
    update: XOR<tipo_eventoUpdateWithoutEventos_sanitariosInput, tipo_eventoUncheckedUpdateWithoutEventos_sanitariosInput>
    create: XOR<tipo_eventoCreateWithoutEventos_sanitariosInput, tipo_eventoUncheckedCreateWithoutEventos_sanitariosInput>
    where?: tipo_eventoWhereInput
  }

  export type tipo_eventoUpdateToOneWithWhereWithoutEventos_sanitariosInput = {
    where?: tipo_eventoWhereInput
    data: XOR<tipo_eventoUpdateWithoutEventos_sanitariosInput, tipo_eventoUncheckedUpdateWithoutEventos_sanitariosInput>
  }

  export type tipo_eventoUpdateWithoutEventos_sanitariosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    padre?: tipo_eventoUpdateOneWithoutHijosNestedInput
    hijos?: tipo_eventoUpdateManyWithoutPadreNestedInput
    eventos_monta?: evento_montaUpdateManyWithoutTipo_eventoNestedInput
    eventos_parto?: evento_partoUpdateManyWithoutTipo_eventoNestedInput
  }

  export type tipo_eventoUncheckedUpdateWithoutEventos_sanitariosInput = {
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos?: tipo_eventoUncheckedUpdateManyWithoutPadreNestedInput
    eventos_monta?: evento_montaUncheckedUpdateManyWithoutTipo_eventoNestedInput
    eventos_parto?: evento_partoUncheckedUpdateManyWithoutTipo_eventoNestedInput
  }

  export type usuariosUpsertWithoutEventos_veterinarioInput = {
    update: XOR<usuariosUpdateWithoutEventos_veterinarioInput, usuariosUncheckedUpdateWithoutEventos_veterinarioInput>
    create: XOR<usuariosCreateWithoutEventos_veterinarioInput, usuariosUncheckedCreateWithoutEventos_veterinarioInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutEventos_veterinarioInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutEventos_veterinarioInput, usuariosUncheckedUpdateWithoutEventos_veterinarioInput>
  }

  export type usuariosUpdateWithoutEventos_veterinarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutEventos_veterinarioInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUpsertWithoutEventos_operadorInput = {
    update: XOR<usuariosUpdateWithoutEventos_operadorInput, usuariosUncheckedUpdateWithoutEventos_operadorInput>
    create: XOR<usuariosCreateWithoutEventos_operadorInput, usuariosUncheckedCreateWithoutEventos_operadorInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutEventos_operadorInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutEventos_operadorInput, usuariosUncheckedUpdateWithoutEventos_operadorInput>
  }

  export type usuariosUpdateWithoutEventos_operadorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutEventos_operadorInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type evento_insumoUpsertWithWhereUniqueWithoutEvento_sanitarioInput = {
    where: evento_insumoWhereUniqueInput
    update: XOR<evento_insumoUpdateWithoutEvento_sanitarioInput, evento_insumoUncheckedUpdateWithoutEvento_sanitarioInput>
    create: XOR<evento_insumoCreateWithoutEvento_sanitarioInput, evento_insumoUncheckedCreateWithoutEvento_sanitarioInput>
  }

  export type evento_insumoUpdateWithWhereUniqueWithoutEvento_sanitarioInput = {
    where: evento_insumoWhereUniqueInput
    data: XOR<evento_insumoUpdateWithoutEvento_sanitarioInput, evento_insumoUncheckedUpdateWithoutEvento_sanitarioInput>
  }

  export type evento_insumoUpdateManyWithWhereWithoutEvento_sanitarioInput = {
    where: evento_insumoScalarWhereInput
    data: XOR<evento_insumoUpdateManyMutationInput, evento_insumoUncheckedUpdateManyWithoutEvento_sanitarioInput>
  }

  export type evento_sanitarioCreateWithoutInsumos_usadosInput = {
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    animal: animalesCreateNestedOneWithoutEventos_sanitariosInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_sanitariosInput
    veterinario: usuariosCreateNestedOneWithoutEventos_veterinarioInput
    operador: usuariosCreateNestedOneWithoutEventos_operadorInput
  }

  export type evento_sanitarioUncheckedCreateWithoutInsumos_usadosInput = {
    evento_sanitario_id?: number
    animal_id: number
    tipo_evento_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_sanitarioCreateOrConnectWithoutInsumos_usadosInput = {
    where: evento_sanitarioWhereUniqueInput
    create: XOR<evento_sanitarioCreateWithoutInsumos_usadosInput, evento_sanitarioUncheckedCreateWithoutInsumos_usadosInput>
  }

  export type insumosCreateWithoutEvento_insumosInput = {
    nombre: string
    cantidad: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    tipo_insumo: tipo_insumoCreateNestedOneWithoutInsumosInput
    unidad: unidadesCreateNestedOneWithoutInsumosInput
    detalle_compras?: detalle_comprasCreateNestedManyWithoutInsumoInput
    alimentaciones?: alimentacionCreateNestedManyWithoutInsumoInput
  }

  export type insumosUncheckedCreateWithoutEvento_insumosInput = {
    insumo_id?: number
    tipo_insumo_id: number
    nombre: string
    cantidad: number
    unidad_id: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    detalle_compras?: detalle_comprasUncheckedCreateNestedManyWithoutInsumoInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutInsumoInput
  }

  export type insumosCreateOrConnectWithoutEvento_insumosInput = {
    where: insumosWhereUniqueInput
    create: XOR<insumosCreateWithoutEvento_insumosInput, insumosUncheckedCreateWithoutEvento_insumosInput>
  }

  export type evento_sanitarioUpsertWithoutInsumos_usadosInput = {
    update: XOR<evento_sanitarioUpdateWithoutInsumos_usadosInput, evento_sanitarioUncheckedUpdateWithoutInsumos_usadosInput>
    create: XOR<evento_sanitarioCreateWithoutInsumos_usadosInput, evento_sanitarioUncheckedCreateWithoutInsumos_usadosInput>
    where?: evento_sanitarioWhereInput
  }

  export type evento_sanitarioUpdateToOneWithWhereWithoutInsumos_usadosInput = {
    where?: evento_sanitarioWhereInput
    data: XOR<evento_sanitarioUpdateWithoutInsumos_usadosInput, evento_sanitarioUncheckedUpdateWithoutInsumos_usadosInput>
  }

  export type evento_sanitarioUpdateWithoutInsumos_usadosInput = {
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutEventos_sanitariosNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_sanitariosNestedInput
    veterinario?: usuariosUpdateOneRequiredWithoutEventos_veterinarioNestedInput
    operador?: usuariosUpdateOneRequiredWithoutEventos_operadorNestedInput
  }

  export type evento_sanitarioUncheckedUpdateWithoutInsumos_usadosInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type insumosUpsertWithoutEvento_insumosInput = {
    update: XOR<insumosUpdateWithoutEvento_insumosInput, insumosUncheckedUpdateWithoutEvento_insumosInput>
    create: XOR<insumosCreateWithoutEvento_insumosInput, insumosUncheckedCreateWithoutEvento_insumosInput>
    where?: insumosWhereInput
  }

  export type insumosUpdateToOneWithWhereWithoutEvento_insumosInput = {
    where?: insumosWhereInput
    data: XOR<insumosUpdateWithoutEvento_insumosInput, insumosUncheckedUpdateWithoutEvento_insumosInput>
  }

  export type insumosUpdateWithoutEvento_insumosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_insumo?: tipo_insumoUpdateOneRequiredWithoutInsumosNestedInput
    unidad?: unidadesUpdateOneRequiredWithoutInsumosNestedInput
    detalle_compras?: detalle_comprasUpdateManyWithoutInsumoNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutInsumoNestedInput
  }

  export type insumosUncheckedUpdateWithoutEvento_insumosInput = {
    insumo_id?: IntFieldUpdateOperationsInput | number
    tipo_insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_compras?: detalle_comprasUncheckedUpdateManyWithoutInsumoNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutInsumoNestedInput
  }

  export type insumosCreateWithoutAlimentacionesInput = {
    nombre: string
    cantidad: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    tipo_insumo: tipo_insumoCreateNestedOneWithoutInsumosInput
    unidad: unidadesCreateNestedOneWithoutInsumosInput
    detalle_compras?: detalle_comprasCreateNestedManyWithoutInsumoInput
    evento_insumos?: evento_insumoCreateNestedManyWithoutInsumoInput
  }

  export type insumosUncheckedCreateWithoutAlimentacionesInput = {
    insumo_id?: number
    tipo_insumo_id: number
    nombre: string
    cantidad: number
    unidad_id: number
    descripcion?: string | null
    deleted_at?: Date | string | null
    detalle_compras?: detalle_comprasUncheckedCreateNestedManyWithoutInsumoInput
    evento_insumos?: evento_insumoUncheckedCreateNestedManyWithoutInsumoInput
  }

  export type insumosCreateOrConnectWithoutAlimentacionesInput = {
    where: insumosWhereUniqueInput
    create: XOR<insumosCreateWithoutAlimentacionesInput, insumosUncheckedCreateWithoutAlimentacionesInput>
  }

  export type usuariosCreateWithoutAlimentacionesInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutAlimentacionesInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutAlimentacionesInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutAlimentacionesInput, usuariosUncheckedCreateWithoutAlimentacionesInput>
  }

  export type animalesCreateWithoutAlimentacionesInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutAlimentacionesInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutAlimentacionesInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutAlimentacionesInput, animalesUncheckedCreateWithoutAlimentacionesInput>
  }

  export type insumosUpsertWithoutAlimentacionesInput = {
    update: XOR<insumosUpdateWithoutAlimentacionesInput, insumosUncheckedUpdateWithoutAlimentacionesInput>
    create: XOR<insumosCreateWithoutAlimentacionesInput, insumosUncheckedCreateWithoutAlimentacionesInput>
    where?: insumosWhereInput
  }

  export type insumosUpdateToOneWithWhereWithoutAlimentacionesInput = {
    where?: insumosWhereInput
    data: XOR<insumosUpdateWithoutAlimentacionesInput, insumosUncheckedUpdateWithoutAlimentacionesInput>
  }

  export type insumosUpdateWithoutAlimentacionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_insumo?: tipo_insumoUpdateOneRequiredWithoutInsumosNestedInput
    unidad?: unidadesUpdateOneRequiredWithoutInsumosNestedInput
    detalle_compras?: detalle_comprasUpdateManyWithoutInsumoNestedInput
    evento_insumos?: evento_insumoUpdateManyWithoutInsumoNestedInput
  }

  export type insumosUncheckedUpdateWithoutAlimentacionesInput = {
    insumo_id?: IntFieldUpdateOperationsInput | number
    tipo_insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_compras?: detalle_comprasUncheckedUpdateManyWithoutInsumoNestedInput
    evento_insumos?: evento_insumoUncheckedUpdateManyWithoutInsumoNestedInput
  }

  export type usuariosUpsertWithoutAlimentacionesInput = {
    update: XOR<usuariosUpdateWithoutAlimentacionesInput, usuariosUncheckedUpdateWithoutAlimentacionesInput>
    create: XOR<usuariosCreateWithoutAlimentacionesInput, usuariosUncheckedCreateWithoutAlimentacionesInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutAlimentacionesInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutAlimentacionesInput, usuariosUncheckedUpdateWithoutAlimentacionesInput>
  }

  export type usuariosUpdateWithoutAlimentacionesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutAlimentacionesInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type animalesUpsertWithoutAlimentacionesInput = {
    update: XOR<animalesUpdateWithoutAlimentacionesInput, animalesUncheckedUpdateWithoutAlimentacionesInput>
    create: XOR<animalesCreateWithoutAlimentacionesInput, animalesUncheckedCreateWithoutAlimentacionesInput>
    where?: animalesWhereInput
  }

  export type animalesUpdateToOneWithWhereWithoutAlimentacionesInput = {
    where?: animalesWhereInput
    data: XOR<animalesUpdateWithoutAlimentacionesInput, animalesUncheckedUpdateWithoutAlimentacionesInput>
  }

  export type animalesUpdateWithoutAlimentacionesInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutAlimentacionesInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type usuariosCreateWithoutPesajes_realizadosInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutPesajes_realizadosInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutPesajes_realizadosInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutPesajes_realizadosInput, usuariosUncheckedCreateWithoutPesajes_realizadosInput>
  }

  export type animalesCreateWithoutPesajesInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutPesajesInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutPesajesInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutPesajesInput, animalesUncheckedCreateWithoutPesajesInput>
  }

  export type unidadesCreateWithoutPesajesInput = {
    nombre: string
    deleted_at?: Date | string | null
    insumos?: insumosCreateNestedManyWithoutUnidadInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUnidadInput
  }

  export type unidadesUncheckedCreateWithoutPesajesInput = {
    unidad_id?: number
    nombre: string
    deleted_at?: Date | string | null
    insumos?: insumosUncheckedCreateNestedManyWithoutUnidadInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUnidadInput
  }

  export type unidadesCreateOrConnectWithoutPesajesInput = {
    where: unidadesWhereUniqueInput
    create: XOR<unidadesCreateWithoutPesajesInput, unidadesUncheckedCreateWithoutPesajesInput>
  }

  export type usuariosUpsertWithoutPesajes_realizadosInput = {
    update: XOR<usuariosUpdateWithoutPesajes_realizadosInput, usuariosUncheckedUpdateWithoutPesajes_realizadosInput>
    create: XOR<usuariosCreateWithoutPesajes_realizadosInput, usuariosUncheckedCreateWithoutPesajes_realizadosInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutPesajes_realizadosInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutPesajes_realizadosInput, usuariosUncheckedUpdateWithoutPesajes_realizadosInput>
  }

  export type usuariosUpdateWithoutPesajes_realizadosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutPesajes_realizadosInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type animalesUpsertWithoutPesajesInput = {
    update: XOR<animalesUpdateWithoutPesajesInput, animalesUncheckedUpdateWithoutPesajesInput>
    create: XOR<animalesCreateWithoutPesajesInput, animalesUncheckedCreateWithoutPesajesInput>
    where?: animalesWhereInput
  }

  export type animalesUpdateToOneWithWhereWithoutPesajesInput = {
    where?: animalesWhereInput
    data: XOR<animalesUpdateWithoutPesajesInput, animalesUncheckedUpdateWithoutPesajesInput>
  }

  export type animalesUpdateWithoutPesajesInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutPesajesInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type unidadesUpsertWithoutPesajesInput = {
    update: XOR<unidadesUpdateWithoutPesajesInput, unidadesUncheckedUpdateWithoutPesajesInput>
    create: XOR<unidadesCreateWithoutPesajesInput, unidadesUncheckedCreateWithoutPesajesInput>
    where?: unidadesWhereInput
  }

  export type unidadesUpdateToOneWithWhereWithoutPesajesInput = {
    where?: unidadesWhereInput
    data: XOR<unidadesUpdateWithoutPesajesInput, unidadesUncheckedUpdateWithoutPesajesInput>
  }

  export type unidadesUpdateWithoutPesajesInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos?: insumosUpdateManyWithoutUnidadNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUnidadNestedInput
  }

  export type unidadesUncheckedUpdateWithoutPesajesInput = {
    unidad_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos?: insumosUncheckedUpdateManyWithoutUnidadNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUnidadNestedInput
  }

  export type animalesCreateWithoutProducciones_carneInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutProducciones_carneInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutProducciones_carneInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutProducciones_carneInput, animalesUncheckedCreateWithoutProducciones_carneInput>
  }

  export type usuariosCreateWithoutProducciones_carneInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutProducciones_carneInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutProducciones_carneInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutProducciones_carneInput, usuariosUncheckedCreateWithoutProducciones_carneInput>
  }

  export type animalesUpsertWithoutProducciones_carneInput = {
    update: XOR<animalesUpdateWithoutProducciones_carneInput, animalesUncheckedUpdateWithoutProducciones_carneInput>
    create: XOR<animalesCreateWithoutProducciones_carneInput, animalesUncheckedCreateWithoutProducciones_carneInput>
    where?: animalesWhereInput
  }

  export type animalesUpdateToOneWithWhereWithoutProducciones_carneInput = {
    where?: animalesWhereInput
    data: XOR<animalesUpdateWithoutProducciones_carneInput, animalesUncheckedUpdateWithoutProducciones_carneInput>
  }

  export type animalesUpdateWithoutProducciones_carneInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutProducciones_carneInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type usuariosUpsertWithoutProducciones_carneInput = {
    update: XOR<usuariosUpdateWithoutProducciones_carneInput, usuariosUncheckedUpdateWithoutProducciones_carneInput>
    create: XOR<usuariosCreateWithoutProducciones_carneInput, usuariosUncheckedCreateWithoutProducciones_carneInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutProducciones_carneInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutProducciones_carneInput, usuariosUncheckedUpdateWithoutProducciones_carneInput>
  }

  export type usuariosUpdateWithoutProducciones_carneInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutProducciones_carneInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosCreateWithoutProducciones_lecheInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutProducciones_lecheInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutProducciones_lecheInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutProducciones_lecheInput, usuariosUncheckedCreateWithoutProducciones_lecheInput>
  }

  export type animalesCreateWithoutProducciones_lecheInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutProducciones_lecheInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutProducciones_lecheInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutProducciones_lecheInput, animalesUncheckedCreateWithoutProducciones_lecheInput>
  }

  export type unidadesCreateWithoutProducciones_lecheInput = {
    nombre: string
    deleted_at?: Date | string | null
    insumos?: insumosCreateNestedManyWithoutUnidadInput
    pesajes?: pesajesCreateNestedManyWithoutUnidadInput
  }

  export type unidadesUncheckedCreateWithoutProducciones_lecheInput = {
    unidad_id?: number
    nombre: string
    deleted_at?: Date | string | null
    insumos?: insumosUncheckedCreateNestedManyWithoutUnidadInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutUnidadInput
  }

  export type unidadesCreateOrConnectWithoutProducciones_lecheInput = {
    where: unidadesWhereUniqueInput
    create: XOR<unidadesCreateWithoutProducciones_lecheInput, unidadesUncheckedCreateWithoutProducciones_lecheInput>
  }

  export type usuariosUpsertWithoutProducciones_lecheInput = {
    update: XOR<usuariosUpdateWithoutProducciones_lecheInput, usuariosUncheckedUpdateWithoutProducciones_lecheInput>
    create: XOR<usuariosCreateWithoutProducciones_lecheInput, usuariosUncheckedCreateWithoutProducciones_lecheInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutProducciones_lecheInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutProducciones_lecheInput, usuariosUncheckedUpdateWithoutProducciones_lecheInput>
  }

  export type usuariosUpdateWithoutProducciones_lecheInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutProducciones_lecheInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type animalesUpsertWithoutProducciones_lecheInput = {
    update: XOR<animalesUpdateWithoutProducciones_lecheInput, animalesUncheckedUpdateWithoutProducciones_lecheInput>
    create: XOR<animalesCreateWithoutProducciones_lecheInput, animalesUncheckedCreateWithoutProducciones_lecheInput>
    where?: animalesWhereInput
  }

  export type animalesUpdateToOneWithWhereWithoutProducciones_lecheInput = {
    where?: animalesWhereInput
    data: XOR<animalesUpdateWithoutProducciones_lecheInput, animalesUncheckedUpdateWithoutProducciones_lecheInput>
  }

  export type animalesUpdateWithoutProducciones_lecheInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutProducciones_lecheInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type unidadesUpsertWithoutProducciones_lecheInput = {
    update: XOR<unidadesUpdateWithoutProducciones_lecheInput, unidadesUncheckedUpdateWithoutProducciones_lecheInput>
    create: XOR<unidadesCreateWithoutProducciones_lecheInput, unidadesUncheckedCreateWithoutProducciones_lecheInput>
    where?: unidadesWhereInput
  }

  export type unidadesUpdateToOneWithWhereWithoutProducciones_lecheInput = {
    where?: unidadesWhereInput
    data: XOR<unidadesUpdateWithoutProducciones_lecheInput, unidadesUncheckedUpdateWithoutProducciones_lecheInput>
  }

  export type unidadesUpdateWithoutProducciones_lecheInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos?: insumosUpdateManyWithoutUnidadNestedInput
    pesajes?: pesajesUpdateManyWithoutUnidadNestedInput
  }

  export type unidadesUncheckedUpdateWithoutProducciones_lecheInput = {
    unidad_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos?: insumosUncheckedUpdateManyWithoutUnidadNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutUnidadNestedInput
  }

  export type usuariosCreateWithoutMontas_supervisadasInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutMontas_supervisadasInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutMontas_supervisadasInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutMontas_supervisadasInput, usuariosUncheckedCreateWithoutMontas_supervisadasInput>
  }

  export type animalesCreateWithoutMontas_hembraInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutMontas_hembraInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutMontas_hembraInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutMontas_hembraInput, animalesUncheckedCreateWithoutMontas_hembraInput>
  }

  export type animalesCreateWithoutMontas_machoInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    partos?: evento_partoCreateNestedManyWithoutAnimalInput
  }

  export type animalesUncheckedCreateWithoutMontas_machoInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    partos?: evento_partoUncheckedCreateNestedManyWithoutAnimalInput
  }

  export type animalesCreateOrConnectWithoutMontas_machoInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutMontas_machoInput, animalesUncheckedCreateWithoutMontas_machoInput>
  }

  export type tipo_eventoCreateWithoutEventos_montaInput = {
    nombre: string
    deleted_at?: Date | string | null
    padre?: tipo_eventoCreateNestedOneWithoutHijosInput
    hijos?: tipo_eventoCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutTipo_eventoInput
    eventos_parto?: evento_partoCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoUncheckedCreateWithoutEventos_montaInput = {
    tipo_evento_id?: number
    nombre: string
    padre_id?: number | null
    deleted_at?: Date | string | null
    hijos?: tipo_eventoUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutTipo_eventoInput
    eventos_parto?: evento_partoUncheckedCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoCreateOrConnectWithoutEventos_montaInput = {
    where: tipo_eventoWhereUniqueInput
    create: XOR<tipo_eventoCreateWithoutEventos_montaInput, tipo_eventoUncheckedCreateWithoutEventos_montaInput>
  }

  export type diagnostico_preñezCreateWithoutMontaInput = {
    metodo?: string | null
    resultado?: boolean | null
    fecha_probable_parto?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
    veterinario: usuariosCreateNestedOneWithoutDiagnosticosInput
  }

  export type diagnostico_preñezUncheckedCreateWithoutMontaInput = {
    preñez_id?: number
    usuario_veterinario_id: number
    metodo?: string | null
    resultado?: boolean | null
    fecha_probable_parto?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type diagnostico_preñezCreateOrConnectWithoutMontaInput = {
    where: diagnostico_preñezWhereUniqueInput
    create: XOR<diagnostico_preñezCreateWithoutMontaInput, diagnostico_preñezUncheckedCreateWithoutMontaInput>
  }

  export type diagnostico_preñezCreateManyMontaInputEnvelope = {
    data: diagnostico_preñezCreateManyMontaInput | diagnostico_preñezCreateManyMontaInput[]
    skipDuplicates?: boolean
  }

  export type usuariosUpsertWithoutMontas_supervisadasInput = {
    update: XOR<usuariosUpdateWithoutMontas_supervisadasInput, usuariosUncheckedUpdateWithoutMontas_supervisadasInput>
    create: XOR<usuariosCreateWithoutMontas_supervisadasInput, usuariosUncheckedCreateWithoutMontas_supervisadasInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutMontas_supervisadasInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutMontas_supervisadasInput, usuariosUncheckedUpdateWithoutMontas_supervisadasInput>
  }

  export type usuariosUpdateWithoutMontas_supervisadasInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutMontas_supervisadasInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type animalesUpsertWithoutMontas_hembraInput = {
    update: XOR<animalesUpdateWithoutMontas_hembraInput, animalesUncheckedUpdateWithoutMontas_hembraInput>
    create: XOR<animalesCreateWithoutMontas_hembraInput, animalesUncheckedCreateWithoutMontas_hembraInput>
    where?: animalesWhereInput
  }

  export type animalesUpdateToOneWithWhereWithoutMontas_hembraInput = {
    where?: animalesWhereInput
    data: XOR<animalesUpdateWithoutMontas_hembraInput, animalesUncheckedUpdateWithoutMontas_hembraInput>
  }

  export type animalesUpdateWithoutMontas_hembraInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutMontas_hembraInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUpsertWithoutMontas_machoInput = {
    update: XOR<animalesUpdateWithoutMontas_machoInput, animalesUncheckedUpdateWithoutMontas_machoInput>
    create: XOR<animalesCreateWithoutMontas_machoInput, animalesUncheckedCreateWithoutMontas_machoInput>
    where?: animalesWhereInput
  }

  export type animalesUpdateToOneWithWhereWithoutMontas_machoInput = {
    where?: animalesWhereInput
    data: XOR<animalesUpdateWithoutMontas_machoInput, animalesUncheckedUpdateWithoutMontas_machoInput>
  }

  export type animalesUpdateWithoutMontas_machoInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutMontas_machoInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type tipo_eventoUpsertWithoutEventos_montaInput = {
    update: XOR<tipo_eventoUpdateWithoutEventos_montaInput, tipo_eventoUncheckedUpdateWithoutEventos_montaInput>
    create: XOR<tipo_eventoCreateWithoutEventos_montaInput, tipo_eventoUncheckedCreateWithoutEventos_montaInput>
    where?: tipo_eventoWhereInput
  }

  export type tipo_eventoUpdateToOneWithWhereWithoutEventos_montaInput = {
    where?: tipo_eventoWhereInput
    data: XOR<tipo_eventoUpdateWithoutEventos_montaInput, tipo_eventoUncheckedUpdateWithoutEventos_montaInput>
  }

  export type tipo_eventoUpdateWithoutEventos_montaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    padre?: tipo_eventoUpdateOneWithoutHijosNestedInput
    hijos?: tipo_eventoUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutTipo_eventoNestedInput
    eventos_parto?: evento_partoUpdateManyWithoutTipo_eventoNestedInput
  }

  export type tipo_eventoUncheckedUpdateWithoutEventos_montaInput = {
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos?: tipo_eventoUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutTipo_eventoNestedInput
    eventos_parto?: evento_partoUncheckedUpdateManyWithoutTipo_eventoNestedInput
  }

  export type diagnostico_preñezUpsertWithWhereUniqueWithoutMontaInput = {
    where: diagnostico_preñezWhereUniqueInput
    update: XOR<diagnostico_preñezUpdateWithoutMontaInput, diagnostico_preñezUncheckedUpdateWithoutMontaInput>
    create: XOR<diagnostico_preñezCreateWithoutMontaInput, diagnostico_preñezUncheckedCreateWithoutMontaInput>
  }

  export type diagnostico_preñezUpdateWithWhereUniqueWithoutMontaInput = {
    where: diagnostico_preñezWhereUniqueInput
    data: XOR<diagnostico_preñezUpdateWithoutMontaInput, diagnostico_preñezUncheckedUpdateWithoutMontaInput>
  }

  export type diagnostico_preñezUpdateManyWithWhereWithoutMontaInput = {
    where: diagnostico_preñezScalarWhereInput
    data: XOR<diagnostico_preñezUpdateManyMutationInput, diagnostico_preñezUncheckedUpdateManyWithoutMontaInput>
  }

  export type evento_montaCreateWithoutDiagnosticosInput = {
    fecha: Date | string
    deleted_at?: Date | string | null
    veterinario: usuariosCreateNestedOneWithoutMontas_supervisadasInput
    hembra: animalesCreateNestedOneWithoutMontas_hembraInput
    macho: animalesCreateNestedOneWithoutMontas_machoInput
    tipo_evento: tipo_eventoCreateNestedOneWithoutEventos_montaInput
  }

  export type evento_montaUncheckedCreateWithoutDiagnosticosInput = {
    monta_id?: number
    usuario_veterinario_id: number
    animal_hembra_id: number
    animal_macho_id: number
    tipo_evento_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_montaCreateOrConnectWithoutDiagnosticosInput = {
    where: evento_montaWhereUniqueInput
    create: XOR<evento_montaCreateWithoutDiagnosticosInput, evento_montaUncheckedCreateWithoutDiagnosticosInput>
  }

  export type usuariosCreateWithoutDiagnosticosInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutDiagnosticosInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutDiagnosticosInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutDiagnosticosInput, usuariosUncheckedCreateWithoutDiagnosticosInput>
  }

  export type evento_montaUpsertWithoutDiagnosticosInput = {
    update: XOR<evento_montaUpdateWithoutDiagnosticosInput, evento_montaUncheckedUpdateWithoutDiagnosticosInput>
    create: XOR<evento_montaCreateWithoutDiagnosticosInput, evento_montaUncheckedCreateWithoutDiagnosticosInput>
    where?: evento_montaWhereInput
  }

  export type evento_montaUpdateToOneWithWhereWithoutDiagnosticosInput = {
    where?: evento_montaWhereInput
    data: XOR<evento_montaUpdateWithoutDiagnosticosInput, evento_montaUncheckedUpdateWithoutDiagnosticosInput>
  }

  export type evento_montaUpdateWithoutDiagnosticosInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinario?: usuariosUpdateOneRequiredWithoutMontas_supervisadasNestedInput
    hembra?: animalesUpdateOneRequiredWithoutMontas_hembraNestedInput
    macho?: animalesUpdateOneRequiredWithoutMontas_machoNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_montaNestedInput
  }

  export type evento_montaUncheckedUpdateWithoutDiagnosticosInput = {
    monta_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    animal_hembra_id?: IntFieldUpdateOperationsInput | number
    animal_macho_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosUpsertWithoutDiagnosticosInput = {
    update: XOR<usuariosUpdateWithoutDiagnosticosInput, usuariosUncheckedUpdateWithoutDiagnosticosInput>
    create: XOR<usuariosCreateWithoutDiagnosticosInput, usuariosUncheckedCreateWithoutDiagnosticosInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutDiagnosticosInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutDiagnosticosInput, usuariosUncheckedUpdateWithoutDiagnosticosInput>
  }

  export type usuariosUpdateWithoutDiagnosticosInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutDiagnosticosInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type animalesCreateWithoutPartosInput = {
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    madre?: animalesCreateNestedOneWithoutHijos_madreInput
    padre?: animalesCreateNestedOneWithoutHijos_padreInput
    hijos_madre?: animalesCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesCreateNestedManyWithoutPadreInput
    lote?: lotesCreateNestedOneWithoutAnimalesInput
    raza: razasCreateNestedOneWithoutAnimalesInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaCreateNestedManyWithoutMachoInput
  }

  export type animalesUncheckedCreateWithoutPartosInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
    hijos_madre?: animalesUncheckedCreateNestedManyWithoutMadreInput
    hijos_padre?: animalesUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutAnimalInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutAnimalInput
    pesajes?: pesajesUncheckedCreateNestedManyWithoutAnimalInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutAnimalInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutAnimalInput
    montas_hembra?: evento_montaUncheckedCreateNestedManyWithoutHembraInput
    montas_macho?: evento_montaUncheckedCreateNestedManyWithoutMachoInput
  }

  export type animalesCreateOrConnectWithoutPartosInput = {
    where: animalesWhereUniqueInput
    create: XOR<animalesCreateWithoutPartosInput, animalesUncheckedCreateWithoutPartosInput>
  }

  export type usuariosCreateWithoutPartos_veterinarioInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoCreateNestedManyWithoutOperadorInput
  }

  export type usuariosUncheckedCreateWithoutPartos_veterinarioInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_operador?: evento_partoUncheckedCreateNestedManyWithoutOperadorInput
  }

  export type usuariosCreateOrConnectWithoutPartos_veterinarioInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutPartos_veterinarioInput, usuariosUncheckedCreateWithoutPartos_veterinarioInput>
  }

  export type usuariosCreateWithoutPartos_operadorInput = {
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    finca?: fincaCreateNestedOneWithoutUsuariosInput
    rol?: rolesCreateNestedOneWithoutUsuariosInput
    eventos_veterinario?: evento_sanitarioCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoCreateNestedManyWithoutVeterinarioInput
  }

  export type usuariosUncheckedCreateWithoutPartos_operadorInput = {
    usuario_id?: number
    finca_id?: number | null
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedCreateNestedManyWithoutVeterinarioInput
    eventos_operador?: evento_sanitarioUncheckedCreateNestedManyWithoutOperadorInput
    alimentaciones?: alimentacionUncheckedCreateNestedManyWithoutUsuarioInput
    pesajes_realizados?: pesajesUncheckedCreateNestedManyWithoutUsuarioInput
    compras_realizadas?: comprasUncheckedCreateNestedManyWithoutUsuario_contableInput
    producciones_carne?: produccion_carneUncheckedCreateNestedManyWithoutUsuarioInput
    producciones_leche?: produccion_lecheraUncheckedCreateNestedManyWithoutUsuarioInput
    montas_supervisadas?: evento_montaUncheckedCreateNestedManyWithoutVeterinarioInput
    diagnosticos?: diagnostico_preñezUncheckedCreateNestedManyWithoutVeterinarioInput
    partos_veterinario?: evento_partoUncheckedCreateNestedManyWithoutVeterinarioInput
  }

  export type usuariosCreateOrConnectWithoutPartos_operadorInput = {
    where: usuariosWhereUniqueInput
    create: XOR<usuariosCreateWithoutPartos_operadorInput, usuariosUncheckedCreateWithoutPartos_operadorInput>
  }

  export type tipo_eventoCreateWithoutEventos_partoInput = {
    nombre: string
    deleted_at?: Date | string | null
    padre?: tipo_eventoCreateNestedOneWithoutHijosInput
    hijos?: tipo_eventoCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioCreateNestedManyWithoutTipo_eventoInput
    eventos_monta?: evento_montaCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoUncheckedCreateWithoutEventos_partoInput = {
    tipo_evento_id?: number
    nombre: string
    padre_id?: number | null
    deleted_at?: Date | string | null
    hijos?: tipo_eventoUncheckedCreateNestedManyWithoutPadreInput
    eventos_sanitarios?: evento_sanitarioUncheckedCreateNestedManyWithoutTipo_eventoInput
    eventos_monta?: evento_montaUncheckedCreateNestedManyWithoutTipo_eventoInput
  }

  export type tipo_eventoCreateOrConnectWithoutEventos_partoInput = {
    where: tipo_eventoWhereUniqueInput
    create: XOR<tipo_eventoCreateWithoutEventos_partoInput, tipo_eventoUncheckedCreateWithoutEventos_partoInput>
  }

  export type animalesUpsertWithoutPartosInput = {
    update: XOR<animalesUpdateWithoutPartosInput, animalesUncheckedUpdateWithoutPartosInput>
    create: XOR<animalesCreateWithoutPartosInput, animalesUncheckedCreateWithoutPartosInput>
    where?: animalesWhereInput
  }

  export type animalesUpdateToOneWithWhereWithoutPartosInput = {
    where?: animalesWhereInput
    data: XOR<animalesUpdateWithoutPartosInput, animalesUncheckedUpdateWithoutPartosInput>
  }

  export type animalesUpdateWithoutPartosInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
  }

  export type animalesUncheckedUpdateWithoutPartosInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
  }

  export type usuariosUpsertWithoutPartos_veterinarioInput = {
    update: XOR<usuariosUpdateWithoutPartos_veterinarioInput, usuariosUncheckedUpdateWithoutPartos_veterinarioInput>
    create: XOR<usuariosCreateWithoutPartos_veterinarioInput, usuariosUncheckedCreateWithoutPartos_veterinarioInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutPartos_veterinarioInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutPartos_veterinarioInput, usuariosUncheckedUpdateWithoutPartos_veterinarioInput>
  }

  export type usuariosUpdateWithoutPartos_veterinarioInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutPartos_veterinarioInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUpsertWithoutPartos_operadorInput = {
    update: XOR<usuariosUpdateWithoutPartos_operadorInput, usuariosUncheckedUpdateWithoutPartos_operadorInput>
    create: XOR<usuariosCreateWithoutPartos_operadorInput, usuariosUncheckedCreateWithoutPartos_operadorInput>
    where?: usuariosWhereInput
  }

  export type usuariosUpdateToOneWithWhereWithoutPartos_operadorInput = {
    where?: usuariosWhereInput
    data: XOR<usuariosUpdateWithoutPartos_operadorInput, usuariosUncheckedUpdateWithoutPartos_operadorInput>
  }

  export type usuariosUpdateWithoutPartos_operadorInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
  }

  export type usuariosUncheckedUpdateWithoutPartos_operadorInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
  }

  export type tipo_eventoUpsertWithoutEventos_partoInput = {
    update: XOR<tipo_eventoUpdateWithoutEventos_partoInput, tipo_eventoUncheckedUpdateWithoutEventos_partoInput>
    create: XOR<tipo_eventoCreateWithoutEventos_partoInput, tipo_eventoUncheckedCreateWithoutEventos_partoInput>
    where?: tipo_eventoWhereInput
  }

  export type tipo_eventoUpdateToOneWithWhereWithoutEventos_partoInput = {
    where?: tipo_eventoWhereInput
    data: XOR<tipo_eventoUpdateWithoutEventos_partoInput, tipo_eventoUncheckedUpdateWithoutEventos_partoInput>
  }

  export type tipo_eventoUpdateWithoutEventos_partoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    padre?: tipo_eventoUpdateOneWithoutHijosNestedInput
    hijos?: tipo_eventoUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutTipo_eventoNestedInput
    eventos_monta?: evento_montaUpdateManyWithoutTipo_eventoNestedInput
  }

  export type tipo_eventoUncheckedUpdateWithoutEventos_partoInput = {
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos?: tipo_eventoUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutTipo_eventoNestedInput
    eventos_monta?: evento_montaUncheckedUpdateManyWithoutTipo_eventoNestedInput
  }

  export type usuariosCreateManyRolInput = {
    usuario_id?: number
    finca_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
  }

  export type usuariosUpdateWithoutRolInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    finca?: fincaUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutRolInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateManyWithoutRolInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    finca_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usuariosCreateManyFincaInput = {
    usuario_id?: number
    rol_id?: number | null
    nombre: string
    correo: string
    contraseña?: string | null
    deleted_at?: Date | string | null
  }

  export type usuariosUpdateWithoutFincaInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rol?: rolesUpdateOneWithoutUsuariosNestedInput
    eventos_veterinario?: evento_sanitarioUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateWithoutFincaInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    eventos_veterinario?: evento_sanitarioUncheckedUpdateManyWithoutVeterinarioNestedInput
    eventos_operador?: evento_sanitarioUncheckedUpdateManyWithoutOperadorNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutUsuarioNestedInput
    pesajes_realizados?: pesajesUncheckedUpdateManyWithoutUsuarioNestedInput
    compras_realizadas?: comprasUncheckedUpdateManyWithoutUsuario_contableNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutUsuarioNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutUsuarioNestedInput
    montas_supervisadas?: evento_montaUncheckedUpdateManyWithoutVeterinarioNestedInput
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_veterinario?: evento_partoUncheckedUpdateManyWithoutVeterinarioNestedInput
    partos_operador?: evento_partoUncheckedUpdateManyWithoutOperadorNestedInput
  }

  export type usuariosUncheckedUpdateManyWithoutFincaInput = {
    usuario_id?: IntFieldUpdateOperationsInput | number
    rol_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre?: StringFieldUpdateOperationsInput | string
    correo?: StringFieldUpdateOperationsInput | string
    contraseña?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_sanitarioCreateManyVeterinarioInput = {
    evento_sanitario_id?: number
    animal_id: number
    tipo_evento_id: number
    usuario_operador_id: number
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_sanitarioCreateManyOperadorInput = {
    evento_sanitario_id?: number
    animal_id: number
    tipo_evento_id: number
    usuario_veterinario_id: number
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type alimentacionCreateManyUsuarioInput = {
    alimentacion_id?: number
    insumo_id: number
    animal_id: number
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type pesajesCreateManyUsuarioInput = {
    pesaje_id?: number
    animal_id: number
    unidad_id: number
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type comprasCreateManyUsuario_contableInput = {
    compra_id?: number
    proveedor_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type produccion_carneCreateManyUsuarioInput = {
    produccion_id?: number
    animal_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type produccion_lecheraCreateManyUsuarioInput = {
    produccion_id?: number
    animal_id: number
    cantidad: number
    unidad_id: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type evento_montaCreateManyVeterinarioInput = {
    monta_id?: number
    animal_hembra_id: number
    animal_macho_id: number
    tipo_evento_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type diagnostico_preñezCreateManyVeterinarioInput = {
    preñez_id?: number
    monta_id: number
    metodo?: string | null
    resultado?: boolean | null
    fecha_probable_parto?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_partoCreateManyVeterinarioInput = {
    evento_id?: number
    animal_id: number
    usuario_operador_id: number
    tipo_evento_id: number
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_partoCreateManyOperadorInput = {
    evento_id?: number
    animal_id: number
    usuario_veterinario_id: number
    tipo_evento_id: number
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_sanitarioUpdateWithoutVeterinarioInput = {
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutEventos_sanitariosNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_sanitariosNestedInput
    operador?: usuariosUpdateOneRequiredWithoutEventos_operadorNestedInput
    insumos_usados?: evento_insumoUpdateManyWithoutEvento_sanitarioNestedInput
  }

  export type evento_sanitarioUncheckedUpdateWithoutVeterinarioInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos_usados?: evento_insumoUncheckedUpdateManyWithoutEvento_sanitarioNestedInput
  }

  export type evento_sanitarioUncheckedUpdateManyWithoutVeterinarioInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_sanitarioUpdateWithoutOperadorInput = {
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutEventos_sanitariosNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_sanitariosNestedInput
    veterinario?: usuariosUpdateOneRequiredWithoutEventos_veterinarioNestedInput
    insumos_usados?: evento_insumoUpdateManyWithoutEvento_sanitarioNestedInput
  }

  export type evento_sanitarioUncheckedUpdateWithoutOperadorInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos_usados?: evento_insumoUncheckedUpdateManyWithoutEvento_sanitarioNestedInput
  }

  export type evento_sanitarioUncheckedUpdateManyWithoutOperadorInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type alimentacionUpdateWithoutUsuarioInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumo?: insumosUpdateOneRequiredWithoutAlimentacionesNestedInput
    animal?: animalesUpdateOneRequiredWithoutAlimentacionesNestedInput
  }

  export type alimentacionUncheckedUpdateWithoutUsuarioInput = {
    alimentacion_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type alimentacionUncheckedUpdateManyWithoutUsuarioInput = {
    alimentacion_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pesajesUpdateWithoutUsuarioInput = {
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutPesajesNestedInput
    unidad?: unidadesUpdateOneRequiredWithoutPesajesNestedInput
  }

  export type pesajesUncheckedUpdateWithoutUsuarioInput = {
    pesaje_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pesajesUncheckedUpdateManyWithoutUsuarioInput = {
    pesaje_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type comprasUpdateWithoutUsuario_contableInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    proveedor?: proveedoresUpdateOneRequiredWithoutComprasNestedInput
    detalle_compras?: detalle_comprasUpdateManyWithoutCompraNestedInput
  }

  export type comprasUncheckedUpdateWithoutUsuario_contableInput = {
    compra_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_compras?: detalle_comprasUncheckedUpdateManyWithoutCompraNestedInput
  }

  export type comprasUncheckedUpdateManyWithoutUsuario_contableInput = {
    compra_id?: IntFieldUpdateOperationsInput | number
    proveedor_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_carneUpdateWithoutUsuarioInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutProducciones_carneNestedInput
  }

  export type produccion_carneUncheckedUpdateWithoutUsuarioInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_carneUncheckedUpdateManyWithoutUsuarioInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_lecheraUpdateWithoutUsuarioInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutProducciones_lecheNestedInput
    unidad?: unidadesUpdateOneRequiredWithoutProducciones_lecheNestedInput
  }

  export type produccion_lecheraUncheckedUpdateWithoutUsuarioInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_lecheraUncheckedUpdateManyWithoutUsuarioInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_montaUpdateWithoutVeterinarioInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hembra?: animalesUpdateOneRequiredWithoutMontas_hembraNestedInput
    macho?: animalesUpdateOneRequiredWithoutMontas_machoNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_montaNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutMontaNestedInput
  }

  export type evento_montaUncheckedUpdateWithoutVeterinarioInput = {
    monta_id?: IntFieldUpdateOperationsInput | number
    animal_hembra_id?: IntFieldUpdateOperationsInput | number
    animal_macho_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutMontaNestedInput
  }

  export type evento_montaUncheckedUpdateManyWithoutVeterinarioInput = {
    monta_id?: IntFieldUpdateOperationsInput | number
    animal_hembra_id?: IntFieldUpdateOperationsInput | number
    animal_macho_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type diagnostico_preñezUpdateWithoutVeterinarioInput = {
    metodo?: NullableStringFieldUpdateOperationsInput | string | null
    resultado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_probable_parto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    monta?: evento_montaUpdateOneRequiredWithoutDiagnosticosNestedInput
  }

  export type diagnostico_preñezUncheckedUpdateWithoutVeterinarioInput = {
    preñez_id?: IntFieldUpdateOperationsInput | number
    monta_id?: IntFieldUpdateOperationsInput | number
    metodo?: NullableStringFieldUpdateOperationsInput | string | null
    resultado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_probable_parto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type diagnostico_preñezUncheckedUpdateManyWithoutVeterinarioInput = {
    preñez_id?: IntFieldUpdateOperationsInput | number
    monta_id?: IntFieldUpdateOperationsInput | number
    metodo?: NullableStringFieldUpdateOperationsInput | string | null
    resultado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_probable_parto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_partoUpdateWithoutVeterinarioInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutPartosNestedInput
    operador?: usuariosUpdateOneRequiredWithoutPartos_operadorNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_partoNestedInput
  }

  export type evento_partoUncheckedUpdateWithoutVeterinarioInput = {
    evento_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_partoUncheckedUpdateManyWithoutVeterinarioInput = {
    evento_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_partoUpdateWithoutOperadorInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutPartosNestedInput
    veterinario?: usuariosUpdateOneRequiredWithoutPartos_veterinarioNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_partoNestedInput
  }

  export type evento_partoUncheckedUpdateWithoutOperadorInput = {
    evento_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_partoUncheckedUpdateManyWithoutOperadorInput = {
    evento_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type insumosCreateManyUnidadInput = {
    insumo_id?: number
    tipo_insumo_id: number
    nombre: string
    cantidad: number
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type pesajesCreateManyUnidadInput = {
    pesaje_id?: number
    usuario_operador_id: number
    animal_id: number
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type produccion_lecheraCreateManyUnidadInput = {
    produccion_id?: number
    usuario_ordeño_id: number
    animal_id: number
    cantidad: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type insumosUpdateWithoutUnidadInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_insumo?: tipo_insumoUpdateOneRequiredWithoutInsumosNestedInput
    detalle_compras?: detalle_comprasUpdateManyWithoutInsumoNestedInput
    evento_insumos?: evento_insumoUpdateManyWithoutInsumoNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutInsumoNestedInput
  }

  export type insumosUncheckedUpdateWithoutUnidadInput = {
    insumo_id?: IntFieldUpdateOperationsInput | number
    tipo_insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_compras?: detalle_comprasUncheckedUpdateManyWithoutInsumoNestedInput
    evento_insumos?: evento_insumoUncheckedUpdateManyWithoutInsumoNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutInsumoNestedInput
  }

  export type insumosUncheckedUpdateManyWithoutUnidadInput = {
    insumo_id?: IntFieldUpdateOperationsInput | number
    tipo_insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pesajesUpdateWithoutUnidadInput = {
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario?: usuariosUpdateOneRequiredWithoutPesajes_realizadosNestedInput
    animal?: animalesUpdateOneRequiredWithoutPesajesNestedInput
  }

  export type pesajesUncheckedUpdateWithoutUnidadInput = {
    pesaje_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pesajesUncheckedUpdateManyWithoutUnidadInput = {
    pesaje_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_lecheraUpdateWithoutUnidadInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario?: usuariosUpdateOneRequiredWithoutProducciones_lecheNestedInput
    animal?: animalesUpdateOneRequiredWithoutProducciones_lecheNestedInput
  }

  export type produccion_lecheraUncheckedUpdateWithoutUnidadInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    usuario_ordeño_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_lecheraUncheckedUpdateManyWithoutUnidadInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    usuario_ordeño_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type insumosCreateManyTipo_insumoInput = {
    insumo_id?: number
    nombre: string
    cantidad: number
    unidad_id: number
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type insumosUpdateWithoutTipo_insumoInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    unidad?: unidadesUpdateOneRequiredWithoutInsumosNestedInput
    detalle_compras?: detalle_comprasUpdateManyWithoutInsumoNestedInput
    evento_insumos?: evento_insumoUpdateManyWithoutInsumoNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutInsumoNestedInput
  }

  export type insumosUncheckedUpdateWithoutTipo_insumoInput = {
    insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_compras?: detalle_comprasUncheckedUpdateManyWithoutInsumoNestedInput
    evento_insumos?: evento_insumoUncheckedUpdateManyWithoutInsumoNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutInsumoNestedInput
  }

  export type insumosUncheckedUpdateManyWithoutTipo_insumoInput = {
    insumo_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalle_comprasCreateManyInsumoInput = {
    detalle_id?: number
    compra_id: number
    precio: Decimal | DecimalJsLike | number | string
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type evento_insumoCreateManyInsumoInput = {
    evento_sanitario_id: number
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type alimentacionCreateManyInsumoInput = {
    alimentacion_id?: number
    usuario_operador_id: number
    animal_id: number
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type detalle_comprasUpdateWithoutInsumoInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    compra?: comprasUpdateOneRequiredWithoutDetalle_comprasNestedInput
  }

  export type detalle_comprasUncheckedUpdateWithoutInsumoInput = {
    detalle_id?: IntFieldUpdateOperationsInput | number
    compra_id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalle_comprasUncheckedUpdateManyWithoutInsumoInput = {
    detalle_id?: IntFieldUpdateOperationsInput | number
    compra_id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_insumoUpdateWithoutInsumoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    evento_sanitario?: evento_sanitarioUpdateOneRequiredWithoutInsumos_usadosNestedInput
  }

  export type evento_insumoUncheckedUpdateWithoutInsumoInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_insumoUncheckedUpdateManyWithoutInsumoInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type alimentacionUpdateWithoutInsumoInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario?: usuariosUpdateOneRequiredWithoutAlimentacionesNestedInput
    animal?: animalesUpdateOneRequiredWithoutAlimentacionesNestedInput
  }

  export type alimentacionUncheckedUpdateWithoutInsumoInput = {
    alimentacion_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type alimentacionUncheckedUpdateManyWithoutInsumoInput = {
    alimentacion_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_eventoCreateManyPadreInput = {
    tipo_evento_id?: number
    nombre: string
    deleted_at?: Date | string | null
  }

  export type evento_sanitarioCreateManyTipo_eventoInput = {
    evento_sanitario_id?: number
    animal_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_montaCreateManyTipo_eventoInput = {
    monta_id?: number
    usuario_veterinario_id: number
    animal_hembra_id: number
    animal_macho_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_partoCreateManyTipo_eventoInput = {
    evento_id?: number
    animal_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type tipo_eventoUpdateWithoutPadreInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos?: tipo_eventoUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutTipo_eventoNestedInput
    eventos_monta?: evento_montaUpdateManyWithoutTipo_eventoNestedInput
    eventos_parto?: evento_partoUpdateManyWithoutTipo_eventoNestedInput
  }

  export type tipo_eventoUncheckedUpdateWithoutPadreInput = {
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos?: tipo_eventoUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutTipo_eventoNestedInput
    eventos_monta?: evento_montaUncheckedUpdateManyWithoutTipo_eventoNestedInput
    eventos_parto?: evento_partoUncheckedUpdateManyWithoutTipo_eventoNestedInput
  }

  export type tipo_eventoUncheckedUpdateManyWithoutPadreInput = {
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_sanitarioUpdateWithoutTipo_eventoInput = {
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutEventos_sanitariosNestedInput
    veterinario?: usuariosUpdateOneRequiredWithoutEventos_veterinarioNestedInput
    operador?: usuariosUpdateOneRequiredWithoutEventos_operadorNestedInput
    insumos_usados?: evento_insumoUpdateManyWithoutEvento_sanitarioNestedInput
  }

  export type evento_sanitarioUncheckedUpdateWithoutTipo_eventoInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos_usados?: evento_insumoUncheckedUpdateManyWithoutEvento_sanitarioNestedInput
  }

  export type evento_sanitarioUncheckedUpdateManyWithoutTipo_eventoInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_montaUpdateWithoutTipo_eventoInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinario?: usuariosUpdateOneRequiredWithoutMontas_supervisadasNestedInput
    hembra?: animalesUpdateOneRequiredWithoutMontas_hembraNestedInput
    macho?: animalesUpdateOneRequiredWithoutMontas_machoNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutMontaNestedInput
  }

  export type evento_montaUncheckedUpdateWithoutTipo_eventoInput = {
    monta_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    animal_hembra_id?: IntFieldUpdateOperationsInput | number
    animal_macho_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutMontaNestedInput
  }

  export type evento_montaUncheckedUpdateManyWithoutTipo_eventoInput = {
    monta_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    animal_hembra_id?: IntFieldUpdateOperationsInput | number
    animal_macho_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_partoUpdateWithoutTipo_eventoInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animal?: animalesUpdateOneRequiredWithoutPartosNestedInput
    veterinario?: usuariosUpdateOneRequiredWithoutPartos_veterinarioNestedInput
    operador?: usuariosUpdateOneRequiredWithoutPartos_operadorNestedInput
  }

  export type evento_partoUncheckedUpdateWithoutTipo_eventoInput = {
    evento_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_partoUncheckedUpdateManyWithoutTipo_eventoInput = {
    evento_id?: IntFieldUpdateOperationsInput | number
    animal_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type animalesCreateManyRazaInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    lote_id?: number | null
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
  }

  export type animalesUpdateWithoutRazaInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutRazaInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateManyWithoutRazaInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type lotesCreateManyPotreroInput = {
    lote_id?: number
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type lotesUpdateWithoutPotreroInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animales?: animalesUpdateManyWithoutLoteNestedInput
  }

  export type lotesUncheckedUpdateWithoutPotreroInput = {
    lote_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    animales?: animalesUncheckedUpdateManyWithoutLoteNestedInput
  }

  export type lotesUncheckedUpdateManyWithoutPotreroInput = {
    lote_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type animalesCreateManyLoteInput = {
    animal_id?: number
    animal_madre_id?: number | null
    animal_padre_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
  }

  export type animalesUpdateWithoutLoteInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutLoteInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateManyWithoutLoteInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type animalesCreateManyMadreInput = {
    animal_id?: number
    animal_padre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
  }

  export type animalesCreateManyPadreInput = {
    animal_id?: number
    animal_madre_id?: number | null
    lote_id?: number | null
    raza_id: number
    animal_img?: string | null
    arete: string
    sexo: string
    fecha_destete?: Date | string | null
    fecha_nacimiento: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_sanitarioCreateManyAnimalInput = {
    evento_sanitario_id?: number
    tipo_evento_id: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    estado?: string | null
    diagnostico?: string | null
    tratamiento?: string | null
    fecha_diagnostico?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type alimentacionCreateManyAnimalInput = {
    alimentacion_id?: number
    insumo_id: number
    usuario_operador_id: number
    cantidad: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type pesajesCreateManyAnimalInput = {
    pesaje_id?: number
    usuario_operador_id: number
    unidad_id: number
    peso: Decimal | DecimalJsLike | number | string
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type produccion_carneCreateManyAnimalInput = {
    produccion_id?: number
    usuario_operador_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type produccion_lecheraCreateManyAnimalInput = {
    produccion_id?: number
    usuario_ordeño_id: number
    cantidad: number
    unidad_id: number
    fecha: Date | string
    descripcion?: string | null
    deleted_at?: Date | string | null
  }

  export type evento_montaCreateManyHembraInput = {
    monta_id?: number
    usuario_veterinario_id: number
    animal_macho_id: number
    tipo_evento_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_montaCreateManyMachoInput = {
    monta_id?: number
    usuario_veterinario_id: number
    animal_hembra_id: number
    tipo_evento_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type evento_partoCreateManyAnimalInput = {
    evento_id?: number
    usuario_veterinario_id: number
    usuario_operador_id: number
    tipo_evento_id: number
    descripcion?: string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type animalesUpdateWithoutMadreInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    padre?: animalesUpdateOneWithoutHijos_padreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutMadreInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateManyWithoutMadreInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type animalesUpdateWithoutPadreInput = {
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    madre?: animalesUpdateOneWithoutHijos_madreNestedInput
    hijos_madre?: animalesUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUpdateManyWithoutPadreNestedInput
    lote?: lotesUpdateOneWithoutAnimalesNestedInput
    raza?: razasUpdateOneRequiredWithoutAnimalesNestedInput
    eventos_sanitarios?: evento_sanitarioUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateWithoutPadreInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hijos_madre?: animalesUncheckedUpdateManyWithoutMadreNestedInput
    hijos_padre?: animalesUncheckedUpdateManyWithoutPadreNestedInput
    eventos_sanitarios?: evento_sanitarioUncheckedUpdateManyWithoutAnimalNestedInput
    alimentaciones?: alimentacionUncheckedUpdateManyWithoutAnimalNestedInput
    pesajes?: pesajesUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_carne?: produccion_carneUncheckedUpdateManyWithoutAnimalNestedInput
    producciones_leche?: produccion_lecheraUncheckedUpdateManyWithoutAnimalNestedInput
    montas_hembra?: evento_montaUncheckedUpdateManyWithoutHembraNestedInput
    montas_macho?: evento_montaUncheckedUpdateManyWithoutMachoNestedInput
    partos?: evento_partoUncheckedUpdateManyWithoutAnimalNestedInput
  }

  export type animalesUncheckedUpdateManyWithoutPadreInput = {
    animal_id?: IntFieldUpdateOperationsInput | number
    animal_madre_id?: NullableIntFieldUpdateOperationsInput | number | null
    lote_id?: NullableIntFieldUpdateOperationsInput | number | null
    raza_id?: IntFieldUpdateOperationsInput | number
    animal_img?: NullableStringFieldUpdateOperationsInput | string | null
    arete?: StringFieldUpdateOperationsInput | string
    sexo?: StringFieldUpdateOperationsInput | string
    fecha_destete?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha_nacimiento?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_sanitarioUpdateWithoutAnimalInput = {
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_sanitariosNestedInput
    veterinario?: usuariosUpdateOneRequiredWithoutEventos_veterinarioNestedInput
    operador?: usuariosUpdateOneRequiredWithoutEventos_operadorNestedInput
    insumos_usados?: evento_insumoUpdateManyWithoutEvento_sanitarioNestedInput
  }

  export type evento_sanitarioUncheckedUpdateWithoutAnimalInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumos_usados?: evento_insumoUncheckedUpdateManyWithoutEvento_sanitarioNestedInput
  }

  export type evento_sanitarioUncheckedUpdateManyWithoutAnimalInput = {
    evento_sanitario_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    estado?: NullableStringFieldUpdateOperationsInput | string | null
    diagnostico?: NullableStringFieldUpdateOperationsInput | string | null
    tratamiento?: NullableStringFieldUpdateOperationsInput | string | null
    fecha_diagnostico?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type alimentacionUpdateWithoutAnimalInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumo?: insumosUpdateOneRequiredWithoutAlimentacionesNestedInput
    usuario?: usuariosUpdateOneRequiredWithoutAlimentacionesNestedInput
  }

  export type alimentacionUncheckedUpdateWithoutAnimalInput = {
    alimentacion_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type alimentacionUncheckedUpdateManyWithoutAnimalInput = {
    alimentacion_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pesajesUpdateWithoutAnimalInput = {
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario?: usuariosUpdateOneRequiredWithoutPesajes_realizadosNestedInput
    unidad?: unidadesUpdateOneRequiredWithoutPesajesNestedInput
  }

  export type pesajesUncheckedUpdateWithoutAnimalInput = {
    pesaje_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type pesajesUncheckedUpdateManyWithoutAnimalInput = {
    pesaje_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    peso?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_carneUpdateWithoutAnimalInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario?: usuariosUpdateOneRequiredWithoutProducciones_carneNestedInput
  }

  export type produccion_carneUncheckedUpdateWithoutAnimalInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_carneUncheckedUpdateManyWithoutAnimalInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_lecheraUpdateWithoutAnimalInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario?: usuariosUpdateOneRequiredWithoutProducciones_lecheNestedInput
    unidad?: unidadesUpdateOneRequiredWithoutProducciones_lecheNestedInput
  }

  export type produccion_lecheraUncheckedUpdateWithoutAnimalInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    usuario_ordeño_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type produccion_lecheraUncheckedUpdateManyWithoutAnimalInput = {
    produccion_id?: IntFieldUpdateOperationsInput | number
    usuario_ordeño_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    unidad_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_montaUpdateWithoutHembraInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinario?: usuariosUpdateOneRequiredWithoutMontas_supervisadasNestedInput
    macho?: animalesUpdateOneRequiredWithoutMontas_machoNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_montaNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutMontaNestedInput
  }

  export type evento_montaUncheckedUpdateWithoutHembraInput = {
    monta_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    animal_macho_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutMontaNestedInput
  }

  export type evento_montaUncheckedUpdateManyWithoutHembraInput = {
    monta_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    animal_macho_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_montaUpdateWithoutMachoInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinario?: usuariosUpdateOneRequiredWithoutMontas_supervisadasNestedInput
    hembra?: animalesUpdateOneRequiredWithoutMontas_hembraNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_montaNestedInput
    diagnosticos?: diagnostico_preñezUpdateManyWithoutMontaNestedInput
  }

  export type evento_montaUncheckedUpdateWithoutMachoInput = {
    monta_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    animal_hembra_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    diagnosticos?: diagnostico_preñezUncheckedUpdateManyWithoutMontaNestedInput
  }

  export type evento_montaUncheckedUpdateManyWithoutMachoInput = {
    monta_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    animal_hembra_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_partoUpdateWithoutAnimalInput = {
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinario?: usuariosUpdateOneRequiredWithoutPartos_veterinarioNestedInput
    operador?: usuariosUpdateOneRequiredWithoutPartos_operadorNestedInput
    tipo_evento?: tipo_eventoUpdateOneRequiredWithoutEventos_partoNestedInput
  }

  export type evento_partoUncheckedUpdateWithoutAnimalInput = {
    evento_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_partoUncheckedUpdateManyWithoutAnimalInput = {
    evento_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    usuario_operador_id?: IntFieldUpdateOperationsInput | number
    tipo_evento_id?: IntFieldUpdateOperationsInput | number
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type comprasCreateManyProveedorInput = {
    compra_id?: number
    usuario_contable_id: number
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type comprasUpdateWithoutProveedorInput = {
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    usuario_contable?: usuariosUpdateOneRequiredWithoutCompras_realizadasNestedInput
    detalle_compras?: detalle_comprasUpdateManyWithoutCompraNestedInput
  }

  export type comprasUncheckedUpdateWithoutProveedorInput = {
    compra_id?: IntFieldUpdateOperationsInput | number
    usuario_contable_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    detalle_compras?: detalle_comprasUncheckedUpdateManyWithoutCompraNestedInput
  }

  export type comprasUncheckedUpdateManyWithoutProveedorInput = {
    compra_id?: IntFieldUpdateOperationsInput | number
    usuario_contable_id?: IntFieldUpdateOperationsInput | number
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalle_comprasCreateManyCompraInput = {
    detalle_id?: number
    insumo_id: number
    precio: Decimal | DecimalJsLike | number | string
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type detalle_comprasUpdateWithoutCompraInput = {
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumo?: insumosUpdateOneRequiredWithoutDetalle_comprasNestedInput
  }

  export type detalle_comprasUncheckedUpdateWithoutCompraInput = {
    detalle_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type detalle_comprasUncheckedUpdateManyWithoutCompraInput = {
    detalle_id?: IntFieldUpdateOperationsInput | number
    insumo_id?: IntFieldUpdateOperationsInput | number
    precio?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_insumoCreateManyEvento_sanitarioInput = {
    insumo_id: number
    cantidad: number
    deleted_at?: Date | string | null
  }

  export type evento_insumoUpdateWithoutEvento_sanitarioInput = {
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    insumo?: insumosUpdateOneRequiredWithoutEvento_insumosNestedInput
  }

  export type evento_insumoUncheckedUpdateWithoutEvento_sanitarioInput = {
    insumo_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type evento_insumoUncheckedUpdateManyWithoutEvento_sanitarioInput = {
    insumo_id?: IntFieldUpdateOperationsInput | number
    cantidad?: IntFieldUpdateOperationsInput | number
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type diagnostico_preñezCreateManyMontaInput = {
    preñez_id?: number
    usuario_veterinario_id: number
    metodo?: string | null
    resultado?: boolean | null
    fecha_probable_parto?: Date | string | null
    fecha: Date | string
    deleted_at?: Date | string | null
  }

  export type diagnostico_preñezUpdateWithoutMontaInput = {
    metodo?: NullableStringFieldUpdateOperationsInput | string | null
    resultado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_probable_parto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    veterinario?: usuariosUpdateOneRequiredWithoutDiagnosticosNestedInput
  }

  export type diagnostico_preñezUncheckedUpdateWithoutMontaInput = {
    preñez_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    metodo?: NullableStringFieldUpdateOperationsInput | string | null
    resultado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_probable_parto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type diagnostico_preñezUncheckedUpdateManyWithoutMontaInput = {
    preñez_id?: IntFieldUpdateOperationsInput | number
    usuario_veterinario_id?: IntFieldUpdateOperationsInput | number
    metodo?: NullableStringFieldUpdateOperationsInput | string | null
    resultado?: NullableBoolFieldUpdateOperationsInput | boolean | null
    fecha_probable_parto?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fecha?: DateTimeFieldUpdateOperationsInput | Date | string
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}