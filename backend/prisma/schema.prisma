generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model roles {
  rol_id     Int        @id @default(autoincrement())
  nombre     String     @db.VarChar(100)
  deleted_at DateTime?  @db.Timestamp(6)
  usuarios   usuarios[]
}

model finca {
  finca_id    Int        @id @default(autoincrement())
  nombre      String     @db.VarChar(255)
  descripcion String?
  ubicacion   String?    @db.VarChar(255)
  deleted_at  DateTime?  @db.Timestamp(6)
  usuarios    usuarios[]
}

model usuarios {
  usuario_id                     Int                   @id @default(autoincrement())
  finca_id                       Int?
  rol_id                         Int?
  nombre                         String                @db.VarChar(255)
  correo                         String                @unique @db.VarChar(255)
  contrase単a                    String?               @db.VarChar(255)
  verificado                     Boolean?              @default(false)
  google_oauth                   Boolean?              @default(false)
  deleted_at                     DateTime?             @db.Timestamp(6)
  alimentaciones                 alimentacion[]
  compras_contables              compras[]             @relation("ComprasContable")
  diagnosticos_pre単ez           diagnostico_pre単ez[]
  montas_supervisadas            evento_monta[]
  partos_operador                evento_parto[]        @relation("PartoOperador")
  partos_veterinario             evento_parto[]        @relation("PartoVeterinario")
  eventos_sanitarios_operador    evento_sanitario[]    @relation("EventoSanitarioOperador")
  eventos_sanitarios_veterinario evento_sanitario[]    @relation("EventoSanitarioVeterinario")
  pesajes_realizados             pesajes[]
  producciones_carne             produccion_carne[]
  producciones_leche             produccion_lechera[]
  finca                          finca?                @relation(fields: [finca_id], references: [finca_id], onDelete: NoAction, onUpdate: NoAction)
  rol                            roles?                @relation(fields: [rol_id], references: [rol_id], onDelete: NoAction, onUpdate: NoAction)
}

model unidades {
  unidad_id          Int                  @id @default(autoincrement())
  nombre             String               @db.VarChar(50)
  deleted_at         DateTime?            @db.Timestamp(6)
  insumos            insumos[]
  pesajes            pesajes[]
  producciones_leche produccion_lechera[]
}

model tipo_insumo {
  tipo_insumo_id Int       @id @default(autoincrement())
  nombre         String    @db.VarChar(255)
  deleted_at     DateTime? @db.Timestamp(6)
  insumos        insumos[]
}

model insumos {
  insumo_id       Int               @id @default(autoincrement())
  tipo_insumo_id  Int?
  nombre          String            @db.VarChar(255)
  cantidad        Int
  unidad_id       Int?
  descripcion     String?
  deleted_at      DateTime?         @db.Timestamp(6)
  alimentaciones  alimentacion[]
  detalle_compras detalle_compras[]
  evento_insumos  evento_insumo[]
  tipo_insumo     tipo_insumo?      @relation(fields: [tipo_insumo_id], references: [tipo_insumo_id], onDelete: NoAction, onUpdate: NoAction)
  unidad          unidades?         @relation(fields: [unidad_id], references: [unidad_id], onDelete: NoAction, onUpdate: NoAction)
}

model tipo_evento {
  tipo_evento_id     Int                @id @default(autoincrement())
  nombre             String             @db.VarChar(255)
  padre_id           Int?
  deleted_at         DateTime?          @db.Timestamp(6)
  eventos_monta      evento_monta[]
  eventos_parto      evento_parto[]
  eventos_sanitarios evento_sanitario[]
  padre              tipo_evento?       @relation("TipoEventoJerarquia", fields: [padre_id], references: [tipo_evento_id], onDelete: NoAction, onUpdate: NoAction)
  hijos              tipo_evento[]      @relation("TipoEventoJerarquia")
}

model razas {
  raza_id     Int        @id @default(autoincrement())
  nombre      String     @db.VarChar(255)
  descripcion String?
  deleted_at  DateTime?  @db.Timestamp(6)
  animales    animales[]
}

model potreros {
  potrero_id Int       @id @default(autoincrement())
  ubicacion  String    @db.VarChar(255)
  deleted_at DateTime? @db.Timestamp(6)
  lotes      lotes[]
}

model lotes {
  lote_id     Int        @id @default(autoincrement())
  potrero_id  Int?
  descripcion String?
  deleted_at  DateTime?  @db.Timestamp(6)
  animales    animales[]
  potrero     potreros?  @relation(fields: [potrero_id], references: [potrero_id], onDelete: NoAction, onUpdate: NoAction)
}

model animales {
  animal_id          Int                  @id @default(autoincrement())
  animal_madre_id    Int?
  animal_padre_id    Int?
  lote_id            Int?
  raza_id            Int?
  imagen             String?              @db.VarChar(255)
  arete              String               @unique @db.VarChar(100)
  sexo               String?              @db.Char(1)
  fecha_destete      DateTime?            @db.Date
  fecha_nacimiento   DateTime             @db.Date
  deleted_at         DateTime?            @db.Timestamp(6)
  alimentaciones     alimentacion[]
  madre              animales?            @relation("Madre", fields: [animal_madre_id], references: [animal_id], onDelete: NoAction, onUpdate: NoAction)
  hijos_madre        animales[]           @relation("Madre")
  padre              animales?            @relation("Padre", fields: [animal_padre_id], references: [animal_id], onDelete: NoAction, onUpdate: NoAction)
  hijos_padre        animales[]           @relation("Padre")
  lote               lotes?               @relation(fields: [lote_id], references: [lote_id], onDelete: NoAction, onUpdate: NoAction)
  raza               razas?               @relation(fields: [raza_id], references: [raza_id], onDelete: NoAction, onUpdate: NoAction)
  montas_hembra      evento_monta[]       @relation("MontaHembra")
  montas_macho       evento_monta[]       @relation("MontaMacho")
  partos             evento_parto[]
  eventos_sanitarios evento_sanitario[]
  pesajes            pesajes[]
  producciones_carne produccion_carne[]
  producciones_leche produccion_lechera[]
}

model proveedores {
  proveedor_id      Int       @id @default(autoincrement())
  nombre_compa単ia  String    @db.VarChar(255)
  nombre_contacto   String?   @db.VarChar(255)
  telefono_local    String?   @db.Char(8)
  telefono_completo String?   @default(dbgenerated("('505'::text || (telefono_local)::text)")) @db.VarChar(20)
  deleted_at        DateTime? @db.Timestamp(6)
  compras           compras[]
}

model compras {
  compra_id           Int               @id @default(autoincrement())
  id_usuario_contable Int?
  proveedor_id        Int?
  fecha               DateTime          @db.Date
  deleted_at          DateTime?         @db.Timestamp(6)
  usuario_contable    usuarios?         @relation("ComprasContable", fields: [id_usuario_contable], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
  proveedor           proveedores?      @relation(fields: [proveedor_id], references: [proveedor_id], onDelete: NoAction, onUpdate: NoAction)
  detalle_compras     detalle_compras[]
}

model detalle_compras {
  detalle_id Int       @id @default(autoincrement())
  compra_id  Int?
  insumo_id  Int?
  precio     Decimal   @db.Decimal(10, 2)
  cantidad   Int
  deleted_at DateTime? @db.Timestamp(6)
  compra     compras?  @relation(fields: [compra_id], references: [compra_id], onDelete: NoAction, onUpdate: NoAction)
  insumo     insumos?  @relation(fields: [insumo_id], references: [insumo_id], onDelete: NoAction, onUpdate: NoAction)
}

model evento_sanitario {
  evento_sanitario_id    Int             @id @default(autoincrement())
  animal_id              Int?
  tipo_evento_id         Int?
  usuario_veterinario_id Int?
  usuario_operador_id    Int?
  estado                 String?         @db.VarChar(100)
  diagnostico            String?
  tratamiento            String?
  fecha_diagnostico      DateTime?       @db.Date
  fecha                  DateTime        @db.Date
  deleted_at             DateTime?       @db.Timestamp(6)
  insumos_usados         evento_insumo[]
  animal                 animales?       @relation(fields: [animal_id], references: [animal_id], onDelete: NoAction, onUpdate: NoAction)
  tipo_evento            tipo_evento?    @relation(fields: [tipo_evento_id], references: [tipo_evento_id], onDelete: NoAction, onUpdate: NoAction)
  operador               usuarios?       @relation("EventoSanitarioOperador", fields: [usuario_operador_id], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
  veterinario            usuarios?       @relation("EventoSanitarioVeterinario", fields: [usuario_veterinario_id], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
}

model evento_insumo {
  evento_sanitario_id Int
  insumo_id           Int
  cantidad            Int
  deleted_at          DateTime?        @db.Timestamp(6)
  evento_sanitario    evento_sanitario @relation(fields: [evento_sanitario_id], references: [evento_sanitario_id], onDelete: NoAction, onUpdate: NoAction)
  insumo              insumos          @relation(fields: [insumo_id], references: [insumo_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([evento_sanitario_id, insumo_id])
}

model alimentacion {
  alimentacion_id     Int       @id @default(autoincrement())
  insumo_id           Int?
  usuario_operador_id Int?
  animal_id           Int?
  cantidad            Int
  fecha               DateTime  @db.Date
  deleted_at          DateTime? @db.Timestamp(6)
  animal              animales? @relation(fields: [animal_id], references: [animal_id], onDelete: NoAction, onUpdate: NoAction)
  insumo              insumos?  @relation(fields: [insumo_id], references: [insumo_id], onDelete: NoAction, onUpdate: NoAction)
  usuario             usuarios? @relation(fields: [usuario_operador_id], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
}

model pesajes {
  pesaje_id           Int       @id @default(autoincrement())
  usuario_operador_id Int?
  animal_id           Int?
  unidad_id           Int?
  peso                Decimal   @db.Decimal(10, 2)
  fecha               DateTime  @db.Date
  deleted_at          DateTime? @db.Timestamp(6)
  animal              animales? @relation(fields: [animal_id], references: [animal_id], onDelete: NoAction, onUpdate: NoAction)
  unidad              unidades? @relation(fields: [unidad_id], references: [unidad_id], onDelete: NoAction, onUpdate: NoAction)
  usuario             usuarios? @relation(fields: [usuario_operador_id], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
}

model produccion_carne {
  produccion_id       Int       @id @default(autoincrement())
  animal_id           Int?
  usuario_operador_id Int?
  fecha               DateTime  @db.Date
  deleted_at          DateTime? @db.Timestamp(6)
  animal              animales? @relation(fields: [animal_id], references: [animal_id], onDelete: NoAction, onUpdate: NoAction)
  usuario             usuarios? @relation(fields: [usuario_operador_id], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
}

model produccion_lechera {
  produccion_id      Int       @id @default(autoincrement())
  usuario_orde単o_id Int?
  animal_id          Int?
  cantidad           Int
  unidad_id          Int?
  fecha              DateTime  @db.Date
  descripcion        String?
  deleted_at         DateTime? @db.Timestamp(6)
  animal             animales? @relation(fields: [animal_id], references: [animal_id], onDelete: NoAction, onUpdate: NoAction)
  unidad             unidades? @relation(fields: [unidad_id], references: [unidad_id], onDelete: NoAction, onUpdate: NoAction)
  usuario            usuarios? @relation(fields: [usuario_orde単o_id], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
}

model evento_monta {
  monta_id               Int                   @id @default(autoincrement())
  usuario_veterinario_id Int?
  animal_hembra_id       Int?
  animal_macho_id        Int?
  tipo_evento_id         Int?
  fecha                  DateTime              @db.Date
  deleted_at             DateTime?             @db.Timestamp(6)
  diagnosticos           diagnostico_pre単ez[]
  hembra                 animales?             @relation("MontaHembra", fields: [animal_hembra_id], references: [animal_id], onDelete: NoAction, onUpdate: NoAction)
  macho                  animales?             @relation("MontaMacho", fields: [animal_macho_id], references: [animal_id], onDelete: NoAction, onUpdate: NoAction)
  tipo_evento            tipo_evento?          @relation(fields: [tipo_evento_id], references: [tipo_evento_id], onDelete: NoAction, onUpdate: NoAction)
  veterinario            usuarios?             @relation(fields: [usuario_veterinario_id], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
}

model diagnostico_pre単ez {
  pre単ez_id             Int           @id @default(autoincrement())
  monta_id               Int?
  usuario_veterinario_id Int?
  metodo                 String?       @db.VarChar(100)
  resultado              Boolean?
  fecha_probable_parto   DateTime?     @db.Date
  fecha                  DateTime      @db.Date
  deleted_at             DateTime?     @db.Timestamp(6)
  monta                  evento_monta? @relation(fields: [monta_id], references: [monta_id], onDelete: NoAction, onUpdate: NoAction)
  veterinario            usuarios?     @relation(fields: [usuario_veterinario_id], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
}

model evento_parto {
  evento_id              Int          @id @default(autoincrement())
  animal_id              Int?
  usuario_veterinario_id Int?
  usuario_operador_id    Int?
  tipo_evento_id         Int?
  descripcion            String?
  fecha                  DateTime     @db.Date
  deleted_at             DateTime?    @db.Timestamp(6)
  animal                 animales?    @relation(fields: [animal_id], references: [animal_id], onDelete: NoAction, onUpdate: NoAction)
  tipo_evento            tipo_evento? @relation(fields: [tipo_evento_id], references: [tipo_evento_id], onDelete: NoAction, onUpdate: NoAction)
  operador               usuarios?    @relation("PartoOperador", fields: [usuario_operador_id], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
  veterinario            usuarios?    @relation("PartoVeterinario", fields: [usuario_veterinario_id], references: [usuario_id], onDelete: NoAction, onUpdate: NoAction)
}
