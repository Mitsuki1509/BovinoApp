create database BovinoDB

CREATE TABLE roles (
    rol_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE finca (
    finca_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(255) NOT NULL,
    descripcion TEXT,
    ubicacion VARCHAR(255),
    deleted_at TIMESTAMP NULL
);

CREATE TABLE usuarios (
    usuario_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    finca_id INT REFERENCES finca(finca_id),
    rol_id INT REFERENCES roles(rol_id),
    nombre VARCHAR(255) NOT NULL,
    correo VARCHAR(255) UNIQUE NOT NULL,
    contraseña VARCHAR(255),
    verificado BOOLEAN DEFAULT FALSE,
    google_oauth BOOLEAN DEFAULT FALSE,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE unidades (
    unidad_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE tipo_insumo (
    tipo_insumo_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(255) NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE insumos (
    insumo_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    tipo_insumo_id INT REFERENCES tipo_insumo(tipo_insumo_id),
    nombre VARCHAR(255) NOT NULL,
    cantidad INT NOT NULL,
    unidad_id INT REFERENCES unidades(unidad_id),
    descripcion TEXT,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE tipo_evento (
    tipo_evento_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(255) NOT NULL,
    padre_id INT REFERENCES tipo_evento(tipo_evento_id), -- para jerarquia
    deleted_at TIMESTAMP NULL
);

CREATE TABLE razas (
    raza_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR(255) NOT NULL,
    descripcion TEXT,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE potreros (
    potrero_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ubicacion VARCHAR(255) NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE lotes (
    lote_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    potrero_id INT REFERENCES potreros(potrero_id),
    descripcion TEXT,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE animales (
    animal_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    animal_madre_id INT REFERENCES animales(animal_id),
    animal_padre_id INT REFERENCES animales(animal_id),
    lote_id INT REFERENCES lotes(lote_id),
    raza_id INT REFERENCES razas(raza_id),
    imagen VARCHAR(255),
    arete VARCHAR(100) UNIQUE NOT NULL,
    sexo CHAR(1) CHECK (sexo IN ('M', 'H')),
    fecha_destete DATE,
    fecha_nacimiento DATE NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE proveedores (
    proveedor_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre_compañia VARCHAR(255) NOT NULL,
    nombre_contacto VARCHAR(255),
    telefono_local CHAR(8) CHECK (telefono_local ~ '^[0-9]{8}$'),
    telefono_completo VARCHAR(20) GENERATED ALWAYS AS ('505' || telefono_local) STORED,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE compras (
    compra_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario_contable INT REFERENCES usuarios(usuario_id),
    proveedor_id INT REFERENCES proveedores(proveedor_id),
    fecha DATE NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE detalle_compras (
    detalle_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    compra_id INT REFERENCES compras(compra_id),
    insumo_id INT REFERENCES insumos(insumo_id),
    precio DECIMAL(10,2) NOT NULL,
    cantidad INT NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE evento_sanitario (
    evento_sanitario_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    animal_id INT REFERENCES animales(animal_id),
    tipo_evento_id INT REFERENCES tipo_evento(tipo_evento_id),
    usuario_veterinario_id INT REFERENCES usuarios(usuario_id),
    usuario_operador_id INT REFERENCES usuarios(usuario_id),
    estado VARCHAR(100),
    diagnostico TEXT,
    tratamiento TEXT,
    fecha_diagnostico DATE,
    fecha DATE NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE evento_insumo (
    evento_sanitario_id INT REFERENCES evento_sanitario(evento_sanitario_id),
    insumo_id INT REFERENCES insumos(insumo_id),
    cantidad INT NOT NULL,
    deleted_at TIMESTAMP NULL,
    PRIMARY KEY (evento_sanitario_id, insumo_id)
);

CREATE TABLE alimentacion (
    alimentacion_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    insumo_id INT REFERENCES insumos(insumo_id),
    usuario_operador_id INT REFERENCES usuarios(usuario_id),
    animal_id INT REFERENCES animales(animal_id),
    cantidad INT NOT NULL,
    fecha DATE NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE pesajes (
    pesaje_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    usuario_operador_id INT REFERENCES usuarios(usuario_id),
    animal_id INT REFERENCES animales(animal_id),
    unidad_id INT REFERENCES unidades(unidad_id),
    peso DECIMAL(10,2) NOT NULL,
    fecha DATE NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE produccion_carne (
    produccion_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    animal_id INT REFERENCES animales(animal_id),
    usuario_operador_id INT REFERENCES usuarios(usuario_id),
    fecha DATE NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE produccion_lechera (
    produccion_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    usuario_ordeño_id INT REFERENCES usuarios(usuario_id),
    animal_id INT REFERENCES animales(animal_id),
    cantidad INT NOT NULL,
    unidad_id INT REFERENCES unidades(unidad_id),
    fecha DATE NOT NULL,
    descripcion TEXT,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE evento_monta (
    monta_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    usuario_veterinario_id INT REFERENCES usuarios(usuario_id),
    animal_hembra_id INT REFERENCES animales(animal_id),
    animal_macho_id INT REFERENCES animales(animal_id),
    tipo_evento_id INT REFERENCES tipo_evento(tipo_evento_id),
    fecha DATE NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE diagnostico_preñez (
    preñez_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    monta_id INT REFERENCES evento_monta(monta_id),
    usuario_veterinario_id INT REFERENCES usuarios(usuario_id),
    metodo VARCHAR(100),
    resultado BOOLEAN,
    fecha_probable_parto DATE,
    fecha DATE NOT NULL,
    deleted_at TIMESTAMP NULL
);

CREATE TABLE evento_parto (
    evento_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    animal_id INT REFERENCES animales(animal_id),
    usuario_veterinario_id INT REFERENCES usuarios(usuario_id),
    usuario_operador_id INT REFERENCES usuarios(usuario_id),
    tipo_evento_id INT REFERENCES tipo_evento(tipo_evento_id),
    descripcion TEXT,
    fecha DATE NOT NULL,
    deleted_at TIMESTAMP NULL
);

-- Usuario con contraseña para login normal
INSERT INTO public.usuarios(
    finca_id, 
    rol_id, 
    nombre, 
    correo, 
    contraseña, 
    verificado, 
    google_oauth
) VALUES (
    1, 
    1, 
    'usuario', 
    'tucorreo@gmail.com', 
    '$2b$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi',--hash de 'password'
    true, 
    true  -- habilitado para Google
);
INSERT INTO public.roles (nombre) VALUES 
('admin'),
('veterinario'),
('operario'),
('contable'),
('ordeño');